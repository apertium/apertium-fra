DELIMITERS = "<.>" "<!>" "<?>" "<..>" "<...>" "<¶>" ;
SOFT-DELIMITERS = "<,>" ;
#OPTIONS += no-inline-sets no-inline-templates ;
OPTIONS += no-inline-templates ;
SUBREADINGS = LTR ; # Alternate, left-to-right (main reading on the left)

SETS

LIST BOS = >>> sent ;
LIST EOS = <<< sent ;

LIST Verb = vblex vbser vbhaver vbmod ;
LIST V = vblex ;
LIST Vconj = pri prs pii ifi pis imp fti ifi cni ;
LIST Vconj_pro = pri prs pii ifi pis fti ifi cni inf ger ;
LIST Pron = prn ;
LIST Haver = vbhaver ;
LIST Ser = vbser ;
LIST Vbmod = vbmod ;
LIST Cm = cm ;
LIST Det = det ;
LIST Def = def ;
LIST Dem = dem ;
LIST Pos = pos ;
LIST Prep = pr ;
LIST Subj = subj ;
LIST A = adj ;
LIST Adv = adv ;
LIST PreAdv = preadv ;
LIST PostAdv = postadv ;
LIST PreDet = predet ;
LIST CnjAdv = cnjadv ;
LIST CnjCoo = cnjcoo ;
LIST CnjSub = cnjsub ;
LIST Num = num ;
LIST Itg = itg ;
LIST Pro = pro ;
LIST Ref = ref ;
LIST Enc = enc ;
LIST Tn = tn ;
LIST Imper = imp ;
LIST Pri = pri ;
LIST Prn = prn ;
LIST N = n ;
LIST N_Adj = n adj ;
LIST NP = np ;
LIST Pref = pref ;
LIST Lpar = lpar ;
LIST Rpar = rpar ;

LIST Rel = rel ;
LIST Interj = ij ;

SET Cnj_Rel = CnjCoo OR CnjSub OR CnjAdv OR Rel ;

SET N_Masc = (n m) OR (n mf) ;
SET N_Fem = (n f) OR (n mf) ;

LIST Masc_strict = m ;
LIST Fem_strict = f ;
LIST Masc = m mf ;
LIST Fem = f mf ;
LIST Mf = mf ;
LIST Nt = nt ;
LIST Sg_strict = sg ;
LIST Pl_strict = pl ;
LIST Sg = sg sp ;
LIST Pl = pl sp ;
LIST Sp = sp ;
LIST Sg_Pl = sg pl ;
LIST M_F = m f ;

SET MascSg = (m sg) OR (m sp) OR (mf sg) OR (mf sp) ;
SET MascPl = (m pl) OR (m sp) OR (mf pl) OR (mf sp) ;
SET FemSg = (f sg) OR (f sp) OR (mf sg) OR (mf sp) ;
SET FemPl = (f pl) OR (f sp) OR (mf pl) OR (mf sp) ;

SET ConcordeSN = MascSg OR MascPl OR FemSg OR FemPl ;
SET ConcordeSP = Sg OR Pl ;

LIST P1 = p1 ;
LIST P2 = p2 ;
LIST P3 = p3 ;
LIST Pers = p1 p2 p3 ;
SET Sg1 = (p1 sg) OR (p1 m sg) OR (p1 f sg) OR (p1 mf sg) ;
SET Sg2 = (p2 sg) OR (p2 m sg) OR (p2 f sg) OR (p2 mf sg) ;
SET Sg3 = (p3 sg) OR (p3 m sg) OR (p3 f sg) OR (p3 mf sg) ;
SET Pl1 = (p1 pl) OR (p1 m pl) OR (p1 f pl) OR (p1 mf pl) ;
SET Pl2 = (p2 pl) OR (p2 m pl) OR (p2 f pl) OR (p2 mf pl) ;
SET Pl3 = (p3 pl) OR (p3 m pl) OR (p3 f pl) OR (p3 mf pl) ;
LIST VSg1 = (vblex p1 sg) (vbser p1 sg) (vbhaver p1 sg) (vbmod p1 sg);
LIST VSg2 = (vblex p2 sg) (vbser p2 sg) (vbhaver p2 sg) (vbmod p2 sg);
LIST VSg3 = (vblex p3 sg) (vbser p3 sg) (vbhaver p3 sg) (vbmod p3 sg);
LIST VPl1 = (vblex p1 pl) (vbser p1 pl) (vbhaver p1 pl) (vbmod p1 pl);
LIST VPl2 = (vblex p2 pl) (vbser p2 pl) (vbhaver p2 pl) (vbmod p2 pl);
LIST VPl3 = (vblex p3 pl) (vbser p3 pl) (vbhaver p3 pl) (vbmod p3 pl);

SET ConcordeSV = Sg1 OR Sg2 OR Sg3 OR Pl1 OR Pl2 OR Pl3 ;

LIST Fin = pri prs pii ifi pis fti cni imp ;
LIST Fin_non_Imp = pri prs pii ifi pis fti cni ;
LIST Ind = pri pii ifi fti ;
LIST Subjunc = prs pis ;
SET Ifi = (ifi) ;
SET Pri = (pri) ;
SET Pii = (pii) ;
SET Fti = (fti) ;
SET Prs = (prs) ;
SET Pis = (pis) ;
SET Cni = (cni) ;
SET Imp = (imp) ;
SET Inf = (inf) ;
SET Ger = (ger) ;
SET PP = (pp) ;
SET IfiSg3 = (ifi p3 sg) ;
SET PriSg3 = (pri p3 sg) ;
SET ConcordeTemps = Pri OR Prs OR Pii OR Ifi OR Pis OR Fti OR Cni OR Imp ;
SET ConcordeTempsPers = IfiSg3 OR PriSg3 ;

LIST unknown = ("\\*.*"r) ;
LIST unknownMajIni = ("\\*[A-ZÀÁÄÂÈÉËÊÍÏÎÒÓÖÔÚÙÜÛÇ].*"r) ;
LIST MajIni = ("\\<[A-ZÀÁÄÂÈÉËÊÍÏÎÒÓÖÔÚÙÜÛÇ].*\\>"r) ;
LIST Majusc = ("\\<[A-ZÀÁÄÂÈÉËÊÍÏÎÒÓÖÔÙÚÜÛÇ][A-ZÀÁÄÂÈÉËÊÍÏÎÒÓÖÔÙÚÜÛÇ]*>"r) ;
LIST MinIni = ("\\<[a-zàáäâèéëêíïîòóöôùúüûç].*\\>"r) ;
LIST ConsInitiale = ("\\<[BCDFGJKLMNPQRSTVWXZbcdfgjklmnpqrstvwxz].*>"r) ;
LIST siecles_nom_romains = ("[IVX][IVX]*"r) ;
LIST NumOrd = "[1-9][0-9]*ème"r ;

LIST Mon_Ton_Son = "mon" "ton" "son" ;
LIST Son = "son" ;
LIST Que = "que" ;
LIST Qui = "qui" ;
LIST Où = "où" ;
LIST À = "à" ;
LIST De = "de" ;
LIST Avoir = "avoir" ;
LIST Falloir = "falloir" ;
LIST Faillir = "faillir" ;
LIST Savoir = "savoir" ;
LIST Saurer = "saurer" ;
LIST Voir = "voir" ;
LIST Vivre = "vivre" ;
LIST Suivre = "suivre" ;
LIST Suiver = "suiver" ;
LIST Demi_pre = "demi_pre" ;
LIST Demi_post = "demi_post" ;
LIST Le = "le" ;
LIST Un = "un" ;
LIST Aucun = "aucun" ;
LIST Fait = "<fait>"i ;
LIST Est = "<est>"i ;
LIST Ouest = "ouest" ;
LIST Je = "je" "moi je" "<moi je>"i "<moi j'>"i "<moi j’>"i "<moi, je>"i "<moi, j'>"i "<moi, j’>"i ;
LIST Tu = "tu" "toi tu" "<toi tu>"i "<toi, tu>"i ;
LIST Il = "il" "elle" "lui il" "<lui il>"i "<eux ils>"i "<lui, il>"i "<eux, ils>"i ;
LIST On = "on" ;
LIST Nous = "nous" ;
LIST Vous = "vous" ;
LIST Me = "me" ;
LIST Te = "te" ;
LIST Se = "se" ;
LIST Lui = "lui" ;
LIST Leur = "leur" ;
LIST Eux = "eux" ;
LIST ToutLeMonde = "tout le monde" ;
LIST En = "en" ;
LIST Depuis = "depuis" ;
LIST Pour = "pour" ;
LIST Pas = "pas" ;
LIST Rien = "rien" ;
LIST Sur = "sur" ;
LIST Ne = "ne" ;
LIST Aussi = "aussi" ;
LIST Même = "même" ;
LIST Plus = "plus" ;
LIST Moins = "moins" ;
LIST AdvComp = "plus" "moins" "beaucoup plus" "beaucoup moins" "un peu plus" "un peu moins" "bien plus" "bien moins" "mieux" "beaucoup mieux" "un peu mieux" "bien mieux" ;
LIST Devoir = "devoir" ;
LIST Être = "être" ;
LIST Comme = "comme" ;
LIST Fondre = "fondre" ;
LIST Fonder = "fonder" ;

# noms communs avec des sens différents selon le genre
LIST Tour = "tour" ;
LIST Foudre = "foudre" ;
LIST Mort = "mort" ;
LIST Barde = "barde" ;
LIST Beigne = "beigne" ;
LIST Cave = "cave" ;
LIST Claque = "claque" ;
LIST Livre = "livre" ;
LIST Faune = "faune" ;
LIST Geste = "geste" ;
LIST Critique = "critique" ;
LIST Marine = "marine" ;
LIST Page = "page" ;
LIST Manoeuvre = "manœuvre" ;
LIST Moule = "moule" ;
LIST Mode = "mode" ;
LIST Modele = "modèle" ;
LIST Moufle = "moufle" ;
LIST Rade = "rade" ;
LIST Solde = "solde" ;
LIST Basket = "basket" ;
LIST Tennis = "tennis" ;
LIST Ranger = "ranger" ;
LIST Clim = "clim" ;
LIST Curie = "curie" ;
LIST Info = "info" ;
LIST Relache = "relâche" ;
LIST Memoire = "mémoire" ;
LIST Rue = "rue" ;
LIST Statuaire = "statuaire" ;
LIST Teneur = "teneur" ;
LIST Bien = "bien" ;
LIST MiTemps = "mi-temps" ;
LIST Paillasse = "paillasse" ;
LIST Cide = "homicide" "féminicide" "parricide" "matricide" "fratricide" "régicide" "magnicide" ;
LIST Inceste = "inceste" ;
LIST Parano = "parano" ;
LIST Don = "don" ;
LIST Beta = "bêta" ;
LIST Chantilly = "chantilly" ;
LIST Collab = "collab" ;
LIST Faux = "faux" ;
LIST Platine = "platine" ;
LIST Pub = "pub" ;
LIST Trouble = "trouble" ;
LIST Vapeur = "vapeur" ;
LIST Vase = "vase" ;

LIST Fil = "fil" ;
LIST Fils = "fils" ;
LIST Foi = "foi" ;
LIST Fois = "fois" ;
LIST Avar = "avar" ;
LIST Avare = "avare" ;
LIST Cour = "cour" ;
LIST Cours = "cours" ;
LIST Amazigh = "amazigh" ;
LIST Amazighe = "amazighe" ;
LIST Mille = "mille" ;
LIST Mil = "mil" ;
LIST Ete = "été" ;
LIST Etayer = "étayer" ;
LIST Somme = "somme" ;
LIST As = "as" ;
LIST Pique = "pique" ;
LIST Politique = "politique" ;
LIST Commune = "commune" ;
LIST Primaire = "primaire" ;
LIST Nouvelle = "nouvelle" ;
LIST Peu = "peu de" ;
LIST Helas = "hélas" ;
LIST Des = "dès" ;
LIST Juste = "juste" ;
LIST Entre = "entre" ;
LIST Contre = "contre" ;
LIST Devant = "devant" ;
LIST Pendant = "pendant" ;
LIST Durant = "durant" ;
LIST Puis = "puis" ;
LIST Point = "point" ;
LIST Or = "or" ;
LIST Si = "si" ;
LIST S = "<s'>"i "<s’>"i;
LIST Fort = "fort" ;
LIST Ouvrir = "ouvrir" ;
LIST Ouvrer = "ouvrer" ;
LIST Continu = "continu" ;
LIST Continuer = "continuer" ;
LIST Mystique_pers = "mystique_pers" ;
LIST Mystique_syst = "mystique_syst" ;
LIST Pupille_pers = "pupille_pers" ;
LIST Pupille_anat = "pupille_anat" ;
LIST Quitte = "quitte" ;
LIST Mai = "mai" ;
LIST Mais = "mais" ;
LIST Rose = "rose" ;
LIST Roue = "roue" ;
LIST Tout = "tout" ;
LIST Vers = "vers" ;
LIST Envers = "envers" ;
LIST Correspondant = "correspondant" ;
LIST Jouer_Faire = "jouer# de" "faire# de" ;
LIST Instrument = "piano" "orgue" "clavecin" "clavicorde" "clavier" "violon" "alto" "violoncelle" "contrebasse" "flûte" "hautbois" "clarinette" "basson" "trompette" "cornet" "guitare" "mandoline" "basse" "tambour" "batterie" "accordéon" "cornemuse" ;
LIST Famille = "mère" "père" "frère" "sœur" "oncle" "tante" "neveu" "nièce" "fils" "fille" "grand-père" "grand-mère" "petit-fils" "petite-fille" "cousin" "parent" "enfant" "petit-enfant" "parrain" "marraine" ;
LIST UniteTemps = "seconde" "minute" "heure" "jour" "journée" "semaine" "mois" "an" "année" "lustre" "décennie" "décade" "siècle" "millénaire" ;
LIST Jours = "lundi" "mardi" "mercredi" "jeudi" "vendredi" "samedi" "dimanche" ;
LIST Mois = "janvier" "février" "mars" "avril" "mai" "juin" "juillet" "août" "septembre" "octobre" "novembre" "décembre" ;
SET Dignite = ("pape") OR ("patriarche") OR ("évêque") OR ("archevêque") OR ("saint") OR ("saint") OR ("apôtre") OR ("empereur") OR ("roi") OR ("tsar") OR ("vice-roi") OR ("régent") OR ("prince") OR ("infant") OR ("dauphin") OR ("comte") OR ("comtesse") OR ("vicomte") OR ("vicomtesse") OR ("duc") OR ("duchesse") OR ("grand-duc") OR ("grande-duchesse") OR ("archiduc") OR ("archiduchesse") OR ("marquis") OR ("baron") ;

LIST À = "à" ;

SET CM = (cm) OR (lpar) OR (rpar) OR ("<;>") ;
LIST Excl = "!" ;

LIST Title = "<[A-ZÉÈÊ][a-zâéèêîôû]\+>"r ;

SET Ant = (np ant) ;
SET Cog = (np cog) ;
SET Ant_Cog = Ant OR Cog ;
SET Top = (np top) ;
SET Al = (al) ;
SET Acr = (acr) ;

SET DetDef = (det def) ;
SET DetDem = (det dem) ;
SET DetPos = (det pos) ;
SET DetInd = (det ind) ;
SET AdjInd = (adj ind) ;

SET QUI-QUE = Que | Qui ;

SET CLB = Subj | Cm ;

SET Noun_Adj = N OR A ;
SET Noun_Adj_PP = N OR A OR PP ;
SET Noun_NP = N OR NP ;
SET Adj_PP = A OR PP ;
SET Adv_PreAdv = Adv OR PreAdv ;
SET Cnj_Rel_End = BOS OR CnjCoo OR CnjSub OR CnjAdv OR Rel OR Inf ;
SET Cnj_Rel_End_NoInf = BOS OR CnjCoo OR CnjSub OR CnjAdv OR Rel ;

# verbes Vblex que typiquement impliquen subjonctif
SET VerbSubj = ("vouloir") OR ("désirer") OR ("souhaiter") OR ("proposer") OR ("plaire") OR ("exiger") OR ("réclamer") OR ("demander") OR ("espérer") ;
# verbes Vblex que typiquement impliquen indicatif
SET VerbInd = ("dire") OR ("annoncer") OR ("penser") OR ("croire") ;
# verbes qui peuvent avoir un attribut
SET VerbAttr = Ser OR ("sembler") OR ("paraître") OR ("paraitre") ;

SET AdjOrd = ("premier") OR ("prime") OR ("second") OR ("deuxième") OR ("troisième") OR ("quatrième") OR ("cinquième") OR ("sixième") OR ("septième") OR ("huitième") OR ("neuvième") OR ("dixième") OR ("dernier") OR NumOrd ;
# adjectifs qui souvent vont devant le nom
SET AdjPre = ("ancien") OR ("vieil") OR ("nouveau") OR ("futur") OR ("grand") OR ("petit") OR ("majeur") OR ("bon") OR ("mal") OR ("mauvais") OR ("meilleur") OR ("pire") OR ("pauvre") OR ("haut") OR ("bas") OR ("seul") OR ("célèbre") OR ("vrai") OR ("faux") OR ("beau") OR ("sale") OR ("large") OR ("long") OR ("saint") OR ("sacré") OR ("faible") OR ("multiple") OR ("cher") OR ("gros") OR ("principal") OR ("vrai") OR ("faux") ;

SET NoteMusicale = ("do" m) OR ("ut" m) OR ("ré" m) OR ("mi" m) OR ("fa" m) OR ("sol" m) OR ("la" m) OR ("si" m) ;

SET Trencat = ("tiers") OR ("quart") ;
SET Barrera_Inicial_SN = BOS OR Prep OR CnjSub OR CnjAdv OR Verb OR Rel ;	# Verb és perillós per la ambigüitat, però en general, prolífic
SET Barrera_Inicial_Estrict_SN = BOS OR Prep OR CnjSub OR CnjAdv OR Rel ;
SET Barrera_Final_SN = EOS OR Prep OR Det OR CnjSub OR CnjAdv OR Verb OR Rel OR Pro ;	# Verb és perillós per la ambigüitat, però en general, prolífic
SET Barrera_Final_Estrict_SN = EOS OR (":") OR Prep OR Det OR CnjSub OR CnjAdv OR Rel OR Tn OR Pro OR Itg OR Verb + Pers OR Verb + Inf OR Verb + Ger OR ("avant") OR ("après") OR ("pendant") OR ("sous") OR ("depuis") OR ("vers") OR ("envers") OR ("ver") ;

SECTION

SELECT N IF (0 ("<la>")) (1 ("<majeur>") OR ("<mineur>") OR ("<bémol>") OR ("<dièse>")) ;
SELECT N IF (0 ("<la>")) (1 ("do") OR ("ut") OR ("ré") OR ("mi") OR ("fa") OR ("sol") OR ("la") OR ("si")) ;
SELECT N IF (0 ("<la>")) (-1 ("do") OR ("ut") OR ("ré") OR ("mi") OR ("fa") OR ("sol") OR ("la")) ;
SELECT N IF (0 ("<la>")) (-1C NoteMusicale) (-1 NoteMusicale) ;
SELECT N IF (0 Si) (1 ("majeur") OR ("mineur") OR ("bémol") OR ("dièse")) ;
SELECT N IF (0 Si) (1 ("do") OR ("ut") OR ("ré") OR ("mi") OR ("fa") OR ("sol") OR ("la") OR ("si")) ;
SELECT N IF (0 Si) (-1 ("do") OR ("ut") OR ("ré") OR ("mi") OR ("fa") OR ("sol") OR ("si")) ;
SELECT N IF (0 ("<si>")) (-1C NoteMusicale) (-1 NoteMusicale) ;
SELECT N IF (0 NoteMusicale) (1C NoteMusicale) (2C NoteMusicale) ;
SELECT N IF (-1C NoteMusicale) (0 NoteMusicale) (1C NoteMusicale) ;
SELECT N IF (-2C NoteMusicale) (-1C NoteMusicale) (0 NoteMusicale) ;
SELECT N IF (0 NoteMusicale) (1 CM) (2 NoteMusicale) (3 ("et") OR ("ou")) (4 NoteMusicale) ;
SELECT N IF (-2 NoteMusicale) (-1 CM) (0 NoteMusicale) (1 ("et") OR ("ou")) (2 NoteMusicale) ;
SELECT N IF (-4 NoteMusicale) (-3 CM) (-2 NoteMusicale) (1 ("et") OR ("ou")) (0 NoteMusicale) ;
SELECT N IF (0 NoteMusicale) (1 CM) (2C NoteMusicale) (3 CM) (4C NoteMusicale) ;
SELECT N IF (-2C NoteMusicale) (-1 CM) (0 NoteMusicale) (1 CM) (2C NoteMusicale) ;
SELECT N IF (-4C NoteMusicale) (-3 CM) (-2C NoteMusicale) (1 CM) (0 NoteMusicale) ;
REMOVE N IF (0 ("la")) ;
REMOVE N IF (0 Si) ;

REMOVE Top IF (-1 BOS) (0 ("<Les>")) ;
REMOVE Top IF (0 ("<Les>")) (1 N + Pl OR A + Pl OR NP + Pl OR Num OR unknown) ;
REMOVE Top IF (0 ("<Les>")) (1 Adv_PreAdv) (2 N + Pl OR A + Pl) ;

SELECT N IF (0 ("radio")) (0 (META:/-/r)) (1 ("télévision")) ;
SELECT Pref IF (0 Pref) (0 (META:/-/r)) (1 N OR A OR Verb) ;
REMOVE Pref ;

SELECT N IF (-1 MinIni) (0 ("<Y>")) ;
REMOVE N IF (0 ("<y>"i)) ;

REMOVE Cog IF (-1 DetDef) (0 Cog) ;
REMOVE Cog IF (-1 DetInd) (0 Cog) ;
REMOVE Cog IF (-1 En) (0 Cog) ;
REMOVE Ant IF (-1 DetDef) (0 Ant) ;
REMOVE Ant IF (-1 DetInd) (0 Ant) ;
REMOVE Ant IF (-1 En) (0 Ant) (0 Top OR Al) ;
REMOVE Cog IF (-1 EOS) (0 ("Remarque")) (NOT 1 CnjCoo) (NOT 1 Verb + P3 + Sg) ;
REMOVE NP IF (-1 EOS) (0 ("Remarque")) ;
REMOVE NP IF (-1 (<<<)) (0 ("Remarque")) ;
SELECT N IF (-1 EOS) (0 ("Remarque")) ;
REMOVE Cog IF (-1 (sent)) (0 ("Remarque")) ;
REMOVE Cog IF (0 ("Remarque")) ;
REMOVE Cog IF (0 ("<XI>")) ;

REMOVE Cog IF (0 ("Nouveau")) (0 (META:/-/r)) ;		# Nouveau-Mexique

LIST N_NP_ini = "roi" "reine" "prince" "maréchal" "chevalier" "dame" "frère" "chapelle" "détroit" "rue" "court" "groupe" ;
REMOVE N + Sg IF (-1 BOS) (0 NP LINK NOT 0 N_NP_ini) (NOT 1 CM) (1* V OR Ser BARRIER (":") OR EOS) ;	# Fred es mort ; Mair, vòs que’t haci ; Vacas e vetèths qu’arribavan
REMOVE A + Sg IF (-1 BOS) (0 NP) (NOT 1 N + Sg) (NOT 1 De) (NOT 1 CM) (NOT 1* ("!")) (1* V OR Ser  BARRIER (":") OR EOS) ;	# Fred es mort

SELECT Prep IF (-1 ("Jean")) (0 ("sans")) (1 ("terre")) ;

SELECT NP IF (0 N OR NP) (1 NP) (0 (META:/-/r)) (NOT 0 ("bas") OR ("haut")) ;	# Pierre-Michel
SELECT Ant IF (0 Ant) (1C Ant) (0 (META:/-/r)) ;				# Jean-René
SELECT Ant IF (-1C Ant) (0 Ant) (-1 (META:/-/r)) ;
SELECT Cog IF (0 Cog) (1C Cog) (0 (META:/-/r)) ;
SELECT Cog IF (-1C Cog) (0 Cog) (-1 (META:/-/r)) ;
SELECT Cog IF (0 Cog OR Ant) (-1C Ant) (NOT 1 Cog) ;

SELECT Top IF (-2 Ant) (-1 De) ;					# Louis de Lorraine
SELECT Top IF (-3 Ant) (-2 siecles_nom_romains OR ("<Ier>")) (-1 De) ;	# Louis II de Lorraine
SELECT Ant IF (1 De) (2 Top) ;						# Michel de Lorraine
SELECT Ant IF (1 siecles_nom_romains OR ("<Ier>")) (2 De) (3 Top) ;	# Michel II de Lorraine
SELECT Top IF (-2 ("ville") OR ("cathédrale") OR ("église") OR ("aéroport") OR ("port")) (-1 De) ;
SELECT Top IF (-2 ("concile") OR ("parlement") OR ("constitution") OR ("traité") OR ("déclaration")) (-1 De) ;
SELECT Top IF (-2 ("guerre") OR ("conquête") OR ("annexion") OR ("siège") OR ("expédition")) (-1 De) (NOT 0 ("Trente")) ;
SELECT Top IF (-2 ("université")) (-1 De) ;				# université de Paris VII
SELECT Ant IF (1 siecles_nom_romains OR ("<Ier>")) ;			# Michel II
SELECT Top IF (1C Top) (0 (META:/-/r)) ;
SELECT Top IF (-1C Top) (-1 (META:/-/r)) ;

SELECT Ant_Cog IF (0 Cog OR Ant) (1C Cog) ;
SELECT Ant OR Cog IF (0 Ant OR Cog) (1C Ant OR Cog) (0 (META:/-/r)) ;		# Charles-Michel
SELECT Ant OR Cog IF (-1C Ant OR Cog) (0 Ant OR Cog) (-1 (META:/-/r)) ;		# Charles-Michel
SELECT Ant IF (0 Ant) (1C Ant) (0 (META:/-/r)) ;
SELECT Cog IF (0 Cog) (1C Cog) (0 (META:/-/r)) ;
SELECT Ant IF (-1C Ant) (0 Ant) (-1 (META:/-/r)) ;
SELECT Cog IF (-1C Cog) (0 Cog) (-1 (META:/-/r)) ;
SELECT Ant IF (NOT -1 Ant) (0C Ant OR Cog) (1 Cog) (NOT 0 (META:/-/r)) ;	# Albin Michel; Claude Étienne Michel
SELECT Ant IF (0 Ant) (1C Ant OR Cog) (NOT 0 (META:/-/r)) ;
SELECT Cog IF (-1C Ant) (0 Cog) (NOT -1 (META:/-/r)) (NOT 1 Cog OR unknownMajIni) ;
SELECT Masc_strict IF (-2 Det + Def + MascSg) (-1 Noun_Adj + MascSg) (0C Ant) ;	# l'empereur Claude
SELECT Fem_strict IF (-2 Det + Def + FemSg) (-1 Noun_Adj + FemSg) (0C Ant) ;	# la belle Claude
SELECT Masc_strict IF (0 Ant + Masc_strict) (1C Ant + Masc_strict) ;
SELECT Fem_strict IF (0 Ant + Fem_strict) (1C Ant + Fem_strict) ;
SELECT Masc_strict IF (-1C Ant + Masc_strict) (0 Ant + Masc_strict) ;
SELECT Fem_strict IF (-1C Ant + Fem_strict) (0 Ant + Fem_strict) ;

REMOVE N IF (NOT -1 Det) (0 ("Alain")) ;
REMOVE A IF (0 ("Alain")) ;
SELECT Ant IF (0 ("René") OR ("Renée") OR ("Sabine") OR ("Marc") OR ("Pierre") OR ("Jean")) (1 Ant OR NP OR unknownMajIni) ;
REMOVE Ant IF (0 ("Beau")) (NOT 1 Ant OR NP OR unknownMajIni) ;
REMOVE Ant IF (0 ("Moïse")) (NOT 1 Ant OR NP OR unknownMajIni) ;
REMOVE Ant IF (0 ("Lourdes")) (NOT 1 Ant OR NP OR unknownMajIni) ;
SELECT Masc_strict IF (0 ("Camille")) (1 ("Pissarro")) ;
SELECT Cog IF (-1 ("Édouard")) (0 ("Philippe")) ;
SELECT Ant IF (0 ("Édouard")) (1 ("Philippe")) ;
SELECT Ant IF (0 ("Luther")) (1 Cog OR unknownMajIni) ;
SELECT Cog IF (0 ("Luther")) (NOT 1 Cog OR unknownMajIni) ;

SELECT Fem IF (0 ("Simone")) ;

SELECT Masc_strict IF (0 ("Antigone")) (1 ("le")) (2 ("borgne")) ;
SELECT Masc_strict IF (0 ("Antigone")) (1 ("\\<[IXV]>"r)) ;
SELECT Fem_strict IF (0 ("Antigone")) ;
SELECT Fem_strict IF (0 ("Andromaque")) ;

SELECT Masc_strict IF (0 ("Cassandre")) (1* ("Macédoine") OR ("Roxanne") OR ("Alexandre") OR ("Antipater") OR ("Ptolémée") OR ("roi") + Masc OR ("diadoque")) ;
SELECT Masc_strict IF (0 ("Cassandre")) (-1* ("Macédoine") OR ("Roxanne") OR ("Alexandre") OR ("Antipater") OR ("Ptolémée") OR ("roi") + Masc OR ("diadoque")) ;
SELECT Fem_strict IF (0 ("Cassandre")) ;

SELECT Ant + Masc_strict IF (0 Ant) (1 Det + Def + Sg + Masc) (2 Noun_Adj + Sg + Masc + MajIni) ;
SELECT Ant + Fem_strict IF (0 Ant) (1 Det + Def + Sg + Fem) (2 Noun_Adj + Sg + Fem + MajIni) ;
SELECT Ant + Masc_strict IF (0 Ant) (1 Det + Def + Sg + Masc) (2 unknownMajIni) ;
SELECT Ant + Masc_strict IF (0 Ant) (1 siecles_nom_romains OR ("<Ier>")) ;		# Constance II

REMOVE Ant IF (-1 ("banque")) (NOT 1 Cog OR Ant) ;

SELECT Top IF (-2C Ant) (-1 ("<de>")) (0C Cog OR Ant OR Top) ;
SELECT Ant IF (0C Cog OR Ant OR Top) (1 ("<de>")) (2C Top) ;	# Maurice de Saxe
REMOVE Top IF (0 Cog OR Ant OR Top) (1 unknownMajIni) (NOT -1 ("de")) ;
SELECT Ant IF (NOT -1 Cog OR Ant) (0C Cog OR Ant) (1 unknownMajIni) ; # Léon Verguet
REMOVE (top) IF (0C NP) (0 (cog)) (0 (top)) (-1 (sent)) (<*-1 ("\\<[A-ZÀÁÄÂÈÉËÊÍÏÎÒÓÖÔÚÙÜÛÇ]\\>"r) LINK 1 (sent)); # E. Toulouse
REMOVE (cog) IF (0C NP) (0 (cog)) (0 (top)) (NOT 1 (ant) OR (cog)) (-1 BOS); # Paris ; Marseille ; Toulouse
SELECT Top IF (0 ("Paris")) (NOT -1 Ant_Cog) ;
SELECT Top IF (0 ("Marseille")) (NOT -1 Ant_Cog) ;
SELECT Top IF (0 ("Toulouse")) (NOT -1 Ant_Cog) ;

SELECT Ant IF (-1 ("dieu") OR ("déesse")) ;

SELECT Ant IF (-1 (";") OR (":")) (1 Ant OR Cog OR unknownMajIni) ;

SELECT Top IF (-2 ("ville") OR ("aéroport") OR ("port") OR ("royaume") OR ("principauté") OR ("grand-duché") OR ("duché") OR ("marquisat") OR ("comté") OR ("baronnie") OR ("seigneurie") OR ("archevêché") OR ("évêché")) (-1 ("de")) (0 Cog OR Ant) ;
SELECT Top IF (-2 Dignite) (-1 ("de")) (0 Top) ;
SELECT Top IF (-2 ("aller") OR ("voyager") OR ("arriver") OR ("partir") OR ("filer")) (-1 ("à") OR ("de")) ;
SELECT Top + FemSg IF (-2 ("aller") OR ("voyager") OR ("arriver") OR ("partir")) (-1 ("en")) ;
SELECT Top IF (-3 ("aller") OR ("voyager") OR ("arriver") OR ("partir") OR ("filer")) (-2 ("à") OR ("de")) (-1 Det + &&ConcordeSN) (0 Top + &&ConcordeSN) ;

REMOVE Al IF (-1 Ant OR Cog) (0 Ant OR Cog) ;
REMOVE Top IF (-1 Ant OR Cog) (0 Ant OR Cog) ;
REMOVE Al IF (0 Ant OR Cog) (1 Ant OR Cog) ;
REMOVE Top IF (0 Ant OR Cog) (1 Ant OR Cog) ;
SELECT Top IF (-1 Lpar) (0 Cog) (1 Rpar);

SELECT Top IF (-2C Al) (-1 ("de")) (0 Cog OR Ant) ;     # Estivada de Rodez

SELECT Top IF (0 Top) (1 CnjCoo) (2C Top) ;		# Pau et Oloron
SELECT Top IF (-2C Top) (-1 CnjCoo) (0 Top) ;		# Oloron et Pau
SELECT Top IF (0 Top) (1 CM) (2C Top) (3 CnjCoo) ;	# Pau, Oloron et ...
SELECT Top IF (-2 Top) (-1 CM) (0 Top) (1 CnjCoo) ;	# Oloron, Pau et ...
SELECT Top IF (0 Top) (1 CM) (2 Top) (3 CM) (4C Top) ;
SELECT Top IF (0 Top) (1 CM) (2C Top) (3 CM) (4 Top) ;
SELECT Ant_Cog IF (0 Ant_Cog) (1 CnjCoo) (2C Ant_Cog) ;		# Pau et Jan
SELECT Ant_Cog IF (-2C Ant_Cog) (-1 CnjCoo) (0 Ant_Cog) ;	# Jan et Pau
SELECT Ant_Cog IF (0 Ant_Cog) (1 CM) (2C Ant_Cog) (3 CnjCoo) ;	# Pau, Jan et ...
SELECT Ant_Cog IF (-2 Ant_Cog) (-1 CM) (0 Ant_Cog) (1 CnjCoo) ;	# Jan, Pau et ...
SELECT Ant_Cog IF (0 Ant_Cog) (1 CM) (2 Ant_Cog) (3 CM) (4C Ant_Cog) ;
SELECT Ant_Cog IF (0 Ant_Cog) (1 CM) (2C Ant_Cog) (3 CM) (4 Ant_Cog) ;
SELECT Al IF (0 Al) (1 CnjCoo) (2C Al) ;
SELECT Al IF (-2C Al) (-1 CnjCoo) (0 Al) ;
SELECT Al IF (0 Al) (1 CM) (2C Al) (3 CnjCoo) ;
SELECT Al IF (-2 Al) (-1 CM) (0 Al) (1 CnjCoo) ;
SELECT Al IF (0 Al) (1 CM) (2 Al) (3 CM) (4C Al) ;
SELECT Al IF (0 Al) (1 CM) (2C Al) (3 CM) (4 Al) ;

SELECT Top IF (-1 De) (0 Top) (1 ("à") OR ("jusqu'à")) (2 Top OR unknownMajIni) ;          # de Pau à Oloron
SELECT Top IF (-3 De) (-2 Top OR unknownMajIni) (-1 ("à") OR ("jusqu'à")) (0 Top) ;        # d'Oloron à Pau

SELECT NP IF (0 NP LINK NOT 0 Prep OR Prn OR Det) (-1 BOS) (NOT 0 ("grand") OR ("fort")) (NOT 0 V + $$Pers + $$Sg_Pl LINK 1 Tn + $$Pers + $$Sg_Pl) ;
	## Sais-tu

#SELECT NP IF (0 NP) (0 N OR A OR PP) (-1 BOS) (1C Verb) ;		# René vient
#SELECT NP IF (0 NP) (0 N OR A OR PP) (-1 BOS) (1 Adv) (2C Verb) ;	# René ne vient pas

SELECT N IF (0 ("<Point>"));
SELECT A IF (-1 ("carte")) (0 ("orange")) ;

REMOVE NP IF (-1 ("1er")) (0 ("<Janvier>") OR ("<Mars>") OR ("<Avril>") OR ("<Mai>") OR ("<Juillet>")) ;
REMOVE NP IF (-1 Num) (0 ("<Janvier>") OR ("<Mars>") OR ("<Avril>") OR ("<Mai>") OR ("<Juillet>")) ;

REMOVE Ant_Cog IF (-1/* Det + &&ConcordeSN) (0 Noun_Adj + &&ConcordeSN) ;	# un Français
REMOVE Top IF (-1/* Det + &&ConcordeSN) (0 Noun_Adj + &&ConcordeSN) (NOT -1/* Det + Def) ;	# un Français
REMOVE Ant_Cog IF (-1 ("<des>"i)) (0 Noun_Adj + Pl) ;
REMOVE Top + Sg IF (-1 ("<des>"i)) (0 Noun_Adj + Pl) ;	# des Albigeois
REMOVE Top + Sg IF (-1 ("<aux>"i)) (0 Noun_Adj + Pl) ;	# aux Albigeois
REMOVE Top + Sg IF (-1 Det + Def + Pl_strict) (0 Noun_Adj + Pl) ;	# les Albigeois
REMOVE Top + Pl IF (-1 Det + Def + Sg_strict) (0 Noun_Adj + Sg) ;
#REMOVE Ant_Cog IF (-2/* Det + MascSg) (-1C A + MascSg) (0 N + MascSg) ;
#REMOVE Ant_Cog IF (-2/* Det + MascPl) (-1C A + MascPl) (0 N + MascPl) ;
#REMOVE Ant_Cog IF (-2/* Det + FemSg) (-1C A + FemSg) (0 N + FemSg) ;
#REMOVE Ant_Cog IF (-2/* Det + FemPl) (-1C A + FemPl) (0 N + FemPl) ;
REMOVE NP IF (-1 Det + &&ConcordeSN) (NOT -1 Det + Def + &&ConcordeSN) (0 Noun_Adj + &&ConcordeSN) ;	# un Suisse

SELECT Num IF (0 ("<Trente>")) (1 N + MajIni + Pl) ;
SELECT N IF (0 ("<Roi>")) (1 ("de")) (2 Top OR unknownMajIni) ;
SELECT N IF (0 ("<Rue>")) (1 ("de")) ;
SELECT N IF (0 ("<Chemin>")) (NOT -1 Ant OR Cog) ;
SELECT N IF (-1/* Det + Def) (0 ("Groupe")) ;
SELECT N IF (0 ("Groupe")) (1 A + MascSg) ;
SELECT N IF (0 ("Groupe")) (1 De) ;
SELECT N IF (0 ("Groupe")) (1 ("<[A-Z0-9]>"r)) ;
SELECT N IF (0 ("Groupe")) (1 unknown LINK 0 ("<.>"r)) ;	# Groupe µ
SELECT N IF (0 ("Groupe")) (-1 BOS) (NOT 1 MajIni OR unknownMajIni) ;
REMOVE N IF (0 ("Groupe")) ;
REMOVE NP IF (NOT -1 Ant OR unknownMajIni) (0 ("Portail")) ;

SELECT Acr IF (0 NP) ;
SELECT NP IF (0 NP) (NOT -1 BOS) (NOT -1 (META:/…/r)) (NOT 0 N_NP_ini OR ("parlement") OR ("grand") OR ("internet") OR ("marine") OR ("Français") OR ("Gallois") OR ("Parisien") OR ("Provençal") OR ("Gascon") OR ("Albigeois") OR ("Allemand") OR ("noël") OR ("justice") OR ("Janvier") OR ("Avril") OR ("Juillet") OR ("Juillet")) ;
	# Traiem paraules que, per una raó o altra, es posen en majúscules sense ser NP
SELECT Acr IF (NOT -1 BOS) (0 Majusc) (NOT 0 Num) (NOT -1 Majusc) ;	# la ligne A ; Charles V

SELECT Ant_Cog IF (0 Cog OR Ant) (1 Ant_Cog) (NOT 0 ("Rue")) ;		# . Manuel Garcia
REMOVE NP + Sg_strict OR Cog IF (-1 BOS) (0 Pl) (1C Verb + Pl) ;		# Tous ont mangé
REMOVE NP + Pl_strict IF (-1 BOS) (0 Sg) (1C Verb + Sg) ;
REMOVE NP IF (0 ("grand")) (1 ("prix")) ;
REMOVE NP IF (0 ("maréchal")) (1 Cog) ;
REMOVE NP IF (0 ("maréchal")) (1 Ant) (2 Cog) ;
REMOVE NP IF (NOT -1 Ant OR unknownMajIni) (0 ("Français")) ;
REMOVE NP IF (NOT -1 Ant OR unknownMajIni) (0 ("Gallois")) ;
REMOVE NP IF (NOT -1 Ant OR unknownMajIni) (0 ("Gascon")) ;
REMOVE NP IF (NOT -1 Ant OR unknownMajIni) (0 ("Provençal")) ;
REMOVE NP IF (NOT -1 Ant OR unknownMajIni) (0 ("Frère")) ;
REMOVE NP IF (NOT -1 Ant OR unknownMajIni) (0 ("Chapelle")) ;
REMOVE NP IF (0 ("carrière")) (1 ("universitaire")) ;
REMOVE NP IF (0 ("détroit")) (1 ("de")) ;
REMOVE NP IF (-1 ("empire")) (0 ("romain")) ;
REMOVE NP IF (0 ("trente")) (1 ("an")) ;
REMOVE NP IF (-1 BOS) (0 ("cela")) ;
REMOVE A IF (-1 Det + Def) (0 ("internet")) ;
REMOVE A IF (-1 Prep) (0 ("internet")) ;
SELECT A IF (-1 N) (0 ("internet")) ;

SELECT Acr IF (-1 Num) (0 ("<A>") OR ("<V>") OR ("<W>")) ;
SELECT Acr IF (0 ("<A>")) (0 (META:/»/r) OR (META:/"/r));
SELECT Acr IF (0 ("<A>")) (1 ("»")) ;
REMOVE Acr IF (NOT -1 Num) (0 ("<A>")) ;
SELECT Num IF (-1 Ant) (0 ("<V>")) ;

REMOVE V IF (-2C Prep) (-1C A) (0 A OR V) ;
	# avec beaucoup de peine (!!)
REMOVE V IF (-2/* Prep) (-1C A) (0C A OR V) ;
	# des bones notes
	# hors du commun haura lieu

#SELECT NP IF (NOT -1 BOS) (0 Title) ;
  ## Lorsque Marie a fini de compter, elle regarde autour d'elle.

#REMOVE Prs IF (NOT -1* QUI-QUE BARRIER CLB);

LIST amoi_etc = ("à moi") ("à toi") ("à lui") ("à elle") ("à nous") ("à vous") ("à eux") ("à elles") ;

REMOVE SUB:1 Pro IF (0 ("<à lui>"i)) (NOT 1 Pro OR Inf) ;

SELECT SUB:1 Tn IF (-1C Verb LINK NOT 0 PP) (0 amoi_etc) ;	# il fait appel à moi (faire# appel)
SELECT SUB:1 Tn IF (-2C Verb LINK NOT 0 PP) (-1 Adv) (0 amoi_etc) ;
SELECT SUB:1 Tn IF (-3C Verb LINK NOT 0 PP) (-2 Adv) (-1 Adv) (0 amoi_etc) ;
SELECT SUB:1 Tn IF (-2 Haver OR Ser) (-1 PP) (0 amoi_etc) ;	# il a fait appel à moi
SELECT SUB:1 Tn IF (-3 Haver OR Ser) (-2 Adv) (-1 PP) (0 amoi_etc) ;	# il n'a pas fait appel à moi
SELECT SUB:1 Tn IF (-4 Haver OR Ser) (-3 Adv) (-2 Adv) (-1 PP) (0 amoi_etc) ;

SELECT SUB:1 Tn IF (-2 V LINK NOT 0 PP) (-1C N) (0 amoi_etc) ;	# il fait appel à moi (faire + appel)
SELECT SUB:1 Tn IF (-3 V LINK NOT 0 PP) (-2 Adv) (-1C N) (0 amoi_etc) ;	# il ne fait pas appel à moi
SELECT SUB:1 Tn IF (-4 V LINK NOT 0 PP) (-3 Adv) (-2 Adv) (-1C N) (0 amoi_etc) ;
SELECT SUB:1 Tn IF (-2 ("faire")) (-1C N) (0 amoi_etc) ;	# il fait appel à moi (faire + appel)
SELECT SUB:1 Tn IF (-3 ("faire")) (-2 Adv) (-1C N) (0 amoi_etc) ;	# il ne fait pas appel à moi
SELECT SUB:1 Tn IF (-4 ("faire")) (-3 Adv) (-2 Adv) (-1C N) (0 amoi_etc) ;
SELECT SUB:1 Tn IF (-3 Haver OR Ser) (-2 V + PP) (-1C N) (0 amoi_etc) ;	# il a fait appel à moi
SELECT SUB:1 Tn IF (-4 Haver OR Ser) (-3 Adv) (-2 V + PP) (-1C N) (0 amoi_etc) ;	# il n'a pas fait appel à moi
SELECT SUB:1 Tn IF (-5 Haver OR Ser) (-4 Adv) (-3 Adv) (-2 V + PP) (-1C N) (0 amoi_etc) ;

SELECT SUB:1 Tn IF (0 amoi_etc + &&ConcordeSN) (1 ("seul") + &&ConcordeSN) ;	# à moi seul(e)
SELECT SUB:1 Tn IF (0 amoi_etc + Pl) (1 Num) ;	# à nous deux

SELECT SUB:1 Pro IF (0 ("<à lui>"i)) (1C Pro OR Inf) ;
SELECT SUB:1 Pro IF (0 ("<à lui>"i)) (1 Pro) (2 Inf) ;
SELECT SUB:1 Pro IF (0 ("<à lui>"i)) (1 Inf) ;

REMOVE SUB:1 Tn IF (0 amoi_etc) ;

REMOVE Prep IF (-1C PreAdv) ;	# très attendu
SELECT Prep IF (0 ("sauf")) (-1 CM) ;
REMOVE Prep IF (1C EOS) (NOT 0/* Prn OR N) ;
REMOVE Prep IF (1C CnjCoo) (NOT 0/* Prn OR N) ;

REMOVE N IF (0 Fait) (-1 Il) ;
  ## Il fait beau aujourd'hui, il fait très chaud.
SELECT P3 IF (0 Fait) (-1 ("ça") OR ("cela") OR ("ceci")) ;
REMOVE N IF (0 V + P3) (-1 ("ça") OR ("cela") OR ("ceci")) ;
SELECT V IF (-1C Adv) (0 Fait) ;
SELECT V IF (-1 Ne) (0 Fait) (1 Que) ;
REMOVE PP IF (-1 Ne) (0 Fait) (1 Que) ;
  ## ne fait que
REMOVE PP IF (-1 Ne) (0 PP) (0 V + Pers) (1C Adv OR ("pas")) ;
REMOVE PP IF (-1 Ne) (0 PP) (0 V + Pers) (1 Que) ;
SELECT V IF (0 Fait) (1C Inf) ;
SELECT PP IF (-3 Haver) (-2 PP) (-1 CnjCoo) (0 Fait) (1C Inf) ;		# a écrit et fait publier
SELECT PP IF (-2 Pro + P3 + Ref) (-1 Ser + P3) (0 Fait) (1C Inf) ;		# s'est fait connaître
SELECT PP IF (-2 Pro + P3 + Ref) (-1 Ser + Inf) (0 Fait) (1C Inf) ;
SELECT PP IF (-3 Pro + P3 + Ref) (-2 Ser + P3) (-1 Adv) (0 Fait) (1C Inf) ;		# ne s'est pas fait connaître
SELECT PP IF (-3 Pro + P3 + Ref) (-2 Ser + Inf) (-1 Adv) (0 Fait) (1C Inf) ;
SELECT PP IF (-4 Pro + P3 + Ref) (-3 Ser + P3) (-2 Adv) (-1 Adv) (0 Fait) (1C Inf) ;		# ne s'est pas toujours fait connaître
SELECT PP IF (-4 Pro + P3 + Ref) (-3 Ser + Inf) (-2 Adv) (-1 Adv) (0 Fait) (1C Inf) ;
SELECT PP IF (-2 Pro + P1 + Sg) (-1 Ser + P1 + Sg) (0 Fait) (1C Inf) ;
SELECT PP IF (-2 Pro + P2 + Sg) (-1 Ser + P2 + Sg) (0 Fait) (1C Inf) ;
SELECT PP IF (-2 Pro + P1 + Pl) (-1 Ser + P1 + Pl) (0 Fait) (1C Inf) ;
SELECT PP IF (-2 Pro + P2 + Pl) (-1 Ser + P2 + Pl) (0 Fait) (1C Inf) ;
SELECT PP IF (-3 Pro + P1 + Sg) (-2 Ser + P1 + Sg) (-1 Adv) (0 Fait) (1C Inf) ;
SELECT PP IF (-3 Pro + P2 + Sg) (-2 Ser + P2 + Sg) (-1 Adv) (0 Fait) (1C Inf) ;
SELECT PP IF (-3 Pro + P1 + Pl) (-2 Ser + P1 + Pl) (-1 Adv) (0 Fait) (1C Inf) ;
SELECT PP IF (-3 Pro + P2 + Pl) (-2 Ser + P2 + Pl) (-1 Adv) (0 Fait) (1C Inf) ;
SELECT PP IF (-4 Pro + P1 + Sg) (-3 Ser + P1 + Sg) (-2 Adv) (-1 Adv) (0 Fait) (1C Inf) ;
SELECT PP IF (-4 Pro + P2 + Sg) (-3 Ser + P2 + Sg) (-2 Adv) (-1 Adv) (0 Fait) (1C Inf) ;
SELECT PP IF (-4 Pro + P1 + Pl) (-3 Ser + P1 + Pl) (-2 Adv) (-1 Adv) (0 Fait) (1C Inf) ;
SELECT PP IF (-4 Pro + P2 + Pl) (-3 Ser + P2 + Pl) (-2 Adv) (-1 Adv) (0 Fait) (1C Inf) ;
REMOVE PP IF (NOT -3 Haver) (NOT -2 Haver) (NOT -1 Haver) (0 Fait) (1C Inf) ;
  ## fait vendre
  ## n'avoir pas toujours fait vendre

SELECT V IF (0 Fait) (1 Det OR PreDet) ;
SELECT Pri IF (NOT -1 Haver) (NOT -1 Adv) (0 Fait) (1 Det OR PreDet) ;
SELECT Pri IF (NOT -2 Haver) (NOT -2 Adv) (-1 Adv) (0 Fait) (1 Det OR PreDet) ;
SELECT Pri IF (NOT -3 Haver) (-2 Adv) (-1 Adv) (0 Fait) (1 Det OR PreDet) ;
  ## L'empereur fait son entrée dans la ville en 1524.
  ## a fait
  ## n'a pas fait
  ## n'a pas encore fait
REMOVE PP IF (NOT -1 Haver) (NOT -1 Adv) (NOT -1 CM) (0C V) (1C Det OR PreDet) ;
REMOVE PP IF (NOT -2 Haver) (NOT -2 Adv) (NOT -1 CM) (-1 Adv) (0C V) (1 Det OR PreDet) ;
REMOVE PP IF (NOT -3 Haver) (-2 Adv) (-1 Adv) (0C V) (1 Det OR PreDet) ;

REMOVE PP IF (-1 Ant_Cog) (0 P3) (NOT 0 ("dire")) ;				# VeeR fait l'objet de communication
SELECT PP IF (-1 Ant + MascSg OR Cog OR Noun_Adj + MascSg) (0 ("<dit>"i)) (1 ("<«>") OR (META:/«/r) OR (META:/"/r)) ;		# Georges Clemenceau dit « le Tigre »
SELECT PP IF (-1 Ant + MascSg OR Cog OR Noun_Adj + MascSg) (0 ("<dit>"i)) (0 (META:/«/r) OR (META:/"/r)) ;
SELECT PP IF (-1 Ant + MascSg OR Cog OR Noun_Adj + MascSg) (0 ("<dit>"i)) (1 Ant OR Cog OR unknownMajIni) ;		# Pierre Rodriguez dit Lopez
SELECT PP IF (-1 Ant + MascSg OR Cog OR Noun_Adj + MascSg) (0 ("<dit>"i)) (1 Adv) (2 ("<«>") OR (META:/«/r) OR (META:/"/r)) ;
SELECT PP IF (-1 Ant + MascSg OR Cog OR Noun_Adj + MascSg) (0 ("<dit>"i)) (1 Adv) (1 (META:/«/r) OR (META:/"/r)) ;		# Erkanbald dit aussi "Erkembaud" ou "Archambaud"
REMOVE PP IF (-1 Ant_Cog) (0 ("dire") + P3) (NOT 0 (META:/«/r) OR (META:/"/r)) (NOT 1 Ant_Cog OR unknownMajIni) ;

SELECT P3 IF (-2 ("»") OR (META:/»/r) OR (META:/"/r)) (-1 (cm)) (0 ("<dit>"i) OR ("<écrit>"i) OR ("<décrit>"i)) (1 Det OR NP OR unknownMajIni) ;	# ...», dit Georges Clemenceau

REMOVE ("être") IF (-1 Det + Def) (NOT -1 MajIni) (0 Est) (0 MajIni) ;
SELECT N IF (-2 Prep) (-1 Det + Def) (0 Est) (0 MajIni) ;	# vers l'Est
SELECT N IF (-2 ("à") OR ("vers") OR ("de")) (-1 Det + Def) (0 Est) ;	# à l'est
SELECT N IF (-2 Ouest) (-1 Prep) (0 Est) ;			# d'Ouest en Est
SELECT N IF (0 Ouest) (1 Prep) (1 Est) ;			# d'Ouest en Est
SELECT N IF (-2 Est) (-1 Prep) (0 Ouest) ;			# d'Est en Est
SELECT N IF (0 Est) (1 Prep) (2 Ouest) ;			# d'Est en Est
REMOVE Verb IF (-1 Ouest) (-1 (META:/-/r)) (0 Est) ;
REMOVE Verb IF (0 Est) (0 (META:/-/r)) (1 Ouest) ;
SELECT A IF (-1 Top) (0 Est) (0 MajIni) ;			# Jérusalem Est
REMOVE Verb IF (-1 ("nord") OR ("sud") OR ("ouest") OR ("centre")) (-1 (META:/-/r)) (0 Est) ;
REMOVE Verb IF (-1 ("nord") OR ("sud") OR ("ouest")) (0 Est) (NOT 1 PP OR A) ;

REMOVE N IF (0 Est) (-1 Itg OR Rel) ;
REMOVE A IF (0 Est) (-1 Itg OR Rel) ;
  ## Où est Jean ?
SELECT Ser IF (0 Est) (1 Adv) ;
SELECT Ser IF (0 Est) (1 ("en")) (2 N); ## est en conséquence
SELECT Ser IF (0 Est) (1 A) ;
SELECT Ser IF (0 Est) (1 PP) ;
SELECT Ser IF (0 Est) (1 Det) ;
SELECT Ser IF (0 Est) (1 NP) ;
SELECT Ser IF (0 Est) (1 unknown) ;
SELECT Ser IF (NOT -1 DetDef OR ("limite") OR ("frontière") OR ("face") OR ("façade") OR ("côte") OR ("côté")) (0 Est) (NOT 0 MajIni) ;

REMOVE Verb IF (NOT -2 Haver) (NOT -1 Haver) (0 ("parfaire") + PP) ;
REMOVE Verb IF (-2 Haver) (NOT -1 Adv_PreAdv) (0 ("parfaire") + PP) ;
#REMOVE Verb + Pers IF (-1C* Verb + Pers BARRIER CnjAdv OR CnjSub OR Rel) ;	# ne marche pas du tout
#REMOVE Verb + Pers IF (1C* Verb + Pers) ;					# ne marche pas du tout
REMOVE Verb + P3 IF (NOT -1 ("il")) (0 ("parfait")) ; 		# Provisionnel !!!

SELECT Adv IF (0 Pas) (-1 V LINK -1 Ne) ;	# Ils n'ont pas pu jouer dehors.
SELECT Adv IF (0 Pas) (-2 V LINK -1 Ne) (-1 Tn) ;	# Ne sortirent-ils pas ?

REMOVE Fin IF (0 Fin OR NP) (0 Title) (1C Fin) ;
  ## Marie pense qu'elle a vu où Jean est allé
REMOVE Fin IF (-1C V LINK NOT 0 PP) (0 Fin OR N OR A OR PP OR Det) ;
  ## tenir compte de

SELECT ("pouvoir") IF (0 ("paître")) ;


SELECT Vbmod (0 V) (1 Inf) ;
SELECT Vbmod (0 V) (1 Adv) (2 Inf) ;
SELECT Vbmod (0 V) (1 Adv) (1 Adv) (3 Inf) ;
REMOVE Vbmod (0 Devoir + PP) (-1 Ser) ;
REMOVE Vbmod (0 Devoir) (1 ("à")) ;
REMOVE Vbmod (0 V) (NOT 0 Falloir) (NOT 1 Inf OR (":")) (NOT 2 Inf) (NOT 3 Inf) ;

REMOVE Ifi IF (0 Pri + P1) (0 Ifi + P1) ;
REMOVE Ifi IF (0 Pri + P2) (0 Ifi + P2) ;
  ## je vis, tu vis

REMOVE PP IF (-1 Que OR Qui) (0 Verb + P3) (NOT 1 N) ;	# qui atteint
REMOVE A IF (-1 Que OR Qui) (0 Verb + P3) (NOT 1 N) ;	# qui atteint
SELECT Verb IF (-1 Ne) (0 Verb) (1 Pas OR ("jamais") OR ("plus") OR ("guère") OR ("personne") OR ("rien")) ;	# n'atteint pas
SELECT Verb IF (-2 Ne) (-1 Pro) (0 Verb) (1 Pas OR ("jamais") OR ("plus") OR ("guère") OR ("personne") OR ("rien")) ;	# ne l'incendie pas
SELECT Verb IF (-3 Ne) (-2 Pro) (-1 Pro) (0 Verb) (1 Pas OR ("jamais") OR ("plus") OR ("guère") OR ("personne") OR ("rien")) ;	
REMOVE PP IF (-1 Ne) (0 Verb) (1 Pas OR ("jamais") OR ("plus") OR ("guère") OR ("personne") OR ("rien")) ;	# n'atteint pas
REMOVE PP IF (-2 Ne) (-1 Pro) (0 Verb) (1 Pas OR ("jamais") OR ("plus") OR ("guère") OR ("personne") OR ("rien")) ;	# ne l'incendie pas
REMOVE PP IF (-3 Ne) (-2 Pro) (-1 Pro) (0 Verb) (1 Pas OR ("jamais") OR ("plus") OR ("guère") OR ("personne") OR ("rien")) ;	
SELECT P3 IF (-1 ("le")) (NOT -1 MascSg) (0 ("fait") + MascSg) ;	# la fait
SELECT P3 IF (-1 ("le") + MascSg) (0 ("fait")) (1 ("bien") OR ("mal")) ;
SELECT P3 IF (-1 ("le") + MascSg) (0 ("fait")) (1 Adv) (NOT 1 A + MascSg) ;
SELECT Verb IF (-1 N) (0 ("atteint")) (1 Det) ;
SELECT Verb IF (-2 N) (-1 A) (0 ("atteint")) (1 Det) ;

REMOVE PP IF (-1 Det + MascSg) (0 N + MascSg) ;
REMOVE PP IF (-1 Det + MascPl) (0 N + MascPl) ;
REMOVE PP IF (-1 Det + FemSg) (0 N + FemSg) ;	# la revue
REMOVE PP IF (-1 Det + FemPl) (0 N + FemPl) ;

REMOVE N IF (-1 N OR A OR Prn OR CM) (0C Est) (1 A OR PP OR Det) ;
REMOVE A IF (-1 N OR A OR Prn OR CM) (0C Est) (1 A OR PP OR Det) ;
  ## la demande est suffisante
REMOVE N IF (0C Est) (1C PP) ;
REMOVE A IF (0C Est) (1C PP) ;
  ## est lancée
  ## est venu
REMOVE N IF (-1 N OR A OR Prn) (0C Est) (1 Adv OR PreAdv) (2 A OR PP) ;
REMOVE A IF (-1 N OR A OR Prn) (0C Est) (1 Adv OR PreAdv) (2 A OR PP) ;
  ## est très satisfait
REMOVE N IF (-1 N OR A OR Prn) (0C Est) (1 Det) ;
REMOVE A IF (-1 N OR A OR Prn) (0C Est) (1 Det) ;
REMOVE N IF (-1 NP OR unknown) (0C ("<est>")) ;
REMOVE A IF (-1 NP OR unknown) (0C ("<est>")) ;
SELECT N IF (-2 ("à") OR ("vers") OR ("de") OR ("par") OR ("pour")) (-1 Det + Def) (0C Est) ;
SELECT N IF (-1 ("de")) (0C Est) ;
REMOVE N IF (0 ("<Nouvelle>")) (1 NP OR unknown) ;
REMOVE V IF (0 Est) (1 CnjCoo) (2 Ouest) ;

SELECT A IF (-2 Ant + &&ConcordeSN) (-1 Det + Def + &&ConcordeSN) (0 A + MajIni + &&ConcordeSN) ;	# Guillaume le Jeune

#SELECT N IF (-1/* Det) (0C N OR A) (0 Title) (NOT 0 ("grand") OR ("premier") OR ("segonde") OR ("saint")) ;
SELECT N IF (-1/* Det + MascSg) (0C N OR A) (0 N + MascSg) (0 Title) (NOT 0 AdjPre OR AdjOrd) ;
SELECT N IF (-1/* Det + FemSg) (0C N OR A) (0 N + FemSg) (0 Title) (NOT 0 AdjPre OR AdjOrd) ;
SELECT N IF (-1/* Det + MascPl) (0C N OR A) (0 N + MascPl) (0 Title) (NOT 0 AdjPre OR AdjOrd) ;
SELECT N IF (-1/* Det + FemPl) (0C N OR A) (0 N + FemPl) (0 Title) (NOT 0 AdjPre OR AdjOrd) ;
  ## Des Algériens sont tués
  ## le Physique et le Figuré

SELECT N IF (-2/* Det + MascSg) (-1 ("moindre")) (0 N + MascSg) ;
SELECT N IF (-2/* Det + FemSg) (-1 ("moindre")) (0 N + FemSg) ;
SELECT N IF (-2/* Det + MascPl) (-1 ("moindre")) (0 N + MascPl) ;
SELECT N IF (-2/* Det + FemPl) (-1 ("moindre")) (0 N + FemPl) ;

SELECT A IF (0 ("extrême")) (1 ("droite") OR ("gauche")) ;

SELECT A IF (0 ("ancien")) (1 ("premier")) ;	# ancien Premier ministre

SELECT A IF (-1/* Det) (0 ("vague") + Sg) (1 N + Sg) ;	# son vague programme
SELECT A IF (-1/* Det) (0 ("vague") + Pl) (1 N + Pl) ;

#REMOVE V IF (-1 Det + MascSg) (0 N + MascSg) (1 A + MascSg OR De) ;	# le programme nucléaire, le programme de la fête // mais: qui le juge avare
#REMOVE V IF (-1 Det + MascPl) (0 N + MascPl) (1 A + MascPl OR De) ;
#REMOVE V IF (-1 Det + FemSg) (0 N + FemSg) (1 A + FemSg OR De) ;
#REMOVE V IF (-1 Det + FemPl) (0 N + FemPl) (1 A + FemPl OR De) ;

SELECT N IF (-2 ("professeur")) (-1 ("de")) (NOT 1C N) ;

REMOVE Masc_strict IF (NOT -1 Pos + Masc) (NOT -1 Det + Masc_strict) (0 ("physique")) (NOT 1 A + Masc_strict) ;

SELECT N IF (-1 ("langage")) (0 ("machine")) ;

SELECT Inf IF (0 Être) (-1 Pro) (-2 Vbmod) ;
  ## Le spécialiste lorrain du 10 kilomètres peut l'être.

REMOVE Inf IF (-1C Être) (0 Inf) ;
  ## Il fut conseiller principal
REMOVE Inf IF (-2C Être) (-1C Adv) (0 Inf) ;
  ## Il fut successivement conseiller principal

SELECT Haver IF (0 Avoir) (1 PP) ;	# Est-ce que tu as vu Jean ?
SELECT Haver IF (0 Avoir) (1 Adv OR CnjAdv) (2 PP) ;	# il n'a pas fait beau ; il a pourtant fait beau
SELECT Haver IF (0 Avoir) (1 Adv OR CnjAdv) (2 Adv OR CnjAdv) (3 PP) ;	# il n'a pas toujours fait beau ; il n'a pourtant pas fait beau
SELECT Haver IF (-2 ("il") + P3 + Masc + Sg)  (-1 ("y")) (0 Avoir) (NOT 1 PP) ;	# il y a, il y avait
SELECT Haver IF (0 Avoir + P1 + Sg) (1 Tn + P1 + Sg) (2 PP) ;	# ai-je fait
SELECT Haver IF (0 Avoir + P2 + Sg) (1 Tn + P2 + Sg) (2 PP) ;
SELECT Haver IF (0 Avoir + P3 + Sg) (1 Tn + P3 + Sg) (2 PP) ;
SELECT Haver IF (0 Avoir + P1 + Pl) (1 Tn + P1 + Pl) (2 PP) ;
SELECT Haver IF (0 Avoir + P2 + Pl) (1 Tn + P2 + Pl) (2 PP) ;
SELECT Haver IF (0 Avoir + P3 + Pl) (1 Tn + P3 + Pl) (2 PP) ;
SELECT PP IF (-2 Avoir + P1 + Sg) (-1 Tn + P1 + Sg) (0 PP) ;	# ai-je fait
SELECT PP IF (-2 Avoir + P2 + Sg) (-1 Tn + P2 + Sg) (0 PP) ;
SELECT PP IF (-2 Avoir + P3 + Sg) (-1 Tn + P3 + Sg) (0 PP) ;
SELECT PP IF (-2 Avoir + P1 + Pl) (-1 Tn + P1 + Pl) (0 PP) ;
SELECT PP IF (-2 Avoir + P2 + Pl) (-1 Tn + P2 + Pl) (0 PP) ;
SELECT PP IF (-2 Avoir + P3 + Pl) (-1 Tn + P3 + Pl) (0 PP) ;
SELECT Haver IF (0 Avoir + P1 + Sg) (1 Tn + P1 + Sg) (2 Adv) (3 PP) ;	# n'ai-je pas fait
SELECT Haver IF (0 Avoir + P2 + Sg) (1 Tn + P2 + Sg) (2 Adv) (3 PP) ;
SELECT Haver IF (0 Avoir + P3 + Sg) (1 Tn + P3 + Sg) (2 Adv) (3 PP) ;
SELECT Haver IF (0 Avoir + P1 + Pl) (1 Tn + P1 + Pl) (2 Adv) (3 PP) ;
SELECT Haver IF (0 Avoir + P2 + Pl) (1 Tn + P2 + Pl) (2 Adv) (3 PP) ;
SELECT Haver IF (0 Avoir + P3 + Pl) (1 Tn + P3 + Pl) (2 Adv) (3 PP) ;
SELECT PP IF (-3 Avoir + P1 + Sg) (-2 Tn + P1 + Sg) (-1 Adv) (0 PP) ;	# n'ai-je pas fait
SELECT PP IF (-3 Avoir + P2 + Sg) (-2 Tn + P2 + Sg) (-1 Adv) (0 PP) ;
SELECT PP IF (-3 Avoir + P3 + Sg) (-2 Tn + P3 + Sg) (-1 Adv) (0 PP) ;
SELECT PP IF (-3 Avoir + P1 + Pl) (-2 Tn + P1 + Pl) (-1 Adv) (0 PP) ;
SELECT PP IF (-3 Avoir + P2 + Pl) (-2 Tn + P2 + Pl) (-1 Adv) (0 PP) ;
SELECT PP IF (-3 Avoir + P3 + Pl) (-2 Tn + P3 + Pl) (-1 Adv) (0 PP) ;

SELECT V IF (-1 Avoir) (0 Avoir + PP) ;	# Le jeune homme a eu plus de
SELECT V IF (-2 Avoir) (-1 Adv) (0 Avoir + PP) ;	# Le jeune homme n'a pas eu plus de
SELECT V IF (0 Avoir) (1 Que) ;	# il n'a que des problèmes
SELECT V IF (0 Avoir) (1 Adv) (2 Que) (NOT 1 PP) ;
SELECT V IF (0 Avoir) (1 Adv) (2 Adv) (2 Que) (NOT 1 PP) (NOT 2 PP) ;
SELECT V IF (0 Avoir) (1 ("lieu")) ;
SELECT V IF (NOT -1 ("y")) (0C Haver OR V) (1 Det OR Num) (2 N) ;	# Elle a une fille
SELECT V IF (NOT -1 ("y")) (0C Haver OR V) (1 Det) (2 A) (3 N) ;	# Elle a un petit secret
SELECT V IF (NOT -1 ("y")) (0C Haver OR V) (1 Det) (2 PreDet OR PreAdv OR Adv) (3 A) (4 N) ;	# Elle a un tout petit secret ; Elle a un très petit secret
SELECT V IF (0 Avoir) (1C Prep) ;
SELECT V IF (0 Avoir) (1 ("pour")) ;

SELECT V IF (0 Avoir) (1 AdvComp OR ("beaucoup") OR ("peu") OR ("un peu") OR ("assez")) (2 ("de")) ;
SELECT V IF (0 Avoir) (1 Adv) (2 AdvComp OR ("beaucoup") OR ("peu") OR ("un peu") OR ("assez")) (3 ("de")) ;
SELECT V IF (0 Avoir) (1 Adv) (2 Adv) (3 AdvComp OR ("beaucoup") OR ("peu") OR ("un peu") OR ("assez")) (4 ("de")) ;
SELECT V IF (-1 ("en")) (0 Avoir) (1 AdvComp OR ("beaucoup") OR ("peu") OR ("un peu") OR ("assez")) ;
SELECT V IF (-1 ("en")) (0 Avoir) (1 Adv) (2 AdvComp OR ("beaucoup") OR ("peu") OR ("un peu") OR ("assez")) ;
SELECT V IF (-1 ("en")) (0 Avoir) (1 Adv) (2 Adv) (3 AdvComp OR ("beaucoup") OR ("peu") OR ("un peu") OR ("assez")) ;

SELECT V IF (NOT -1 ("y")) (0 Avoir) (1 ("rien")) (NOT 2 PP) ;			# n'a rien de nouveau
SELECT V IF (NOT -1 ("y")) (0 Avoir) (1 Adv) (2 ("rien")) (NOT 3 PP) ;		# n'a toujours rien de nouveau

REMOVE Det IF (0 Det) (1C Det) ;		# beaucoup de ces enfants
REMOVE Det IF (-1C Det) (0 Det) ;
SELECT SUB:1 Prep IF (0 ("<beaucoup de>"i)) (1C Det) ;
REMOVE SUB:1 Prep IF (0 ("<beaucoup de>"i)) ;
REMOVE SUB:1 Prep IF (0 ("<trop de>"i)) ;
REMOVE SUB:1 Prep IF (0 ("<assez de>"i)) ;
REMOVE SUB:1 Prep IF (0 ("<suffisamment de>"i)) ;

REMOVE N IF (-1 AdvComp OR ("beaucoup") OR ("peu") OR ("un peu") OR ("assez")) (0 N OR A) ;

SELECT Haver IF (0 Avoir) (1 Adv) (2 PP) ;
  ## n'ont pas vu, n'ont jamais vu

SELECT N IF (-1 Det) (0 As) (1 De) (2 Pique OR ("cœur") OR ("carreau") OR ("trèfle")) ;
SELECT V IF (0 Avoir) (1C Prep) (NOT 0 ("<avions>"i)) ;
  ## ayant pour ami

SELECT N IF (-1C Num) (0 ("<avions>")) ;
SELECT V IF (0 Avoir) (1 EOS) ;
  ## quels professeurs on va avoir.
## SELECT N IF (0 Avoir) (1 EOS) (-1 Num);	## CAL TREBALLAR-HI!
  ## 2 A.
## SELECT N IF (0 Avoir) (1 EOS) (-1 BOS);	## CAL TREBALLAR-HI!
  ## 2. A.

SELECT Prep IF (-1 BOS) (0 Avoir) (0 À) ;
  ## A la téle

REMOVE Tn IF (0 Qui) ;
SELECT Itg IF (-1 BOS LINK NOT 0 ("[——―]"r)) (0C Itg OR Rel OR CnjSub) ;
  ## Qui s'adresse
SELECT Itg IF (-2 BOS) (-1 Prep) (0C Itg OR Rel OR CnjSub) ;
  ## A qui s'adresse
SELECT Itg IF (-1C Verb LINK NOT 0 PP) (0C Itg OR Rel) ;
  ## je me demande qui
SELECT Itg IF (-2C Verb LINK NOT 0 PP) (-1 Prep) (0C Itg OR Rel) ;
  ## je demande avec qui
SELECT Itg IF (-2C Verb LINK NOT 0 PP) (-1 Adv) (0C Itg OR Rel) ;
  ## je ne demande pas qui
SELECT Itg IF (-3C Verb LINK NOT 0 PP) (-2 Adv) (-1 Prep) (0C Itg OR Rel) ;
  ## je ne demande pas avec qui
SELECT Itg IF (1 ("est-ce que")) ;
  ## où est-ce que

SELECT Itg IF (0 Adv OR Prn) (1 ("est-ce que")) ;
  ## quand est-ce que
  ## qui est-ce que
SELECT Itg IF (0 Adv OR Prn) (1 Verb + P1 + Sg) (1 (META:/-/r)) (2 Tn + P1 + Sg) ;
SELECT Itg IF (0 Adv OR Prn) (1 Verb + P2 + Sg) (1 (META:/-/r)) (2 Tn + P2 + Sg) ;
SELECT Itg IF (0 Adv OR Prn) (1 Verb + P3 + Sg) (1 (META:/-/r)) (2 Tn + P3 + Sg) ;
SELECT Itg IF (0 Adv OR Prn) (1 Verb + P1 + Pl) (1 (META:/-/r)) (2 Tn + P1 + Pl) ;
SELECT Itg IF (0 Adv OR Prn) (1 Verb + P2 + Pl) (1 (META:/-/r)) (2 Tn + P2 + Pl) ;
SELECT Itg IF (0 Adv OR Prn) (1 Verb + P3 + Pl) (1 (META:/-/r)) (2 Tn + P3 + Pl) ;
  ## quand veux-tu

REMOVE Fin_non_Imp IF (-1 BOS) (0 Imper + P2) (NOT 1 Prn + Tn) (NOT 0/* Prn + Tn + P2) ;
REMOVE Fin_non_Imp IF (-2 BOS) (-1 ("«")) (0 Imper + P2) (NOT 1 Prn + Tn + P2) (NOT 0/* Prn + Tn + P2) ;
REMOVE Fin_non_Imp IF (-2 BOS) (-1 CnjCoo) (0 Imper + P2) (NOT 1 Prn + Tn + P2) (NOT 0/* Prn + Tn + P2) ;
REMOVE Fin_non_Imp IF (-3 BOS) (-1 ("«")) (-1 CnjCoo) (0 Imper + P2) (NOT 1 Prn + Tn + P2) (NOT 0/* Prn + Tn + P2) ;
REMOVE Imper IF (NOT 1* Excl) ;
REMOVE Imper IF (-1 Tn) (NOT -1 Lui) ;
REMOVE Imper IF (-2 Tn) (NOT -2 Lui) (-1 Adv) ;

REMOVE Imper IF (-1 Ant OR Cog OR unknown) (0 P3) ;
REMOVE Imper IF (-2 Ant OR Cog OR unknown) (-1 Adv OR Pro) (0 P3) ;
REMOVE Imper IF (-3 Ant OR Cog OR unknown) (-2 Adv) (-1 Pro) (0 P3) ;

SELECT Imper IF (-1 BOS) (1 Excl) ;
SELECT Imper IF (-2 BOS) (-1 Ne) (1 Adv OR Rien) (2 Excl) ;
SELECT Imper IF (-3 BOS) (-2 Ne) (-1 Pro) (1 Adv OR Rien) (2 Excl) ;

#REMOVE A (NOT *-1 Verb BARRIER Cnj_Rel_End_NoInf) (0C Verb OR A LINK NOT *1 Verb) ;
#REMOVE N (NOT *-1 Verb BARRIER Cnj_Rel_End_NoInf) (0C Verb OR N LINK NOT *1 Verb) ;
#REMOVE A (NOT *-1 Verb) (0C Verb OR A LINK NOT *1 Verb) ;
#REMOVE N (NOT *-1 Verb) (0C Verb OR N LINK NOT *1 Verb) ;
  ## Ces règles ne marchent pas pour des tas de phrases dans la presse où il n'y a pas de verbe
  ## Une œuvre romanesque qui célèbre à sa façon l'effervescence de l'Art nouveau.
  ## il était très fier,
  ## Peut-on envisager dans l'avenir une subvention égale au niveau
SELECT Verb (-1 ("qui") OR ("que")) (0C Verb OR A) ;
  ## qui célèbre
SELECT Verb (-1 NP) (0C Verb OR A) ;
  ## Cooper illustre

REMOVE Verb (OC Verb OR A OR N LINK NOT 0 Inf) (1 Être LINK 0 P1 OR P2 OR P3) ;
  ## Si la demande est suffisante
REMOVE Verb (OC Verb OR A) (0 Verb) (0 A) (-1C PreAdv) ;
  ## il était très fier,

# subjonctif après "que"
SELECT Subjunc (*-1 Que BARRIER Cnj_Rel_End) (*-1 VerbSubj LINK NOT 1 Inf) (0C Verb) ;
	# Compte: quiero decirle que me parece muy bien
SELECT Subjunc (*-1 ("bien que") OR ("malgré que") OR ("avant que") OR ("après que") OR ("pour que") OR ("afin que") BARRIER CM OR Cnj_Rel_End) (*-1 VerbSubj LINK NOT 1 Inf) (0C Verb) ;
#SELECT Subjunc (*-1 ("bien que") OR ("avant que") OR ("après que") OR ("pour que") OR ("afin que") BARRIER CM OR Cnj_Rel_End) (0C Verb) ;
REMOVE Pri (*-1 ("bien que") OR ("malgré que") OR ("avant que") OR ("après que") OR ("pour que") OR ("afin que") BARRIER Cnj_Rel_End OR CM) (0 Verb + Prs) ;
SELECT Subjunc (*-1 ("<ce que>"i) OR ("<ce qu'>"i) OR ("<ce qu’>"i) LINK -1 ("à")) (*-1 VerbSubj LINK NOT 1 Inf) (0C Verb) ;

#SELECT Subjunc (*-1 ("bien que") OR ("avant que") OR ("après que") OR ("pour que") BARRIER Cnj_Rel_End) (*-1 VerbSubj) (0C Verb) ;
#SELECT Subjunc (*-1 ("bien que") OR ("avant que") OR ("pour que") OR ("afin que") BARRIER Cnj_Rel_End OR CM) (0C Verb) ;

	# Bien que ces trois royaumes aient été réunis par l'empereur Wudi, les barbares Wuhu ravagent le pays
REMOVE Subjunc (*-1 Que BARRIER Cnj_Rel_End) (*-1 VerbInd LINK NOT 1 Inf) (0C Verb) (0 Pri) ;
#REMOVE Subjunc (*-1 ("lorsque") OR ("puisque") OR ("parce que") OR ("pendant que") BARRIER Cnj_Rel_End) (*-1 VerbInd LINK NOT 1 Inf) (0C Verb) (0 Pri) ;
REMOVE Subjunc (*-1 ("lorsque") OR ("puisque") OR ("parce que") OR ("pendant que") BARRIER Cnj_Rel_End) (0C Verb) (0 Pri) ;
	# pendant qu'il mange
#REMOVE Subjunc (*-1 >>> BARRIER CnjAdv OR CnjSub OR Rel) (NOT -1 ("no") OR ("No") OR ("nunca") OR ("Nunca")) (0C Verb) ;
SELECT Subjunc (*-1 ("être# .*"r) LINK 1 Que) (0C Verb) ;
SELECT Subjunc (*-1 ("être") LINK 1 A LINK NOT 0 ("vrai") LINK 1 Que) (0C Verb) ;
SELECT Subjunc (*-1 ("être") LINK 1 Adv_PreAdv LINK 1 A LINK 1 Que) (0C Verb) ;
	# es común que la persona sienta la certeza
	# es posible que vengas.
	# es bueno que vengas
	# però: són tan variades que en cadascuna d'elles es poden observar patrons
#REMOVE Subjunc (NOT *-1 VerbSubj LINK 1 Que) (0C Verb) ;
REMOVE Subjunc (-1 Tn OR ("on")) (0 Verb) (1 Que + CnjSub) ;
	# on considère que
REMOVE Subjunc (-2 Tn OR ("on")) (-1 Pro) (0 Verb) (1 Que + CnjSub) ;
REMOVE Subjunc (NOT *-1 Que + CnjSub OR ("pour que") OR ("bien que") OR ("malgré que") OR ("avant que") OR ("après que") OR ("afin que")) (0 Verb) ;
SELECT Subjunc (*-1 Que BARRIER Cnj_Rel_End LINK -1 ("sans")) (0C Verb) ;	# sans que le verdict change
SELECT Subjunc (*-1 Que BARRIER Cnj_Rel_End LINK -1 ("falloir")) (0C Verb) ;	# il faut que le verdict change
REMOVE Subjunc (*-1 Que + Rel OR Qui + Rel BARRIER Verb LINK NOT -1 ("sans") OR ("falloir")) (0 Verb) ;
  ## Cette règle a des exceptions: La peur que cette rencontre *change* la face du monde préoccupe l'Europe
REMOVE Subjunc (*-1 ("quand") OR ("où") OR ("comment") OR ("quant") OR ("pourquoi") OR ("lequel") BARRIER Verb) (0 Verb) ;
#REMOVE Subjunc (NOT *-1 Que + CnjSub OR ("avant que") OR ("après que") OR ("afin que") CBARRIER Ind) (0 Verb) ;
  ## Avant qu'il ne vienne chez nous, Stephen Hillenburg refuse plusieurs propositions
REMOVE Subjunc (-1 CnjCoo) (0 VerbInd) ;
REMOVE Subjunc (-2C VerbInd) (-1 CnjCoo) (0 VerbInd) ;
REMOVE Subjunc (0 VerbInd) (1 CnjCoo) (2C VerbInd) ;
REMOVE Subjunc (-3C VerbInd) (-2 CnjCoo) (-1 Tn OR ("on")) (0 VerbInd) ;
REMOVE Subjunc (0 VerbInd) (1 CnjCoo) (2 Tn OR ("on")) (3C VerbInd) ;
#SELECT Subjunc (-2C Subjunc) (-1 CnjCoo) (0 Subjunc) ;	# douteux
#SELECT Subjunc (0 Subjunc) (1 CnjCoo) (2C Subjunc) ;	# douteux

# Prs ou Pis
SELECT Prs IF (-3 Pri) (-2 Que) (0 Prs) (0 Pis) ;
  # il faut que tu choisisses
SELECT Prs IF (-4 Pri) (-3 Adv) (-2 Que) (0 Prs) (0 Pis) ;
  # il faut absolument que tu choisisses
SELECT Prs IF (-5 Pri) (-4 Adv) (-3 Adv) (-2 Que) (0 Prs) (0 Pis) ;
  # il ne faut absolument pas que tu choisisses
SELECT Prs IF (-4 Pri) (-3 Que) (-1 Adv) (0 Prs) (0 Pis) ;
  # il faut que tu ne choisisses pas
SELECT Pis IF (-3 Pii OR Ifi OR Cni) (-2 Que) (0 Prs) (0 Pis) ;
  # il fallait/fallut/faudrait que tu choisisses
SELECT Pis IF (-4 Pii OR Ifi OR Cni) (-3 Adv) (-2 Que) (0 Prs) (0 Pis) ;
  # il fallait/fallut/faudrait absolument que tu choisisses
SELECT Pis IF (-5 Pii OR Ifi OR Cni) (-4 Adv) (-3 Adv) (-2 Que) (0 Prs) (0 Pis) ;
  # il ne fallait/fallut/faudrait absolument pas que tu choisisses
SELECT Pis IF (-4 Pii OR Ifi OR Cni) (-3 Que) (-1 Adv) (0 Prs) (0 Pis) ;
  # il fallait/fallut/faudrait que tu ne choisisses pas
SELECT Prs IF (-4 Pri) (-3 PP) (-2 Que) (0 Prs) (0 Pis) ;
  # il a fallu que tu choisisses
SELECT Prs IF (-5 Pri) (-4 PP) (-3 Adv) (-2 Que) (0 Prs) (0 Pis) ;
  # il a fallu absolument que tu choisisses
SELECT Prs IF (-6 Pri) (-5 Adv) (-4 Adv) (-3 PP) (-2 Que) (0 Prs) (0 Pis) ;
  # il n'a absolument pas fallu que tu choisisses
SELECT Prs IF (-6 Pri) (-5 Adv) (-4 PP) (-3 Adv) (-2 Que) (0 Prs) (0 Pis) ;
  # il n'a pas fallu absolument que tu choisisses
SELECT Prs IF (-5 Pri) (-4 PP) (-3 Que) (-1 Adv) (0 Prs) (0 Pis) ;
  # il a fallu que tu ne choisisses pas
SELECT Pis IF (-4 Pii OR Ifi OR Cni) (-3 PP) (-2 Que) (0 Prs) (0 Pis) ;
  # il avait/eu/aurait fallu que tu choisisses
SELECT Pis IF (-5 Pii OR Ifi OR Cni) (-4 PP) (-3 Adv) (-2 Que) (0 Prs) (0 Pis) ;
  # il avait/eu/aurait fallu absolument que tu choisisses
SELECT Pis IF (-6 Pii OR Ifi OR Cni) (-5 Adv) (-4 Adv) (-3 PP) (-2 Que) (0 Prs) (0 Pis) ;
  # il n'avait/eu/aurait absolument pas fallu que tu choisisses
SELECT Pis IF (-6 Pii OR Ifi OR Cni) (-5 Adv) (-4 PP) (-3 Adv) (-2 Que) (0 Prs) (0 Pis) ;
  # il n'avait/eu/aurait pas fallu absolument que tu choisisses
SELECT Pis IF (-5 Pii OR Ifi OR Cni) (-4 PP) (-3 Que) (-1 Adv) (0 Prs) (0 Pis) ;
  # il avait/eu/aurait fallu que tu ne choisisses pas

# Prs ou Pri
SELECT Pri IF (-2C Pri) (-1 CnjCoo) (0 Prs) (0 Pri) ; # il revoit et corrige
SELECT Prs IF (-2C Prs) (-1 CnjCoo) (0 Prs) (0 Pri) ;
SELECT Pri IF (2C Pri) (1 CnjCoo) (0 Prs) (0 Pri) ; # il corrige et revoit
SELECT Prs IF (2C Prs) (1 CnjCoo) (0 Prs) (0 Pri) ;

REMOVE Prs IF (-1 CM OR CnjCoo) (0 Pri + &&ConcordeSV) (-1* Pri + &&ConcordeSV) ;	# Les deux juristes constatent que le Brexit a engendré la plus grande perte de droits pour l’ensemble des citoyens européens et *proposent* des solutions
#REMOVE Prs IF (-1 CM OR CnjCoo) (0 Pri + P3 + Sg) (-1* Pri + P3 + Sg) ;
#REMOVE Prs IF (-1 CM OR CnjCoo) (0 Pri + P3 + Pl) (-1* Pri + P3 + Pl) ;		# Les deux juristes constatent que le Brexit a engendré la plus grande perte de droits pour l’ensemble des citoyens européens et *proposent* des solutions

# Pri ou Ifi
REMOVE Ifi (0 Pri) (1* ("aujourd'hui") OR ("maintenant") OR ("actuellement")) ; # L'église subit actuellement des travaux
REMOVE Ifi (0 Pri) (-1* ("aujourd'hui") OR ("maintenant") OR ("actuellement")) ;

REMOVE PP IF (-2C V) (-1 CnjCoo) (0C V) (-2 V + &&ConcordeSV) (0 V + &&ConcordeSV) (NOT -2 PP) ;	# elle rit et dit
REMOVE Pri IF (-2C V) (-1 CnjCoo) (0C V) (-2 V + &&ConcordeSV) (0 V + &&ConcordeSV) (NOT -2 Pri) ;	# elle le fit et dit
REMOVE Ifi IF (-2C V) (-1 CnjCoo) (0C V) (-2 V + &&ConcordeSV) (0 V + &&ConcordeSV) (NOT -2 Ifi) ;
REMOVE Pri IF (0C V) (1 CnjCoo) (2C V) (0 V + &&ConcordeSV) (2 V + &&ConcordeSV) (NOT 2 Pri) ;	# elle rit et fit
REMOVE Ifi IF (0C V) (1 CnjCoo) (2C V) (0 V + &&ConcordeSV) (2 V + &&ConcordeSV) (NOT 2 Ifi) ;
REMOVE PP IF (-3C V) (-2 CnjCoo) (-1 Pro OR Adv) (0 V) (-3 V + &&ConcordeSV) (0 V + &&ConcordeSV) (NOT -3 PP) ;	# elle le fit et me dit ; elle le fit et ne dit rien
REMOVE Pri IF (-3C V) (-2 CnjCoo) (-1 Pro OR Adv) (0 V) (-3 V + &&ConcordeSV) (0 V + &&ConcordeSV) (NOT -3 Pri) ;	# elle le fit et me dit ; elle le fit et ne dit rien
REMOVE Ifi IF (-3C V) (-2 CnjCoo) (-1 Pro OR Adv) (0 V) (-3 V + &&ConcordeSV) (0 V + &&ConcordeSV) (NOT -3 Ifi) ;
REMOVE Pri IF (0C V) (1 CnjCoo) (2 Pro) (3C V) (0 V + &&ConcordeSV) (3 V + &&ConcordeSV) (NOT 3 Pri) ;	# elle me le dit et le fit
REMOVE Ifi IF (0C V) (1 CnjCoo) (2 Pro) (3C V) (0 V + &&ConcordeSV) (3 V + &&ConcordeSV) (NOT 3 Ifi) ;
REMOVE PP IF (-4C V) (-3 CnjCoo) (-2 Pro OR Adv) (-1 Pro) (0 V) (-4 V + &&ConcordeSV) (0 V + &&ConcordeSV) (NOT -4 PP) ;	# elle le fit et me le dit ; elle le fit et ne le dit
REMOVE Pri IF (-4C V) (-3 CnjCoo) (-2 Pro OR Adv) (-1 Pro) (0 V) (-4 V + &&ConcordeSV) (0 V + &&ConcordeSV) (NOT -4 Pri) ;	# elle le fit et me le dit
REMOVE Ifi IF (-4C V) (-3 CnjCoo) (-2 Pro OR Adv) (-1 Pro) (0 V) (-4 V + &&ConcordeSV) (0 V + &&ConcordeSV) (NOT -4 Ifi) ;
REMOVE Pri IF (0C V) (1 CnjCoo) (2 Pro OR Adv) (3 Pro) (4C V) (0 V + &&ConcordeSV) (4 V + &&ConcordeSV) (NOT 4 Pri) ;	# elle me le dit et le lui fit ; elle le dit et ne le fit
REMOVE Ifi IF (0C V) (1 CnjCoo) (2 Pro OR Adv) (3 Pro) (4C V) (0 V + &&ConcordeSV) (4 V + &&ConcordeSV) (NOT 4 Ifi) ;

REMOVE Ifi IF (0 Pri) (0 Ifi) (*1C CnjSub LINK 1* Fti) ;		# il prédit que la Terre passera
REMOVE Pri IF (0 Pri) (0 Ifi) (*1C CnjSub LINK 1* Cni) ;		# il prédit que la Terre passerait

REMOVE Ifi + &&ConcordeSV IF (0 V + Pri + &&ConcordeSV) (0 V + Ifi + &&ConcordeSV) (NOT 0 P3) ;		# on élimine P1 + ifi et P2 + ifi si on trouve mieux

REMOVE Ifi + P3 IF (0 Pri + P3) (0 Ifi + P3) (*-1C V + Pri) ;
REMOVE Ifi + P3 IF (0 Pri + P3) (0 Ifi + P3) (*1C V + Pri) ;
REMOVE Pri + P3 IF (0 Pri + P3) (0 Ifi + P3) (*-1C Ifi) ;
REMOVE Pri + P3 IF (0 Pri + P3) (0 Ifi + P3) (*1C Ifi) ;
REMOVE Ifi + P3 IF (0 Pri + P3) (0 Ifi + P3) (*-1C Pri) ;
REMOVE Ifi + P3 IF (0 Pri + P3) (0 Ifi + P3) (*1C Pri) ;
REMOVE Ifi + P3 IF (0 Pri + P3) (0 Ifi + P3) (<*-1C V + Pri) ;
REMOVE Ifi + P3 IF (0 Pri + P3) (0 Ifi + P3) (>*1C V + Pri) ;

REMOVE Ifi (-1 ("autrement")) (0 ("dire") + PP) ;

REMOVE Fin IF (-1 ("nombre de") OR ("<nombre de>"i) OR ("<nombre d'>"i) OR ("<nombre d’>"i)) ;	# nombre d'éditions
#SELECT Fin IF (0C N OR Fin) (-1 N LINK -1 Prep OR Det) (NOT -1 ("son")) (NOT 1 N OR A) ;
SELECT Fin IF (0C N OR Fin) (-1 N LINK -1 Det) (NOT -1 Son OR A) (NOT 1 N OR A) ;
  ## Les poules du couvent couvent
  ## leurs grandes forces
SELECT Fin IF (0C N OR Fin) (NOT -3 Prep) (-2 Det + MascSg) (-1C Noun_Adj + MascSg) (1 Det) (2 Noun_Adj) ;
SELECT Fin IF (0C N OR Fin) (NOT -3 Prep) (-2 Det + FemSg) (-1C Noun_Adj + FemSg) (1 Det) (2 Noun_Adj) ;
SELECT Fin IF (0C N OR Fin) (NOT -3 Prep) (-2 Det + MascPl) (-1C Noun_Adj + MascPl) (1 Det) (2 Noun_Adj) ;
SELECT Fin IF (0C N OR Fin) (NOT -3 Prep) (-2 Det + FemPl) (-1C Noun_Adj + FemPl) (1 Det) (2 Noun_Adj) ;
  ## le propriétaire risque une amende
  ## mais : sous le Second Empire l'Institut...
SELECT Fin IF (0C N OR Fin) (NOT -4 Prep) (-3 Det + MascSg) (-2C Noun_Adj + MascSg) (-1C Noun_Adj_PP + MascSg) (1 Det) (2 Noun_Adj) ;
SELECT Fin IF (0C N OR Fin) (NOT -4 Prep) (-3 Det + FemSg) (-2C Noun_Adj + FemSg) (-1C Noun_Adj_PP + FemSg) (1 Det) (2 Noun_Adj) ;
SELECT Fin IF (0C N OR Fin) (NOT -4 Prep) (-3 Det + MascPl) (-2C Noun_Adj + MascPl) (-1C Noun_Adj_PP + MascPl) (1 Det) (2 Noun_Adj) ;
SELECT Fin IF (0C N OR Fin) (NOT -4 Prep) (-3 Det + FemPl) (-2C Noun_Adj + FemPl) (-1C Noun_Adj_PP + FemPl) (1 Det) (2 Noun_Adj) ;
  ## le grand propriétaire risque une amende
  ## mais : sous le formidable Second Empire l'Institut...
SELECT Fin IF (0C N OR Fin) (NOT -5 Prep) (-4 Det + MascSg) (-3C Noun_Adj + MascSg) (-2C Noun_Adj + MascSg) (-1C Noun_Adj_PP) (1 Det) (2 Noun_Adj) ;
SELECT Fin IF (0C N OR Fin) (NOT -5 Prep) (-4 Det + FemSg) (-3C Noun_Adj + FemSg) (-2C Noun_Adj + FemSg) (-1C Noun_Adj_PP) (1 Det) (2 Noun_Adj) ;
SELECT Fin IF (0C N OR Fin) (NOT -5 Prep) (-4 Det + MascPl) (-3C Noun_Adj + MascPl) (-2C Noun_Adj + MascPl) (-1C Noun_Adj_PP) (1 Det) (2 Noun_Adj) ;
SELECT Fin IF (0C N OR Fin) (NOT -5 Prep) (-4 Det + FemPl) (-3C Noun_Adj + FemPl) (-2C Noun_Adj + FemPl) (-1C Noun_Adj_PP) (1 Det) (2 Noun_Adj) ;
  ## le grand propriétaire chinois risque une amende
  ## mais : sous le grand propriétaire chinois les champs...
SELECT Fin IF (0C N OR Fin) (NOT -6 Prep) (-5 Det + MascSg) (-4 Adv_PreAdv) (-3C Noun_Adj_PP + MascSg) (-2C Noun_Adj + MascSg) (-1C Noun_Adj) (1 Det) (2 Noun_Adj) ;
SELECT Fin IF (0C N OR Fin) (NOT -6 Prep) (-5 Det + FemSg) (-4 Adv_PreAdv) (-3C Noun_Adj_PP + FemSg) (-2C Noun_Adj + FemSg) (-1C Noun_Adj) (1 Det) (2 Noun_Adj) ;
SELECT Fin IF (0C N OR Fin) (NOT -6 Prep) (-5 Det + MascPl) (-4 Adv_PreAdv) (-3C Noun_Adj_PP + MascPl) (-2C Noun_Adj + MascPl) (-1C Noun_Adj) (1 Det) (2 Noun_Adj) ;
SELECT Fin IF (0C N OR Fin) (NOT -6 Prep) (-5 Det + FemPl) (-4 Adv_PreAdv) (-3C Noun_Adj_PP + FemPl) (-2C Noun_Adj + FemPl) (-1C Noun_Adj) (1 Det) (2 Noun_Adj) ;
  ## le très grand propriétaire chinois risque une amende
SELECT Fin IF (0C N OR Fin) (NOT -5 Prep) (-4 Det + MascSg) (-3 Adv_PreAdv) (-2C Noun_Adj_PP + MascSg) (-1C Noun_Adj) (1 Det) (2 Noun_Adj) ;
SELECT Fin IF (0C N OR Fin) (NOT -5 Prep) (-4 Det + FemSg) (-3 Adv_PreAdv) (-2C Noun_Adj_PP + FemSg) (-1C Noun_Adj) (1 Det) (2 Noun_Adj) ;
SELECT Fin IF (0C N OR Fin) (NOT -5 Prep) (-4 Det + MascPl) (-3 Adv_PreAdv) (-2C Noun_Adj_PP + MascPl) (-1C Noun_Adj) (1 Det) (2 Noun_Adj) ;
SELECT Fin IF (0C N OR Fin) (NOT -5 Prep) (-4 Det + FemPl) (-3 Adv_PreAdv) (-2C Noun_Adj_PP + FemPl) (-1C Noun_Adj) (1 Det) (2 Noun_Adj) ;
  ## le très grand propriétaire risque une amende
SELECT Fin IF (0C N OR Fin) (NOT -5 Prep) (-4 Det + MascSg) (-3C Noun_Adj) (-2 Adv_PreAdv) (-1C Noun_Adj_PP + MascSg) (1 Det) (2 Noun_Adj) ;
SELECT Fin IF (0C N OR Fin) (NOT -5 Prep) (-4 Det + FemSg) (-3C Noun_Adj) (-2 Adv_PreAdv) (-1C Noun_Adj_PP + FemSg) (1 Det) (2 Noun_Adj) ;
SELECT Fin IF (0C N OR Fin) (NOT -5 Prep) (-4 Det + MascPl) (-3C Noun_Adj) (-2 Adv_PreAdv) (-1C Noun_Adj_PP + MascPl) (1 Det) (2 Noun_Adj) ;
SELECT Fin IF (0C N OR Fin) (NOT -5 Prep) (-4 Det + FemPl) (-3C Noun_Adj) (-2 Adv_PreAdv) (-1C Noun_Adj_PP + FemPl) (1 Det) (2 Noun_Adj) ;
  ## le propriétaire très grand risque une amende

SELECT Tn IF (0 Nous) (1 Pro) (2 Pro) (3 Vconj_pro + P1 + Pl) ;	# nous le lui disons
SELECT Tn IF (0 Vous) (1 Pro) (2 Pro) (3 Vconj_pro + P2 + Pl) ;	# vous le lui disez
REMOVE Tn IF (0 Nous) (1C Vconj_pro) (NOT 1 P1 + Pl) ;
REMOVE Tn IF (0 Vous) (1C Vconj_pro) (NOT 1 P2 + Pl) ;
REMOVE Tn IF (0 Nous) (1 Pro) (2 Vconj_pro) (NOT 2 P1 + Pl) ;	# Pierre nous le dit
REMOVE Tn IF (0 Vous) (1 Pro) (2 Vconj_pro) (NOT 2 P2 + Pl) ;	# Pierre vous le dit
SELECT Tn IF (0 Nous) (1 Nous) (2 Vconj_pro) (2 P1 + Pl) ;		# nous nous levons
SELECT Tn IF (0 Vous) (1 Vous) (2 Vconj_pro) (2 P2 + Pl) ;		# nous vous levez
SELECT Pro (NOT -1 Prep) (0 Lui OR Leur) (1 Pro) (2 Vconj_pro) ; 	# lui en donne
SELECT Tn (-1 EOS OR CM) (0 Pro) (1 Pro) (2 Vconj_pro) ; 		# nous vous attendons
SELECT Tn (0 Pro) (1 Adv) (2 Pro) (3 Vconj_pro) ;	# nous ne vous attendons pas

SELECT Fils IF (0C Fil OR Fils) (-1 Sg) ;	# Avec lequel elle aura un fils.
SELECT Fils IF (0C Fil OR Fils) (1 ("aîné") OR ("cadet")) ;

SELECT Fils IF (-1 Pos + MascPl) ;	# mes fils
SELECT Fils IF (-2 Pos + MascPl) (-1 A + MascPl) ;	# mes jeunes fils
SELECT Fils IF (-3 Pos + MascPl) (-2 Adv_PreAdv) (-1 A + MascPl) ;	# mes très jeunes fils

SELECT Fils IF (-1 ("et") OR ("ou")) (-2 ("<filles>"i)) ;
SELECT Fils IF (1 ("et") OR ("ou")) (2 ("<filles>"i)) ;

SELECT Fils IF (0C Fil OR Fils) (1 ("de")) (2 Ant OR Cog OR unknown) ;
SELECT Fils IF (0C Fil OR Fils) (1 ("de")) (2 Det) (3 Ant OR Cog OR unknown) ; # Fils de la Néréide
SELECT Fils IF (0C Fil OR Fils) (1 ("de")) (2 Det) (3 N) (4 Ant OR Cog OR unknown) ; # Fils de la reine Hélène
SELECT Fils IF (0C Fil OR Fils) (1 ("de")) (2 Det) (3 A) (4 Ant OR Cog OR unknown) ; # Fils du vieux Priam
SELECT Fils IF (0C Fil OR Fils) (1 ("de")) (2 Det) (3 A) (4 N) (5 Ant OR Cog OR unknown) ; # Fils du vieux roi Artus

SELECT Fils IF (1 ("de")) (2 Det) (3 Famille OR ("voisin") OR ("ami") OR ("précédent") OR ("ancien") OR Dignite) ;	# fils de la marquise
SELECT Fils IF (1 ("de")) (2 Famille OR ("voisin") OR ("ami") OR ("précédent") OR ("ancien") OR Dignite) ;	# fils du marquis

SELECT A IF (-1 Ser + &&ConcordeSP) (0 ("proche") + &&ConcordeSP) ;

REMOVE Pl_strict IF (0C N + Masc + Pl_strict OR N + MascSg) (1C A + Masc + Sg_strict) ; # fils aîné
REMOVE Pl_strict IF (0C N + Fem + Pl_strict OR N + FemSg) (1C A + Fem + Sg_strict) ;
REMOVE Pl_strict IF (0C N + Masc + Pl_strict OR N + MascSg) (1 PreAdv OR Adv) (2C A + Masc + Sg_strict) ;
REMOVE Pl_strict IF (0C N + Fem + Pl_strict OR N + FemSg) (1 PreAdv OR Adv) (2C A + Fem + Sg_strict) ;
REMOVE Sg_strict IF (0C N + Masc + Sg_strict OR N + MascSg) (1C A + Masc + Pl_strict) ;
REMOVE Sg_strict IF (0C N + Fem + Sg_strict OR N + FemSg) (1C A + Fem + Pl_strict) ;
REMOVE Sg_strict IF (0C N + Masc + Sg_strict OR N + MascSg) (1 PreAdv OR Adv) (2C A + Masc + Pl_strict) ;
REMOVE Sg_strict IF (0C N + Fem + Sg_strict OR N + FemSg) (1 PreAdv OR Adv) (2C A + Fem + Pl_strict) ;
REMOVE Pl_strict IF (0 Noun_Adj + Masc + Pl_strict) (0 Noun_Adj + MascPl) (-1/* Det + Masc + Sg_strict) (NOT -1/* Det + MascPl) ;	# le fils
REMOVE Pl_strict IF (0 Noun_Adj + Fem + Pl_strict) (0 Noun_Adj + FemPl) (-1/* Det + Fem + Sg_strict) (NOT -1/* Det + FemPl) ;
REMOVE Sg_strict IF (0 Noun_Adj + Masc + Sg_strict) (0 Noun_Adj + MascSg) (-1/* Det + Masc + Pl_strict) (NOT -1/* Det + MascSg) ;	# des frais
REMOVE Sg_strict IF (0 Noun_Adj + Fem + Sg_strict) (0 Noun_Adj + FemSg) (-1/* Det + Fem + Pl_strict) (NOT -1/* Det + FemSg) ;
REMOVE Sg_strict IF (0C N + Fem + Sg_strict OR N + FemSg) (-1/* Det + Fem + Pl_strict) ;
REMOVE Pl_strict IF (0C N + Masc + Pl_strict OR N + MascSg) (-1C A + Masc + Sg_strict) ;
REMOVE Pl_strict IF (0C N + Fem + Pl_strict OR N + FemSg) (-1C A + Fem + Sg_strict) ;
REMOVE Sg_strict IF (0C N + Masc + Sg_strict OR N + MascSg) (-1C A + Masc + Pl_strict) ;
REMOVE Sg_strict IF (0C N + Fem + Sg_strict OR N + FemSg) (-1C A + Fem + Pl_strict) ;

SELECT Fem IF (-2 ("milion") OR ("milliard")) (-1 ("de")) (0 Livre) ;
SELECT Fem IF (0 Livre) (1 ("sterling")) ;
SELECT Fem IF (-3 ("prix") OR ("salaire") OR ("paie")) (-2 ("de")) (-1 Num) (0 Livre) ;
SELECT Fem IF (-2 ("couter") OR ("valoir") OR ("payer")) (-1 Num) (0 Livre) ;
SELECT Masc IF (NOT -1/* Fem_strict) (0 Livre) (NOT 1/* Fem_strict) ;
SELECT Masc IF (NOT -1/* Fem_strict) (0 Livre) (0 (META:/"/r)) ;

SELECT Fois IF (0C Foi OR Fois) ;

SELECT Avare IF (-1 Adv_PreAdv) (0 Avar) ;
SELECT Avar IF (-1 Det + Def + Pl) (0 Avare + Pl + MajIni) ;
SELECT Avare IF (NOT -1 Fem_strict) (0 Avar) (NOT 1 Fem_strict) ;

SELECT NP IF (0 ("<Euro>")) (1 ("<[0-9][0-9][0-9][0-9]>"r)) ;

SELECT Adv IF (0 Plus) (1 ("de") OR Que) ;

REMOVE CnjAdv IF (-1/* Det + Def + &&ConcordeSN) (0 Plus OR Moins) (1 A + &&ConcordeSN OR PP + &&ConcordeSN) ;
REMOVE CnjAdv IF (0 Plus OR Moins) (1C A OR PP) ;
REMOVE CnjAdv IF (-1 N + &&ConcordeSN) (0 Plus OR Moins) (1 A + &&ConcordeSN OR PP + &&ConcordeSN) ;
REMOVE CnjAdv IF (-1C ("pas")) (0 Plus OR Moins) ;
REMOVE CnjAdv IF (0 Plus OR Moins) (NOT 1* Verb) ;
REMOVE CnjAdv IF (-1 Verb) (0 Plus OR Moins) ;
#REMOVE CnjAdv IF (-2 Ne) (-1 Verb) (0 Plus) ;
#REMOVE CnjAdv IF (-3 Ne) (-2 Pro) (-1 Verb) (0 Plus) ;
#REMOVE CnjAdv IF (-3 Ne) (-2 Adv) (-1 Verb) (0 Plus) ;
REMOVE CnjAdv IF (-1C Prep) (NOT 0 Si) ;
SELECT A OR Adv IF (-1 Plus OR Moins) (1 Que) ;

SELECT N IF (0 ("président")) (1 ("de")) ;

SELECT Det + &&ConcordeSN IF (NOT -1 Det) (0 Son + &&ConcordeSN) (1 N + &&ConcordeSN LINK NOT 0 A) ;
SELECT Det + &&ConcordeSN IF (NOT -1 Det) (0 Son + &&ConcordeSN) (1 A + &&ConcordeSN) (2 N + &&ConcordeSN) ;
SELECT Det + &&ConcordeSN IF (NOT -1 Det) (0 Son + &&ConcordeSN) (1 N + &&ConcordeSN) (2 Adv) (1 A + &&ConcordeSN) ;
SELECT Det + &&ConcordeSN IF (NOT -1 Det) (0 Son + &&ConcordeSN) (1 AdjOrd + &&ConcordeSN) ;
SELECT Det + &&ConcordeSN IF (NOT -1 Det) (0 Son + &&ConcordeSN) (1 AdjPre + &&ConcordeSN) ;
SELECT Det + &&ConcordeSN IF (-1 Prep) (0 Son + &&ConcordeSN) (1 N + &&ConcordeSN) ;
SELECT Det + &&ConcordeSN IF (-1 BOS OR CM) (0 Son + &&ConcordeSN) (1 N + &&ConcordeSN) ;
SELECT Det IF (0 Son + MascSg) (1 unknown) ;
SELECT Det IF (0 Son + MascSg) (1 ("frère") OR ("ami")) ;
SELECT Det IF (0 Son + MascSg) (1 NP + MascSg) ;	# son David
SELECT Det IF (0 Mon_Ton_Son + &&ConcordeSN) (1 PreAdv) (2 A + &&ConcordeSN) (3 N + &&ConcordeSN) ;

SELECT Det + &&ConcordeSN IF (0 Det + &&ConcordeSN) (1C N + Mf) (2 CM) (3 Ant + &&ConcordeSN) ;	# son agent, Chuck Smith
SELECT Det + &&ConcordeSN IF (0 Det + &&ConcordeSN) (1C N + Mf) (2 Ant + &&ConcordeSN) ;
SELECT Det + &&ConcordeSN IF (0 Det + &&ConcordeSN) (1C N + Mf) (2 A + Mf) (3 CM) (4 Ant + &&ConcordeSN) ;	# son agent artistique, Chuck Smith
SELECT Det + &&ConcordeSN IF (0 Det + &&ConcordeSN) (1C N + Mf) (2 A + Mf) (3 Ant + &&ConcordeSN) ;
SELECT Det + &&ConcordeSN IF (0 Det + &&ConcordeSN) (1 A + Mf) (2C N + Mf) (3 CM) (4 Ant + &&ConcordeSN) ;
SELECT Det + &&ConcordeSN IF (0 Det + &&ConcordeSN) (1 A + Mf) (2C N + Mf) (3 Ant + &&ConcordeSN) ;


SELECT Fem IF (0 Rose + Pl) (NOT 1 Masc_strict) ;	# la vallée des roses

SELECT N IF (0 Roue) (NOT -1 ("il") OR ("elle") OR ("on") OR Ant_Cog) ;

SELECT A IF (0 Quitte) (-1 Ser) ;
REMOVE A IF (0 Quitte) ;

REMOVE N IF (0 ("pousse")) (1 ("à")) (2 Inf OR unknown) ;

SELECT N IF (0 Correspondant) (1 ("de")) (2 ("guerre")) ;
SELECT N IF (0 Correspondant) (1 ("de")) (2 Det) (3 ("journal")) ;
SELECT N IF (0 Correspondant) (1 ("de")) (2 NP OR unknown) ;
SELECT N IF (0 Correspondant) (1 ("à") OR ("en")) (2 Top OR unknownMajIni) ;
SELECT N IF (0 Correspondant) (1 ("à")) (2 Det + Def) (2 Top OR unknownMajIni) ;

REMOVE ("franc") IF (0C N) (0 ("Franc_peuple")) ;
REMOVE ("franc") IF (0C A) (0 ("franc_peuple")) ;
SELECT N IF (-1 Num) (0 ("franc")) ;

SELECT N + Mf IF (-1/* Det + Masc_strict) (0 Politique) ;
SELECT N + Mf IF (-1/* Det) (0 Politique) (1 A + Masc_strict) ;
REMOVE N + Mf IF (NOT -1/* Det + Masc_strict) (0 Politique) (NOT 1 A + Masc_strict) ;
REMOVE N + Masc_strict IF (NOT -1/* Det + Masc_strict) (0 Politique) (NOT 1 A + Masc_strict) ;	# pour le cas où politique mf ne soit pas défini dans le bidix (et on n'ait que politique n.m et politique n.f)

SELECT N IF (-1 Prep) (0 Commune + Pl) (NOT 1 N) ;	# communauté de communes
SELECT N IF (-1 Prep) (0 Commune + Pl) (1 MajIni) ;	# communauté de communes Pays d'Évian

SELECT N IF (-2 ("base")) (-1 ("de")) (0 ("donnée")) ;
SELECT N IF (0 ("donnée")) (1 ("clé") OR ("clef")) ;

REMOVE A IF (NOT -1 N OR Ser) (0 ("classe")) ;
REMOVE A IF (0 ("classe")) (1 MajIni OR unknownMajIni) ;	# classe A
REMOVE A IF (NOT -1 N OR Ser) (0 ("tendance")) ;

SELECT Masc IF (-1 Det + Masc_strict) (0 Pique) ;	# jouer du pique
SELECT Masc IF (-2 Num OR ("as") OR ("roi") OR ("dame") OR ("valet")) (-1 De) (0 Pique) ;
SELECT Fem IF (0 Pique) ;

REMOVE N IF (0 Nouvelle + FemSg) (1 A + FemSg) ;
REMOVE N IF (0 Nouvelle + FemPl) (1 A + FemPl) ;

SELECT N IF (0 ("revue")) (1 MajIni OR unknownMajIni) ;

SELECT N IF (0 ("fin")) (1 Mois) ;

SELECT N IF (-1 (META:/-/r)) (0 ("baillon")) ;

REMOVE V IF (-1 AdjOrd + &&ConcordeSN) (0 N + &&ConcordeSN) ; # le dernier voyage
SELECT A IF (-1/* Det + &&ConcordeSN) (0 AdjOrd + &&ConcordeSN) (1 N + &&ConcordeSN) ; # le second voyage
SELECT A IF (-1/* Det + &&ConcordeSN) (0 AdjOrd + &&ConcordeSN) (1 AdjPre + &&ConcordeSN) (2 N + &&ConcordeSN) ; # les premières grandes élections

REMOVE Ouvrer IF (0 Ouvrir OR Ouvrer) ;

SELECT Cours IF (0C Cour OR Cours) ;
SELECT Cours IF (-1/* Det + Pl) (0 Cour OR Cours) ;
SELECT Cours IF (-1 Num + Pl) (0 Cour OR Cours) ;
SELECT Cours IF (-1C ("de")) (0 Cour OR Cours) ;
SELECT Cours IF (0 Cour OR Cours) (1C A + Pl) ;

SELECT N IF (-2C Cours) (-1 ("de")) (0 N OR A) (0 Sp) ;
  ## cours d'anglais, français, chinois

SELECT Mil IF (0C Mil OR Mille) (1 N OR A) (1 Pl) ;
  ## mille adhérents
SELECT Num IF (-1 ("par") OR ("pour")) (0 Mille) ;
SELECT Num IF (-1 Num) (0 Mille) (1 N + Pl) ;	# dix mille Français
SELECT Num IF (-1/* Det) (0 Mille) (1 N + Pl) ;	# les mille Français
SELECT Num IF (0 Mille) (1 Num) ;		# mille cinq-cents
SELECT Num IF (0 Mille) (1 CnjCoo) (2 Num) ;	# mille et une passions

SELECT Savoir IF (0C Savoir OR Saurer) ;
  ## ce problème ne saurait tout expliquer à lui seul

SELECT Voir IF (0C Voir OR Vivre) (1 Que) ;
SELECT Voir IF (0C Voir OR Vivre) (1 Adv) (2 Que) ;
SELECT Voir IF (0C Voir OR Vivre) (1 Adv) (2 Adv) (3 Que) ;
SELECT Voir IF (0C Voir OR Vivre) (1C Det OR Num) ;
SELECT Voir IF (0C Voir OR Vivre) (1 Adv) (2C Det OR Num) ;
SELECT Voir IF (0C Voir OR Vivre) (1 Adv) (2 Det + &&ConcordeSN) (3 N + &&ConcordeSN);
SELECT Voir IF (0C Voir OR Vivre) (1 Adv) (2 Adv) (3C Det OR Num) ;
SELECT Voir IF (0C Voir OR Vivre) (1 Adv) (2 Adv) (3 Det + &&ConcordeSN) (4 N + &&ConcordeSN);
SELECT Voir IF (0C Voir OR Vivre) (1 CM) (2* CM LINK 1C Det OR Num) ;	# Il vit, lors de la saison 2010-2011, la relégation de son club
SELECT Voir IF (0C Voir OR Vivre) (1 Adv) (2 CM) (3* CM LINK 1C Det OR Num) ;
SELECT Voir IF (0C Voir OR Vivre) (1 Adv) (2 CM) (3* CM LINK 1 Det + &&ConcordeSN LINK 1 N + &&ConcordeSN) ;	# Il ne vit pas, lors de la saison 2010-2011, la relégation de son club
SELECT Voir IF (0C Voir OR Vivre) (1 Adv) (2 Adv) (3 CM) (4* CM LINK 1C Det OR Num) ;
SELECT Voir IF (0C Voir OR Vivre) (1 Adv) (2 Adv) (3 CM) (4* CM LINK 1 Det + &&ConcordeSN LINK 1 N + &&ConcordeSN) ;
SELECT Vivre IF (0C Voir OR Vivre) ;

SELECT Falloir IF (-1 ("il")) (0C Falloir OR Faillir) (1 Que) ;
SELECT Falloir IF (-2 ("il")) (-1 ("ne")) (0C Falloir OR Faillir) (1 Pas) (2 Que) ;

REMOVE Mystique_pers IF (-1 Det + Sg_strict + Fem_strict) (0 Mystique_pers) ;
REMOVE Mystique_pers IF (1 A + Sg_strict + Fem_strict) (0 Mystique_pers) ;
REMOVE Mystique_syst IF (-1/* Det + Pl_strict) (0 Mystique_syst) ;
REMOVE Pupille_pers IF (-1 Det + Sg_strict + Fem_strict) (0 Pupille_pers) ;
REMOVE Pupille_pers IF (1 A + Sg_strict + Fem_strict) (0 Pupille_pers) ;
REMOVE Pupille_anat IF (-1/* Det + Pl_strict) (0 Pupille_anat) ;

SELECT N IF (0 ("conseiller")) (1 ("général")) ;

SELECT N IF (0 ("chouette")) (1 unknown) ;

SELECT N IF (-2 ("à")) (-1 ("même")) (0 ("titre")) ;
SELECT N IF (-1 ("rôle") OR ("role")) (0 ("titre")) ;
SELECT N IF (-1 ("chanson")) (0 ("titre")) ;

REMOVE Mai IF (0 Mai OR Mais) ;

SELECT Prn IF (0 ("beaucoup de")) (1C Prn);
  ## beaucoup d'eux
SELECT Prn IF (0 ("beaucoup de")) (1C Prep);
  ## beaucoup d'entre eux

SELECT Rel IF (-1 BOS OR CM) (0 ("<ce que>"i) OR ("<ce qu'>"i) OR ("<ce qu’>"i)) ;
SELECT Rel IF (-1 BOS OR CM) (0 ("<ce qui>"i)) ;
SELECT Rel IF (-1 BOS OR CM) (0 ("<ce dont>"i)) ;
SELECT Prn IF (0 ("ce")) (1 ("que") OR ("qui") OR ("dont")) ;
REMOVE Rel IF (0 ("<ce que>"i) OR ("<ce qu'>"i) OR ("<ce qu’>"i)) ;
REMOVE Rel IF (0 ("<ce qui>"i)) ;
REMOVE Rel IF (0 ("<ce dont>"i)) ;
SELECT Prn IF (0 ("ce")) (1 Ser + P3);		# ce sont
SELECT Prn IF (0 ("ce")) (1 Adv) (2 Ser + P3);	# ce ne sont pas
SELECT Prn IF (0 ("ce")) (1C Prn) ;		# sur ce je vous dis bonjour
SELECT Prn IF (0 ("ce")) (1C Prep OR CnjAdv) ;	# et ce malgré le...

REMOVE PreDet IF (NOT 1 Det) ;
REMOVE PreDet IF (0 PreDet + &&ConcordeSN) (NOT 1 Det + &&ConcordeSN) ;
SELECT PreDet IF (0 PreDet + &&ConcordeSN) (1 Det + &&ConcordeSN) ;

SELECT &&ConcordeSN IF (-2 PreDet + &&ConcordeSN) (-1 Det + &&ConcordeSN) (0 N + &&ConcordeSN) ;	# sur tout l'automne

SELECT PreAdv IF (-1 N + &&ConcordeSN) (0 Tout + &&ConcordeSN) (1 A + &&ConcordeSN) ;	#  une signification toute particulière
SELECT PreAdv IF (-1 Ser + &&ConcordeSP) (0 Tout + &&ConcordeSN) (1 ("petit") + &&ConcordeSN + &&ConcordeSP) ;	# elle est toute petite
SELECT PreAdv IF (-1 VerbAttr + &&ConcordeSP) (0 Tout + &&ConcordeSN) (1 ("petit") + &&ConcordeSN + &&ConcordeSP) ;
SELECT PreAdv IF (-2 Ser + &&ConcordeSP) (-1 Adv) (0 Tout + &&ConcordeSN) (1 ("petit") + &&ConcordeSN + &&ConcordeSP) ;
SELECT PreAdv IF (-2 VerbAttr + &&ConcordeSP) (-1 Adv) (0 Tout + &&ConcordeSN) (1 ("petit") + &&ConcordeSN + &&ConcordeSP) ;
SELECT PreAdv IF (-3 Ser + &&ConcordeSP) (-2 Adv) (-1 Adv) (0 Tout + &&ConcordeSN) (1 ("petit") + &&ConcordeSN + &&ConcordeSP) ;
SELECT PreAdv IF (-3 VerbAttr + &&ConcordeSP) (-2 Adv) (-1 Adv) (0 Tout + &&ConcordeSN) (1 ("petit") + &&ConcordeSN + &&ConcordeSP) ;

SELECT PreDet IF (0 Tout + Pl) (1 DetDef + Pl) ;	# . Tous les Etats
SELECT N IF (-2 Tout) (-1 ("ou")) (0 ("<partie>"i)) ;

SELECT Demi_pre IF (0 Demi_pre OR Demi_post) (1 N) ;
REMOVE Demi_pre IF (0 Demi_pre OR Demi_post) (NOT 1 N) ;

SELECT Cog IF (-2 Ant) (-1 ("de")) (0 ("Orange")) ;
SELECT Cog IF (-3 Ant) (-2 Num) (-1 ("de")) (0 ("Orange")) ;
SELECT Al IF (0 ("Orange")) (1 ("SA") OR Top) ;
SELECT Top IF (0 ("Isle")) (-1 Det + Def) (NOT 0 (META:/-/r)) (NOT -1 (META:/-/r));
SELECT Al IF (0 ("Isle")) (NOT -1 Det + Def) ;

SELECT A IF (0 ("prochain") LINK NOT -1 Det) ;
SELECT A IF (0 ("prochain")) (-1 Det) (1 N) ;

SELECT N IF (0 ("dame") + Pl) (-1 ("finale") OR ("demi-finale") OR ("tournoi") OR ("championat")) ;

SELECT N IF (0 ("cité")) (1 ("état")) (0 (META:/-/r)) ;

REMOVE Adv IF (-1 Prep) (0 ("haut") OR ("long") OR ("large")) ;
SELECT A IF (0 ("haut") OR ("long") OR ("large")) (1 De) (2 Num) ;
REMOVE Adv IF (-1 N + MascSg) (0 ("haut") OR ("long") OR ("large")) ;
REMOVE Adv IF (0 ("haut") OR ("long") OR ("large")) (1 N + MascSg) ;


#SELECT Det IF (0 Leur) (1 N OR A OR Adv) ;
#SELECT Pron IF (0 Leur) (1 Verb) ;
#REMOVE N IF (0 Leur) (1 unknown) ;
REMOVE N IF (0 Leur) ;

REMOVE Prn IF (0 ("beaucoup")) (1 ("plus") OR ("moins")) ;
SELECT Prn IF (0 ("beaucoup") OR ("peu")) (1 Verb + P3 + Pl) ;
SELECT Prn IF (0 ("beaucoup") OR ("peu")) (1 Adv) (2 Verb + P3 + Pl) ;
REMOVE Prn IF (0 ("beaucoup") OR ("peu")) (NOT 1 Verb + P3 + Pl OR Adv) ;
SELECT PreAdv IF (0 ("peu")) (1C A) ;

SELECT PreAdv IF (0 ("quelque") + PreAdv) (1 A) (2 Que) ;
SELECT Adv IF (0 ("quelque") + Adv) (1 Num) ;

SELECT N IF (-1/* Det) (0 ("rose")) ;
SELECT N IF (-1 Num) (0 ("rose")) ;
REMOVE Masc_strict IF (0 ("rose") + N + Pl) (NOT -1 Masc_strict) ;

SELECT N IF (-1/* Det + MascSg) (0 Jours) ;
SELECT N IF (-2/* Det + MascSg) (-1 A + MascSg) (0 Jours) ;	# le prochain lundi
SELECT N IF (0 Jours) (1 A + MascSg) ;	# lundi prochain

SELECT Sg IF (NOT -1/* Pl_strict OR N) (0 ("Chablais")) (NOT 1 Pl_strict) ;
SELECT Pl IF (-1/* Pl_strict) (0 ("Chablais")) ;

SELECT Adv IF (0 ("pour commencer")) (1 EOS) ;
SELECT Adv IF (0 ("pour commencer")) (1 Cm) ;
SELECT Adv IF (0 ("pour commencer")) (1 Tn) ;
REMOVE Adv IF (0 ("pour commencer")) ;

SELECT N IF (0 ("relation") + FemPl) (1 A + FemPl) ;	# et relations amoureuses
SELECT N IF (-1 Det + FemPl) (0 ("relation") + FemPl) ;	# les relations

SELECT N IF (0 ("frère")) (1 Ant OR unknownMajIni) ;		# frère Jean
SELECT N IF (0 ("sœur")) (1 Ant OR unknownMajIni) ;		# sœur Meredith
SELECT Ant + Masc IF (-1 ("frère")) (0 Ant) ;
SELECT Ant + Fem IF (-1 ("sœur")) (0 Ant) ;
SELECT Top IF (-2 ("<Enfant>")) (-1 ("de")) (NOT 1 Ant OR Cog) ;
SELECT Top IF (-2 ("<Enfants>")) (-1 ("de")) (NOT 1 Ant OR Cog) ;	# les Enfants de France
SELECT Ant OR Cog IF (-2 Famille OR ("voisin") OR ("ami")) (-1 ("de")) ;
SELECT Ant IF (-2 Famille OR ("voisin") OR ("ami")) (-1 ("de")) ;

SELECT N IF (0 ("cathédrale")) (1 MajIni OR unknownMajIni) ;		# cathédrale Notre-Dame de Rouen

SELECT N IF (0 ("gagnant")) (0 (META:/-/r)) ;		# gagnant-gagnant
SELECT N IF (0 ("gagnant")) (-1 (META:/-/r)) ;		# gagnant-gagnant
SELECT N IF (0 ("perdant")) (0 (META:/-/r)) ;		# perdant-perdant
SELECT N IF (0 ("perdant")) (-1 (META:/-/r)) ;		# perdant-perdant

SELECT Prep IF (0 ("outre")) ;				# pas "outrer"

SELECT Prep IF (0 Vers OR Envers) (1 Det) ;		# vers la fin
REMOVE Prep IF (0 Vers OR Envers) (-1 De) ;		# de vers informatiques
SELECT Prep IF (0 Vers) (-1C Verb) ;	# aller vers

REMOVE Prep IF (-2 ("sain")) (-1 ("et")) (0 ("sauf")) ;
SELECT Prep IF (0 ("sauf") + &&ConcordeSN) (-1 N) (NOT -1 N + &&ConcordeSN) ;
SELECT Prep IF (0 ("sauf")) (1 Prep) ;
SELECT Prep IF (0 ("sauf")) (1 Det) ;		

SELECT SUB:1 Adv IF (0 ("d'après")) (1 CM OR EOS) ;
REMOVE SUB:1 Adv IF (0 ("d'après")) (NOT 1 CM OR EOS) ;

SELECT A IF (-1 DetDef + &&ConcordeSN) (0 ("autre") + &&ConcordeSN) (1 N + &&ConcordeSN) ;	# l'autre livre
SELECT A IF (-1 DetInd + &&ConcordeSN) (0 ("autre") + &&ConcordeSN) (1 N + &&ConcordeSN) ;	# quelques autres livres
SELECT A IF (-1 Num) (0 ("autre") + Pl) (1 N + Pl) ;			# trois autres livres

LIST DAutres = "<d'autres>"i "<d’autres>"i ;
SELECT Det IF (-1C EOS OR Prep OR CnjSub OR Rel OR ("vers")) (0 DAutres + &&ConcordeSN) (1 N_Adj + &&ConcordeSN) ;
SELECT Prn IF (-1C EOS OR Prep OR CnjSub OR Rel OR ("vers")) (0 DAutres) (1 Verb + P3 + Pl) ;
SELECT Prn IF (-1C EOS OR Prep OR CnjSub OR Rel OR ("vers")) (0 DAutres) (1 Que OR Qui) ;
REMOVE Det IF (0 DAutres) (NOT 1 N_Adj OR PreAdv) ;
SELECT Prep IF (-1 ("celui")) (0 DAutres) ;
REMOVE Det IF (-1C Det) (0 DAutres) ;
REMOVE Det IF (-1 Det + Pl) (0 DAutres) ;
REMOVE Det IF (-1C N) (0 DAutres) ;
REMOVE Det IF (-2 N_Adj + &&ConcordeSN) (-1 N_Adj + &&ConcordeSN) (0 DAutres) ;
SELECT Prep IF (-1 ("venir") OR ("arriver")) (0 DAutres) ;
SELECT Prep IF (-2 ("venir") OR ("arriver")) (-1 Adv) (0 DAutres) ;
SELECT Prep IF (-3 ("venir") OR ("arriver")) (-1 Adv) (-1 Adv) (0 DAutres) ;
SELECT Prep IF (-1C N) (0 DAutres) ;	# l'exemple d'autres
SELECT Prep IF (-2 N_Adj + &&ConcordeSN) (-1 N_Adj + &&ConcordeSN) (0 DAutres) ;
SELECT Prep IF (-1 ("différent")) (0 DAutres) ;
SELECT Prep IF (-1 ("plein")) (0 DAutres) ;
SELECT Prep IF (-1 ("tas")) (0 DAutres) ;
REMOVE Prep IF (0 DAutres) ;
SELECT SUB:1 A + &&ConcordeSN IF (0 DAutres) (1 N + &&ConcordeSN) ;		# l'exemple d'autres villes
SELECT SUB:2 A + &&ConcordeSN IF (0 ("<bien d'autres>"i) OR ("<bien d’autres>"i)) (1 N + &&ConcordeSN) ;		# l'exemple de bien d'autres villes

# genre

REMOVE Fem_strict IF (0 Mon_Ton_Son) (1 ConsInitiale) ;	# mon père

SELECT Masc IF (-2 ("à") OR ("pendant") OR ("après") OR ("avant") OR ("en")) (-1C Num) (0 Tour) (NOT 1 A) ;	# à 7 tours de la fin ; en deux tours
SELECT Masc IF (-1C Num) (0 Tour) (1 ("avant")) ;
SELECT Masc IF (NOT -2 Fem) (-1 ("deuxième") OR ("second") OR ("troisième")) (0 Tour) (NOT 1 Fem) ;
SELECT Masc IF (0 Tour) (1 De) (2 ("force")) ;
SELECT Masc IF (0 Tour) (1 De) (2 ("horizon")) ;
SELECT Masc IF (0 Tour) (1 De) (2 ("magie")) ;

SELECT Fem IF (-2 ("menace")) (-1 De) (0 Mort + Masc) ;
SELECT Masc IF (-2 ("culte") OR ("monde")) (-1 De) (0 Mort + Fem) ;
SELECT Masc IF (NOT -1/* Fem_strict OR N) (0 Mort + Fem + Pl) (NOT 1 Fem_strict) ;

SELECT N_Masc IF (NOT -1/* Fem_strict OR N) (0 Critique + Fem) (1 ("littéraire")) ;
SELECT N_Masc IF (NOT -1/* Fem_strict OR N) (0 Critique + Fem) (2 ("de")) (3 ("art")) ;
SELECT N_Masc IF (NOT -1/* Fem OR N) (0 Critique + Fem) (1 CM OR CnjCoo) (2 ("écrivain") OR ("journaliste") OR ("essayiste") OR ("éditeur") OR ("réalisateur") OR ("musicien") OR ("interprète"));
SELECT N_Masc IF (NOT 1 Fem) (0 Critique + Fem) (-1 CM OR CnjCoo) (-2 ("écrivain") OR ("journaliste") OR ("essayiste") OR ("éditeur") OR ("réalisateur") OR ("musicien") OR ("interprète"));
SELECT Fem OR V IF (NOT -1/* Masc_strict OR N) (0 Critique + Masc) (NOT 1 Masc_strict) ;

SELECT Fem IF (NOT -1/* Masc_strict OR N) (0 Marine + Masc) (NOT 1 Masc_strict) ;

SELECT Fem IF (NOT -1/* Masc_strict OR N) (0 Foudre + Masc) (NOT 1 Masc_strict) ;

REMOVE Fem IF (NOT -1/* Fem_strict OR N) (0 Barde + Fem) (NOT 1 Fem_strict) ;

SELECT Fem IF (NOT -1/* Masc_strict OR N) (0 Beigne + Masc) (NOT 1 Masc_strict) ;

SELECT Fem IF (NOT -1/* Masc_strict OR N) (0 Cave + Masc) (NOT 1 Masc_strict) ;

SELECT Fem IF (NOT -1/* Masc_strict OR N) (0 Claque + Masc) (NOT 1 Masc_strict) ;

SELECT Fem IF (NOT -1/* Masc_strict OR N) (0 Faune + Masc) (NOT 1 Masc_strict) ;

REMOVE Fem IF (NOT -1/* Fem_strict OR N) (0 Geste + Fem) (NOT 1 Fem_strict) ;

SELECT Fem IF (NOT -1/* Masc_strict OR N) (0 Rade + Masc) (NOT 1 Masc_strict) ;

SELECT Fem_strict IF (NOT -1/* Masc_strict OR N) (0 Manoeuvre + Masc) (NOT 1 Masc_strict) ;

SELECT Fem IF (NOT -1/* Masc_strict OR N) (0 Moufle + Masc) (NOT 1 Masc_strict) ;

SELECT Fem IF (-1/* Fem_strict) (0 Clim + Masc) ;
SELECT Fem IF (0 Clim + Masc) (1 A + Fem_strict) ;
SELECT Masc IF (-1/* Pl_strict) (0 Clim + Masc) ;
SELECT Masc IF (0 Clim + Masc) (1 A + Pl_strict) ;
SELECT Fem IF (NOT -1/* Masc_strict) (0 Clim + Masc) (NOT 1 Masc_strict) ;

SELECT Masc IF (NOT -1/* Masc_strict) (0 Mode + Masc) (1 De) ;

REMOVE N + Mf IF (NOT -1/* Fem_strict) (0 Modele) (NOT 1 Fem_strict) ;
REMOVE N + Masc_strict IF (-1/* Fem_strict) (0 Modele) ;
REMOVE N + Masc_strict IF (0 Modele) (1 Fem_strict LINK NOT 0 Masc OR V + P3) ;	# des modèles fins

SELECT Masc IF (-2 ("dans")) (-1/* Det OR Num OR De LINK NOT 0 Fem_strict) (0 Moule) ;
SELECT Masc IF (-2 ("remplir") OR ("graisser") OR ("utiliser")) (-1/* Det OR Num OR De LINK NOT 0 Fem_strict) (0 Moule) ;
SELECT Masc IF (0 Moule) (1 ("remplir") + PP OR ("graisser") + PP OR ("utiliser") + PP LINK NOT 0 Fem_strict) ;
SELECT Fem IF (-2 ("manger") OR ("servir")) (-1/* Det OR Num OR De LINK NOT 0 Masc_strict) (0 Moule) ;
SELECT Fem IF (0 Moule) (1 ("manger") + PP OR ("servir") + PP LINK NOT 0 Masc_strict) ;

SELECT Masc IF (0 Basket + Sg) (NOT -1/* Fem_strict) (NOT 1 Fem_strict) ;
SELECT Fem IF (0 Basket) (-1/* Det + Fem_strict) ;
SELECT Fem IF (0 Basket) (1C A + Fem_strict) ;
SELECT Fem IF (-2 ("mettre") OR ("porter")) (-1/* Det OR ("<des>"i)) (0 Basket) ;
SELECT Masc IF (0 Basket) ;
SELECT Masc IF (0 Tennis + Sg) (NOT -1/* Fem_strict) (NOT 1 Fem_strict) ;
SELECT Fem IF (0 Tennis) (-1/* Det + Fem_strict) ;
SELECT Fem IF (0 Tennis) (1C A + Fem_strict) ;
SELECT Fem IF (-2 ("mettre") OR ("porter")) (-1/* Det OR ("<des>"i)) (0 Tennis) ;
SELECT Masc IF (0 Tennis) ;
SELECT Masc IF (0 Ranger + Sg) (NOT -1/* Fem_strict) (NOT 1 Fem_strict) ;
SELECT Fem IF (0 Ranger) (-1/* Det + Fem_strict) ;
SELECT Fem IF (0 Ranger) (1C A + Fem_strict) ;
SELECT Fem IF (-2 ("mettre") OR ("porter")) (-1/* Det OR ("<des>"i)) (0 Ranger) ;
SELECT Masc IF (0 Ranger) ;

SELECT N IF (0 ("édition")) (1 MajIni OR unknownMajIni) ;	# éditions Larousse

SELECT Masc IF (-1/* Num) (0 Curie + Pl) (NOT 1 A + Fem_strict) ;
SELECT Fem IF (0 Curie) (NOT -1/* Masc_strict) (NOT 1 Masc_strict) ;

SELECT Masc IF (0 Primaire + Sg) (NOT -1/* Fem_strict) (NOT 1 Fem_strict) ;
SELECT Fem IF (0 Primaire + Pl) (NOT -1/* Masc_strict) (NOT 1 Masc_strict) ;

SELECT Masc IF (0 Solde) (NOT -1/* Fem_strict) (NOT 1 Fem_strict) ;

SELECT Masc IF (0 Inceste) (NOT -1/* Fem_strict) (NOT 1 Fem_strict) ;

SELECT Fem IF (0 Page) (NOT -1/* Masc_strict) (NOT 1 Masc_strict) ;

SELECT Fem IF (0 Info) (NOT -1/* Masc_strict) (NOT 1 Masc_strict) ;

SELECT Masc IF (NOT -1 Det + Masc_strict) (0 Memoire) (1 De) (2 ("maîtrise")) ;
SELECT Masc IF (NOT -1 Det + Masc_strict) (0 Memoire) (1 De) (2 ("master")) ;
SELECT Masc IF (NOT -1 Det + Masc_strict) (0 Memoire) (1 De) (2 ("fin")) (3 De) ;
SELECT Masc IF (NOT -1 Det + Masc_strict) (0 Memoire) (1 De) (2 A) (3 ("cycle")) ;
SELECT Masc IF (-2 ("soutenir")) (NOT -1/* Masc_strict OR Fem_strict) (0 Memoire) ;
SELECT Fem IF (0 Memoire) (NOT -1/* Masc_strict) (NOT 1 Masc_strict) ;

SELECT Fem IF (0 Statuaire) (NOT -1/* Masc_strict) (NOT 1 Masc_strict) ;

SELECT Fem IF (0 Teneur) (NOT -1/* Masc_strict) (NOT 1 Masc_strict) ;

SELECT Fem IF (0 Platine) (NOT -1/* Masc_strict) (0 Pl) (NOT 1 Masc_strict) ;
SELECT Masc IF (0 Platine) (NOT -1/* Fem_strict) (NOT 1 Fem_strict) ;

SELECT Fem IF (0 Pub) (NOT -1/* Masc_strict) (NOT 1 Masc_strict) ;

SELECT Masc IF (0 Trouble) (NOT -1/* Fem_strict) (NOT 1 Fem_strict) ;

SELECT Fem IF (0 Vapeur) (NOT -1/* Masc_strict) (NOT 1 Masc_strict) ;

SELECT Masc IF (0 Vase) (NOT -1/* Fem_strict) (NOT 1 Fem_strict) ;

SELECT Fem IF (0 Chantilly) (NOT -1/* Masc_strict) (NOT 1 Masc_strict) ;

SELECT Fem IF (0 Collab) (NOT -1/* Masc_strict) (NOT 1 Masc_strict) ;

SELECT Mf IF (-3 Ant OR Cog OR unknownMajIni) (-2 Ser) (-1 Det) (0 Cide) ;
SELECT Mf IF (-4 Ant OR Cog OR unknownMajIni) (-3 Haver OR Vbmod) (-2 Ser) (-1 Det) (0 Cide) ;
SELECT Mf IF (-5 Ant OR Cog OR unknownMajIni) (-4 Haver) (-3 Vbmod) (-2 Ser) (-1 Det) (0 Cide) ;
SELECT Mf IF (-3 Ant OR Cog OR unknownMajIni) (-3 Adv) (-2 Ser) (-1 Det) (0 Cide) ;
SELECT Mf IF (-3 Ant OR Cog OR unknownMajIni) (-3 Ser) (-2 Adv) (-1 Det) (0 Cide) ;
SELECT Mf IF (-5 Ant OR Cog OR unknownMajIni) (-4 Adv) (-3 Ser) (-2 Adv) (-1 Det) (0 Cide) ;
SELECT Mf IF (-5 Ant OR Cog OR unknownMajIni) (-4 Haver OR Vbmod) (-3 Adv) (-2 Ser) (-1 Det) (0 Cide) ;
SELECT Mf IF (-6 Ant OR Cog OR unknownMajIni) (-5 Adv) (-4 Haver OR Vbmod) (-3 Adv) (-2 Ser) (-1 Det) (0 Cide) ;
SELECT Mf IF (-6 Ant OR Cog OR unknownMajIni) (-5 Haver) (-4 Vbmod) (-3 Adv) (-2 Ser) (-1 Det) (0 Cide) ;
SELECT Mf IF (-7 Ant OR Cog OR unknownMajIni) (-6 Adv) (-5 Haver) (-4 Adv) (-3 Vbmod) (-2 Ser) (-1 Det) (0 Cide) ;
SELECT Masc_strict IF (0 Cide) ;

SELECT N IF (0 ("donne")) (-1 ("<la>"i)) (1C A + FemSg) ;
SELECT N IF (0 ("donne")) (-2 ("<la>"i)) (-1 A + FemSg) ;
REMOVE N IF (0 ("donne")) (NOT -1 ("<la>"i)) ;
REMOVE N IF (0 ("donne")) (NOT -1 ("<la>"i)) (NOT -2 V OR Adv) ;
REMOVE N IF (0 ("donne")) (-1 ("<la>"i)) (-2 Adv) (NOT -3 V) ;

SELECT A IF (-1 VerbAttr) (0 Faux) ;
SELECT A IF (-2 VerbAttr) (-1 Adv) (0 Faux) ;
SELECT A IF (-3 VerbAttr) (-2 Adv) (-1 Adv) (0 Faux) ;
REMOVE Fem IF (0 Faux) (0C N) (NOT -1/* Masc_strict) (NOT 1 Masc_strict) ;

SELECT Masc IF (-1 ("sans")) (0 Relache) ;
SELECT Masc IF (-1 ("faire")) (0 Relache) ;
SELECT Masc IF (-1 ("avoir")) (0 Relache) ;
SELECT Fem IF (0 Relache) (NOT -1/* Masc_strict) (NOT 1 Masc_strict) ;

SELECT Fem IF (0 Parano) (-1/* Fem_strict) (1 Fem_strict) (NOT -1 N) ;
SELECT Mf IF (0 Parano) (NOT -1/* Fem_strict) (NOT 1 Fem_strict) ;

SELECT Masc_strict IF (-1 ("genre")) (0 ("homo")) ;
SELECT Masc_strict IF (-1 ("<ecce>")) (0 ("homo")) ;
SELECT Masc_strict IF (NOT -1 N) (0 ("homo")) (1 unknown) ;
SELECT Masc_strict IF (NOT -1 BOS) (0 ("<Homo>")) ;

SELECT N IF (-1 Prep) (0 Bien + &&ConcordeSN) (1 ("commun") + &&ConcordeSN) ;
SELECT N IF (-1 Prep) (0 Bien + &&ConcordeSN) (1 ("national") + &&ConcordeSN) ;
SELECT N IF (-1 Prep) (0 Bien + &&ConcordeSN) (1 ("public") + &&ConcordeSN) ;

REMOVE N + Masc_strict (-1 Det + Fem_strict) (NOT -1 Det + Masc) (0 N + Fem_strict) ;  # la terra
REMOVE N + Fem_strict (-1 Det + Masc_strict) (NOT -1 Det + Fem) (0 N + Masc_strict) ;  # el terra

SELECT N IF (0 ("licencié")) (1 ("ès")) ;
SELECT N IF (0 ("torse")) (1 ("nu")) ;

SELECT N IF (0 ("rue")) (1 ("de")) ;
SELECT N IF (0 ("rue")) (1 MajIni OR unknownMajIni) ;
SELECT V IF (-1 ("me") OR ("te") OR ("se")) (0 ("rue")) ;
SELECT Cog IF (0 Ant OR unknownMajIni) (1 ("<Rue>")) ;
SELECT N IF (0 ("rue")) ;

SELECT A IF (0 Don) (1 Ant OR Cog OR unknownMajIni) ;
REMOVE A IF (0 Don) ;
SELECT Ant IF (-1 Don) ;

SELECT N (-1 ("catégorie") OR ("section") OR ("équipe") OR ("champion")) (0 ("cadet")) ;
SELECT N (-1 ("foot") OR ("football") OR ("basketball") OR ("basket") OR ("volleyball") OR ("volley") OR ("handball") OR ("hockey")) (0 ("cadet")) ;
SELECT N (-1 ("officier")) (0 ("cadet")) ;
SELECT N (0 ("cadet")) (1 ("chef")) ;
SELECT N (0 ("cadet")) (1 ("féminin")) ;
SELECT N (-1 Ser) (0 ("cadet")) ;
SELECT N (-2 Ser) (-1 Adv) (0 ("cadet")) ;
SELECT Cog (-1 ("cadet")) ;		# le cadet Guillaume
SELECT N (0 ("officier")) (1 De) ;
SELECT N (-1 ("nommer")) (0 ("officier")) ;

SELECT Prep IF (0 ("<Sans>")) (1 N OR Inf) ;	# Sans surprise

SELECT Prep IF (0 ("<en bas>")) (1C N + Masc) ;	# en bas âge
SELECT Adv IF (0 ("<en bas>")) (1C EOS OR Prep) ;

SELECT SUB:1 Prep IF (0 ("hériter# de")) (1 Det + &&ConcordeSN) (2 Famille + &&ConcordeSN) ;	# hériter de ses parents
REMOVE SUB:1 Prep IF (0 ("hériter# de")) (1 Det + &&ConcordeSN) (2 N + &&ConcordeSN) (NOT 2 Famille) ; # hériter d'une maison
REMOVE Pl_strict IF (0 Vers) (1* ("lire") OR ("écrire") OR ("publier") OR ("poème") OR ("poésie") OR ("poète") OR ("écrivain") OR ("litérature")) ;
REMOVE Pl_strict IF (0 Vers) (-1* ("lire") OR ("écrire") OR ("publier") OR ("poème") OR ("poésie") OR ("poète") OR ("écrivain") OR ("litérature")) ;
REMOVE Pl_strict IF (0 Vers) (1 ("de")) (2 Ant OR Cog OR unknownMajIni) ;
SELECT Pl_strict IF (0 Vers) (1 ("à")) (2 ("soie")) ;
SELECT Pl_strict IF (0 Vers) (1 ("<informatiques>"i)) ;

REMOVE Fem_strict IF (-1 En) (0 Amazighe) (NOT 1 Fem_strict) ;
REMOVE Fem_strict IF (-1/* Det + Def + Pl) (0 Amazighe) (NOT 1 Fem_strict) ;
SELECT Fem IF (-1/* Fem) (0 Amazighe);
SELECT Fem IF (1/* Fem) (0 Amazighe);

SELECT Mf IF (0 Beta + Sg) (NOT -1/* Fem_strict) (NOT 1 Fem_strict) ;

SELECT N IF (0 ("devant de")) (-1C Det + MascSg) ;
SELECT N IF (0 ("devant de")) (-1 Det + Def OR ("<au>"i) OR ("<du>"i)) ;
REMOVE N IF (0 ("devant de")) (NOT -1/* Det + MascSg) ;
SELECT N IF (0 ("avant de")) (-1C Det + MascSg) ;
SELECT N IF (0 ("avant de")) (-1 Det + Def OR ("<au>"i) OR ("<du>"i)) ;
REMOVE N IF (0 ("avant de")) (NOT -1/* Det + MascSg) ;
SELECT N IF (0 ("derrière de")) (-1C Det + MascSg) ;
SELECT N IF (0 ("derrière de")) (-1 Det + Def OR ("<au>"i) OR ("<du>"i)) ;
REMOVE N IF (0 ("derrière de")) (NOT -1/* Det + MascSg) ;

SELECT Prep + ("avant de") IF (0 ("avant de")) (1 Inf) ;
SELECT Prep + ("avant de") IF (0 ("avant de")) (1 Pro) (2 Inf) ;
SELECT Prep + ("avant de") IF (0 ("avant de")) (1 Pro) (2 Pro) (3 Inf) ;
REMOVE Prep + ("avant de") IF (0 ("avant de")) ;
SELECT Prep + ("avant") IF (0 ("<avant des>"i)) (1 N_Adj + Pl) ;
SELECT Prep + ("avant") IF (NOT 0 ("<avant des>"i)) (1 N_Adj + Pl) ;

SELECT Prep IF (-1 Verb + Pers) (0 Vers OR Envers) ;
SELECT Prep IF (-1 Verb + Inf) (0 Vers OR Envers) ;
SELECT Prep IF (-1 Verb + Ger) (0 Vers OR Envers) ;
SELECT Prep IF (-2 Ser OR Haver) (-1 Verb + PP) (0 Vers OR Envers) ;
SELECT Prep IF (-3 Ser OR Haver) (-2 Adv OR CnjAdv) (-1 Verb + PP) (0 Vers OR Envers) ;
SELECT Prep IF (0 Vers OR Envers) (1 unknownMajIni) ;

SELECT Prep IF (-1C Verb) (0 Devant OR Contre) (1 Ant_Cog OR Al OR Top OR unknownMajIni) ; # Il s'impose devant Matthieu
SELECT Prep IF (-1C Verb) (0 Devant OR Contre) (1 Pro OR Tn) ; # Il s'impose devant lui
SELECT Prep IF (0 Devant OR Contre) (1 ("<des>"i)) ;
SELECT Prep IF (0 Devant) (1 NP OR unknownMajIni) ;
SELECT Prep IF (0 Devant OR Contre) (1 Det + &&ConcordeSN) (2 Top + &&ConcordeSN) ;
SELECT Prep IF (0 Devant OR Contre) (1 Det) (2 unknownMajIni) ;
SELECT Prep IF (0 Devant OR Contre) (1 Det + &&ConcordeSN) (2 N_Adj + &&ConcordeSN) ;
SELECT Prep IF (NOT -1 Verb OR Pas) (0 Pour) ;
REMOVE Adv IF (0C Adv OR Prep) (1 De) (2 N + Pl) ;
REMOVE Adv IF (0C Adv OR Prep) (1 De) (2 Det + Pl) (3 N + Pl) ;

SELECT Adv IF (0 Depuis) (1 CM OR EOS) ;
REMOVE Adv IF (0 Depuis) (1 ("de")) (2 N + Pl) ;

REMOVE Fondre IF (0 Fondre) (0 Fonder) (1 Sur) ;
REMOVE Fondre IF (0 Fondre) (0 Fonder) (1 Adv) (2 Sur) ;
REMOVE Fondre IF (0 Fondre) (0 Fonder) (1 Adv) (2 Adv) (3 Sur) ;

SELECT Verb IF (0 ("vit")) (1 ("en") OR ("dans")) ;
SELECT Verb IF (0 ("vit")) (1 Adv) (2 ("en") OR ("dans")) ;
SELECT Verb IF (NOT -1 Det + MascSg) (0 ("vit")) ;
SELECT Verb IF (-1 Pro) (0 ("vit")) ;

SELECT Enc IF (-1 (META:/-/r)) (0 ("moi") OR ("toi")) ;
REMOVE Enc IF (NOT -1 (META:/-/r)) (0 ("moi") OR ("toi")) ;

SELECT VSg3 OR VPl3 IF (-2 Ant) (-1 Num) (0C N OR V) ;	# Napoléon III capitule
SELECT N IF (-1 Num) (0C N OR V) ;			# 9 combats
SELECT N IF (NOT -2 Tn) (-1 DetDef OR CM) (0C N OR Verb) (1 Prep OR CM) ;
  ## que le pouvoir de
  ## , conseiller regional,
  ## je le donne
SELECT N IF (-1 Prep) (-1/* DetDef) (0C N OR Verb) ;
  ## du commandant Klein
SELECT N IF (-2 Prep) (-1 DetDef + &&ConcordeSN) (0C N OR Verb LINK NOT 0 Inf) (0 N + &&ConcordeSN) ;
REMOVE Pers IF (-2 Prep) (-1 Det + &&ConcordeSN) (0C N OR Verb LINK 0 Pers) (0 N + &&ConcordeSN) ;
  ## à leurs armes
REMOVE Verb (0C N OR Verb) (NOT 0 PP) (1C Verb + Pers) ; 	# la roue tourne, polémique a démarré, le volant a
REMOVE V (-1 Det + MascSg) (0C V OR N + MascSg) (1 Ant + MascSg) ;	# le philosophe John Stuart Mill
REMOVE V (-1 Det + FemSg) (0C V OR N + FemSg) (1 Ant + FemSg) ;	
REMOVE V (-1 Det + MascPl) (0C V OR N + MascPl) (1 Ant) ;	
REMOVE V (-1 Det + FemPl) (0C V OR N + FemPl) (1 Ant) ;	

REMOVE N IF (-1 Rel LINK NOT 0 ("comme")) (0 Verb) ;	# ce qui limite le nombre
REMOVE PP IF (-1 Rel LINK NOT 0 ("comme")) (0 Verb) (1C Det) ;	# ce que dit le nombre
REMOVE PP IF (-1 Rel LINK NOT 0 ("comme")) (0 Verb) (1 Det + &&ConcordeSN) (2 N + &&ConcordeSN) ;	# ce que dit le nombre
REMOVE N IF (-2 Rel LINK NOT 0 ("comme")) (-1 Adv) (0 Verb) ;
REMOVE PP IF (-2 Rel LINK NOT 0 ("comme")) (-1 Adv) (0 Verb) (1C Det) ;
REMOVE PP IF (-2 Rel LINK NOT 0 ("comme")) (-1 Adv) (0 Verb) (1 Det + &&ConcordeSN) (2 N + &&ConcordeSN) ;
REMOVE PP IF (-1 Rel LINK NOT 0 ("comme")) (0 Verb) (1 Adv) (2C Det) ;
REMOVE PP IF (-1 Rel LINK NOT 0 ("comme")) (0 Verb) (1 Adv) (2 Det + &&ConcordeSN) (3 N + &&ConcordeSN) ;
REMOVE PP IF (-2 Rel LINK NOT 0 ("comme")) (-1 Adv) (0 Verb) (1 Adv) (2C Det) ;
REMOVE PP IF (-2 Rel LINK NOT 0 ("comme")) (-1 Adv) (0 Verb) (1 Adv) (2 Det + &&ConcordeSN) (3 N + &&ConcordeSN) ;

REMOVE V IF (0 N OR V) (1C Ger) ;
  ## mais la série devenant de plus en plus rentable

REMOVE V + Pers IF (-1C Prep) ;
REMOVE V + Pers IF (-2C BOS OR CnjSub) (-1 ("en")) (0 N) ;

REMOVE V IF (-2 BOS OR CnjSub) (-1 Det + Def + &&ConcordeSN) (0 N + &&ConcordeSN) ;	# Le président et son secrétaire président
REMOVE V IF (-3 BOS OR CnjSub) (-2 Adv) (-1 Det + Def + &&ConcordeSN) (0 N + &&ConcordeSN) ;

SELECT N IF (-1 ("faire")) (0 ("partie")) ;
SELECT N IF (-2 ("faire")) (-1 Adv) (0 ("partie")) ;
SELECT N IF (-3 ("faire")) (-2 Adv) (-1 Adv) (0 ("partie")) ;
SELECT V IF (0 ("faire")) (1 ("partie")) ;
SELECT V IF (0 ("faire")) (1 Adv) (1 ("partie")) ;
SELECT V IF (0 ("faire")) (1 Adv) (2 Adv) (3 ("partie")) ;
REMOVE PP IF (NOT -2 Haver) (NOT -1 Haver) (0 ("faire")) (1 ("partie")) ;
REMOVE PP IF (NOT -2 Haver) (NOT -1 Haver) (0 ("faire")) (1 Adv) (2 ("partie")) ;
REMOVE PP IF (NOT -2 Haver) (NOT -1 Haver) (0 ("faire")) (1 Adv) (2 Adv) (3 ("partie")) ;

SELECT V IF (0 ("faire")) (1 ("front")) ;
SELECT V IF (0 ("faire")) (1 ("face")) ;
SELECT P3 IF (-1 N + Sg OR NP + Sg OR Cog) (0 ("<fait>"i)) (1 ("partie")) ;
SELECT P3 IF (-1 N + Sg OR NP + Sg OR Cog) (0 ("<fait>"i)) (1 ("front")) ;
SELECT P3 IF (-1 N + Sg OR NP + Sg OR Cog) (0 ("<fait>"i)) (1 ("face")) ;

SELECT Jouer_Faire IF (0 Jouer_Faire) (1 Det) (2 Instrument) ;
SELECT Jouer_Faire IF (0 Jouer_Faire) (0/* Det) (1 Instrument) ;
SELECT Jouer_Faire IF (0 Jouer_Faire) (1 Instrument) ;
REMOVE Jouer_Faire IF (0 Jouer_Faire) (NOT 0/* Det) (NOT 1 Det) ;
REMOVE Jouer_Faire IF (0 Jouer_Faire) (NOT 1 Instrument) (NOT 2 Instrument) ;

SELECT P3 (-1 N + MascSg) (0 ("faire") + P3 + Sg OR ("faire# partie") + P3 + Sg) (1 ("de")) (2 Det + Def) ;
SELECT P3 (-1 N + MascSg) (0 ("faire") + P3 + Sg OR ("faire# partie") + P3 + Sg) (1 ("de")) (1/* Det + Def) ;
SELECT P3 (-1 unknown) (0 ("faire# partie") + P3 + Sg) (1 ("de")) (2 Det + Def) ;
SELECT P3 (-1 unknown) (0 ("faire# partie") + P3 + Sg) (1 ("de")) (1/* Det + Def) ;
SELECT P3 (-1 Ant OR Cog) (0 ("faire") + P3 + Sg OR ("faire# partie") + P3 + Sg) (1 ("de")) (2 Det + Def) ;
SELECT P3 (-1 Ant OR Cog) (0 ("faire") + P3 + Sg OR ("faire# partie") + P3 + Sg) (1 ("de")) (1/* Det + Def) ;
SELECT P3 (-1 Rel) (0 ("faire") + P3 + Sg OR ("faire# partie") + P3 + Sg) (1 ("de")) (2 Det + Def) ;
SELECT P3 (-1 Rel) (0 ("faire") + P3 + Sg OR ("faire# partie") + P3 + Sg) (1 ("de")) (1/* Det + Def) ;
SELECT P3 (-1 unknown) (0 ("faire") + P3 + Sg OR ("faire# partie") + P3 + Sg) (1 ("de")) (2 Det + Def) (3 N) ;
SELECT P3 (-1 unknown) (0 ("faire") + P3 + Sg OR ("faire# partie") + P3 + Sg) (1 ("de")) (1/* Det + Def) (3 N) ;
SELECT P3 (NOT -2 Haver) (NOT -1 Haver) (0 ("faire# partie") + P3 + Sg) ;

SELECT P3 (-1 N + MascSg) (0 ("faire") + P3 + Sg) (1 Inf OR CnjSub) ;
SELECT P3 (-2 N + &&ConcordeSN) (-1 A + &&ConcordeSN) (0 ("faire") + P3 + Sg) (1 Inf OR CnjSub) ;
SELECT P3 (-1 Ant OR Cog) (0 ("faire") + P3 + Sg) (1 Inf OR CnjSub) ;
SELECT P3 (-1 Rel) (0 ("faire") + P3 + Sg) (1 Inf OR CnjSub) ;
SELECT P3 (-1 unknown) (0 ("faire") + P3 + Sg) (1C Inf OR CnjSub) ;

SELECT P3 (-1 N + MascSg) (0 ("causer") + P3 + Sg) (1 CnjSub) ;
SELECT P3 (-2 N + &&ConcordeSN) (-1 A + &&ConcordeSN) (0 ("causer") + P3 + Sg) (1 CnjSub) ;

SELECT Prep (0 ("<A>")) (-1 MinIni) ;	# point A	(ce n'est pas de tout un pr ; provisionnel)
SELECT Prep (0 ("<A>")) (-1 Num) ;	# 46A		(ce n'est pas de tout un pr ; provisionnel)
SELECT Prep (0 ("<a>"i)) (1 Rpar) ;	# a)		(ce n'est pas de tout un pr ; provisionnel)

REMOVE PP (-1 N + MascSg) (0 Verb + P3 + Sg) (1C Inf) ;
REMOVE PP (-1 Ant OR Cog) (0 Verb + P3 + Sg) (1C Inf) ;
REMOVE PP (-1 Rel) (0 Verb + P3 + Sg) (1C Inf) ;

SELECT ("moi") IF (-1 Prep) (0 ("moi je")) ;		# selon moi, j'ai raison
REMOVE ("moi") IF (NOT -1 Prep) (0 ("moi je")) ;	# moi, j'ai raison
SELECT ("toi") IF (-1 Prep) (0 ("toi tu")) ;		# selon toi, tu as raison
REMOVE ("toi") IF (NOT -1 Prep) (0 ("toi tu")) ;	# toi, tu as raison
SELECT ("lui") IF (-1 Prep) (0 ("lui il")) ;		# selon lui, il a raison
REMOVE ("lui") IF (NOT -1 Prep) (0 ("lui il")) ;	# lui, il a raison

SELECT Verb IF (-1 ("ne")) (0C N OR Verb) (1 Que) ;
  ## le groupe ne demande qu'à
SELECT Verb IF (-1 ("ne")) (0C N OR Verb) (1 ("pas") OR ("jamais")) ;
  ## ne limite pas
SELECT Verb IF (-2 ("ne")) (-1 Pro) (0C N OR Verb) (1 ("pas") OR ("jamais")) ;
  ## ne se limite pas
SELECT Verb IF (-1 CM) (0C N OR Verb) (1 Det) (2 N) ;
  ## , demande la creation de
SELECT Verb IF (-1 On) (0C N OR Verb) (0 Verb + P3 + Sg) ;
SELECT P3 IF (-1 On) (0C N OR Verb) (0 Verb + P3 + Sg) ;
  ## on compte

REMOVE Fin IF (-1 Ser) (0C Noun_Adj_PP OR Verb + Fin) ;
  ## elle était contente
REMOVE Fin IF (-2 Ser) (-1 Adv_PreAdv) (0C Noun_Adj_PP OR Verb + Fin) ;
  ## elle était très contente
REMOVE Fin IF (-3 Ser) (-2 Adv) (-1 Adv_PreAdv) (0C Noun_Adj_PP OR Verb + Fin) ;
  ## elle n'était pas très contente
SELECT Verb IF (-1C Pro) (0C Noun_Adj_PP OR Verb) ;
  ## ce qui se passe pendant le

SELECT N IF (NOT -1 Prn) (0 ("place")) (1 NP OR unknownMajIni) ; # place Saussure
SELECT N IF (-1 BOS) (0 ("aller")) (1 (":")) ;
SELECT N IF (0 ("aller")) (1 ("retour")) ;
SELECT N IF (0 ("aller")) (1 CnjCoo) (2 ("retour")) ;
REMOVE V IF (0 ("cela")) (-1 ("tout")) ;
REMOVE Fin_non_Imp IF (-1 BOS) (0 N OR Fin) (NOT 1 Tn OR On);
  ## Groupe A, Taille 48, Série 1
  ## Pense-t-il
SELECT N IF (-1 BOS) (0C Noun_Adj_PP) (1C Prep OR Pour) ;
  ## Remise des coupes
REMOVE Fin IF (-1C PreAdv) (0 A OR Fin) ;
  ## la très célèbre Pietà
REMOVE Verb IF (-2 BOS) (-1C A + &&ConcordeSN) (0 N + &&ConcordeSN OR Verb) ;	# . Petites annonces
REMOVE P2 IF (-1C N + &&ConcordeSN) (0 A + &&ConcordeSN OR Verb + P2) ;	# 13 h. précises
REMOVE P2 IF (-1C A + &&ConcordeSN) (0 N + &&ConcordeSN OR Verb + P2) ;

SELECT Prep IF (0 Comme) (1 N) ;		# il parle comme président
SELECT Prep IF (0 Comme) (1 A) (2 N) ;		# il parle comme ancien président
REMOVE Adv (0 Comme) (1 (":")) ;

SELECT A IF (-1/* Det) (0 ("ancien")) (1 N) ;
  ## l'ancien président
SELECT A IF (-1 CnjCoo OR CM) (0 ("ancien")) (1 N) ;
  ## et ancien responsable

REMOVE PP IF (-1 ("en")) (0 N) ;
  ## en partie
  ## en fait

REMOVE N IF (-1/* Det) (0 ("plus") OR ("moins")) (1 A OR PP OR Adv OR unknown) ;	# le plus beau
REMOVE N IF (-1/* Det) (0 ("plus") OR ("moins")) (1 EOS) ;	# que j'aime le plus
REMOVE N IF (-3/* Det) (-2 N) (-1/* Det) (0 ("plus") OR ("moins")) ;		# l'ouvrage le plus attendrissant [avec attendrissant = ger]
REMOVE N IF (-2 Verb or unknown) (-1/* Det) (0 ("plus") OR ("moins")) ;		# a marqué le plus l'histoire du cinéma
REMOVE N IF (-1 ("de")) (0 ("plus") OR ("moins")) ;	# 290 F de plus
REMOVE N IF (0 ("plus") OR ("moins")) (1 ("de")) (2 Num) ;	# plus de 18 ans

SELECT CnjSub IF (-2 AdvComp) (-1 A OR PP OR Adv) (0 Que) ;	# plus rapide que moi
SELECT CnjSub IF (-1 ("sans")) (0 Que) ;
SELECT CnjSub IF (-2 ("tel") + &&ConcordeSN) (-1 N + &&ConcordeSN) (0 Que) ;	# un tel succès que
#REMOVE Prs IF (-3* ("tel") LINK 2C Que + CnjSub BARRIER Verb + Pers) (0 Pri) ;
REMOVE Prs IF (-3* ("tel") LINK 2C Que + CnjSub) (0 Pri) ;
SELECT CnjAdv IF (-1 ("tel")) (0 Que) ;	# tels que

SELECT Adv IF (0 ("aussi")) (1 A OR PP OR Adv) (NOT 2 Que) ;
SELECT CnjAdv IF (-2 ("aussi")) (-1 A OR PP OR Adv) (0 Que) ;
REMOVE CnjAdv IF (NOT -2 ("aussi")) (0 Que) ;

SELECT Rel IF (-1 CM) (0 Que OR Qui OR Où) ;
SELECT Rel IF (-1C N) (0 Que OR Qui OR Où) (NOT -1* Ne) ;
SELECT Rel IF (-1C NP OR unknownMajIni) (0 Que OR Qui OR Où) (NOT -1* Ne) ;
SELECT Rel IF (-2C N) (-1 A) (NOT -1 Prep) (0 Que OR Qui OR Où) ;
SELECT Rel IF (-2C Top OR unknownMajIni) (-1 A) (0 Que OR Qui OR Où) ;
SELECT Rel IF (-3 N) (-2 Adv_PreAdv) (-1 A) (0 Que OR Qui OR Où) ;

SELECT CnjSub IF (-1C Verb) (NOT -1 PP) (0 Que) ;
SELECT CnjSub IF (-2 Ne) (-1 Verb) (0 Que) ;
SELECT CnjSub IF (-3 Ne) (-2 Verb) (-1 Adv) (0 Que) ;
SELECT CnjSub IF (-4 Ne) (-3 Verb) (-2 Prep) (-1 N) (0 Que) ;
  ## ne pense qu'à
  ## n'est en service que
SELECT CnjSub IF (-3 Ne) (-2 Haver OR Ser) (-1 PP) (0 Que) ;
SELECT CnjSub IF (-4 Ne) (-3 Haver OR Ser) (-2 Adv) (-1 PP) (0 Que) ;
SELECT CnjSub IF (-5 Ne) (-4 Haver OR Ser) (-3 Prep) (-2 N) (-1 PP) (0 Que) ;
SELECT CnjSub IF (-5 Ne) (-4 Haver OR Ser) (-3 PP) (-2 Prep) (-1 N) (0 Que) ;
  ## n'a pensé qu'à
SELECT CnjSub IF (-3 Ne) (-2 Vbmod) (-1 Inf) (0 Que) ;
SELECT CnjSub IF (-4 Ne) (-3 Vbmod) (-2 Adv) (-1 Inf) (0 Que) ;
SELECT CnjSub IF (-5 Ne) (-4 Vbmod) (-3 Prep) (-2 N) (-1 Inf) (0 Que) ;
SELECT CnjSub IF (-5 Ne) (-4 Vbmod) (-3 Inf) (-2 Prep) (-1 N) (0 Que) ;
  ## ne peut être que
SELECT CnjSub IF (-4 Ne) (-3 Haver) (-2 Vbmod + PP) (-1 Inf) (0 Que) ;
SELECT CnjSub IF (-5 Ne) (-4 Haver) (-3 Vbmod + PP) (-2 Adv) (-1 Inf) (0 Que) ;
SELECT CnjSub IF (-6 Ne) (-5 Haver) (-4 Vbmod + PP) (-3 Prep) (-2 N) (-1 Inf) (0 Que) ;
SELECT CnjSub IF (-6 Ne) (-5 Haver) (-4 Vbmod + PP) (-2 Inf) (-2 Prep) (-1 N) (0 Que) ;
  ## n'a pu être que

SELECT Verb IF (-1 Qui) (0 Verb + P3) ;
  ## qui fait que

SELECT A IF (0 ("petit")) (1 N OR Verb) ;
  ## un petit groupe
SELECT A IF (0 ("jeune")) (1 N OR Verb) ;
  ## ce jeune couple

REMOVE PP (-2C Det + Masc_strict) (-1C N + Masc) (0 PP + Fem_strict) (0 V) ;
REMOVE PP (-2C Det + Fem_strict) (-1C N + Fem) (0 PP + Masc_strict) (0 V) ;

REMOVE V (-2 ("de")) (-1 ("tout") + &&ConcordeSN) (0C V OR N + &&ConcordeSN) ;	# de toutes sortes

SELECT Verb IF (-1 ("qui")) (0C N OR Verb) ;
SELECT Verb IF (-2 ("qui")) (-1 Adv) (0C N OR Verb) ;
SELECT Verb IF (-2 ("qui")) (-1 Pro) (0C N OR Verb) ;
SELECT Verb IF (-3 ("qui")) (-2 Adv) (-1 Pro) (0C N OR Verb) ;
  ## qui demeure aujourd'hui

SELECT Tn IF (0 Lui OR Nous OR Vous) (1 Aussi);
SELECT Tn IF (0 Lui OR Nous OR Vous) (1 Même);
SELECT Tn IF (0 Lui OR Nous OR Vous) (1 Qui);
SELECT Tn IF (0 Lui OR Nous OR Vous) (1 Que);
SELECT Pro IF (0 Lui OR Leur OR Nous OR Vous) (-1 ("en")) (1 Ger);
SELECT Pro IF (0 Lui OR Leur) (-2 ("en")) (-1 Pro) (1 Ger);	# en le lui donant
SELECT Pro IF (0 Lui OR Leur OR Nous OR Vous) (-1 ("en")) (1 Pro) (2 Ger);	# en lui en disant
SELECT Pro IF (-2 ("en")) (-1 Pro) (1 Ger);	# en lui en donant
SELECT Tn IF (0 Lui OR Nous OR Vous) (-1C Prep OR Pour OR ("contre") OR ("devant") OR ("derrière") OR ("en")) (NOT 1 Inf OR Pro);
SELECT Pro IF (0 Lui OR Leur OR Nous OR Vous) (-1C Prep OR Pour OR ("contre") OR ("devant") OR ("derrière") OR ("en")) (1 Inf);
SELECT Tn IF (0 Lui OR Nous OR Vous) (-1C Prep OR Pour OR ("contre") OR ("devant") OR ("derrière") OR ("en")) (1 Pro) (NOT 2 Inf);
SELECT Pro IF (0 Lui OR Leur OR Nous OR Vous) (-1C Prep OR Pour OR ("contre") OR ("devant") OR ("derrière") OR ("en")) (1 Pro) (2 Inf);		# de lui en donner
SELECT Prep IF (0 ("contre") OR ("devant") OR ("derrière") OR ("en")) (1 Lui OR Nous OR Vous) ;
  ## Il s'impose devant lui
SELECT Pron IF (0 Lui) (1 Verb) ;	# lui écrit
SELECT Verb IF (-1 Lui) (0 Noun_Adj) ;	# lui écrit, lui commande, lui fait épouser
SELECT Pro IF (NOT -1 Prep) (0 Lui) (1C Vconj_pro) ;
#SELECT Pro IF (0 Lui) (1C Imper) ;
SELECT Pro IF (0 Lui OR Nous OR Vous) (-1C Tn OR On) (1 Vconj_pro);
  ## on lui connaît
SELECT Tn IF (0 Lui OR Nous OR Vous) (-1 BOS OR Cm) (1 Cm);
  ## il pense, lui, que...

SELECT Det IF (0 Leur) (1 A) (NOT 1 Verb) ;	# pour leur premère participation ; il leur fait

SELECT Tn IF (-3 AdvComp) (-2 A OR PP OR Adv) (-1 Que) (0 Lui OR Nous OR Vous) ;	# plus rapide que lui

SELECT Pro IF (-1C N_Adj) (0 Lui OR Nous OR Vous) (1 V + P3) ;	# mon père lui écrit

SELECT Tn IF (0 Tu) (1 VSg2);
  ## Tu veux
SELECT Tn IF (0 Tu) (1 Ne) (2 VSg2);
  ## Tu ne veux pas
SELECT Tn IF (0 Tu) (1 Pro) (2 VSg2);
  ## Tu lui veux
SELECT Tn IF (0 Tu) (1 Pro) (2 Pro) (3 VSg2);
  ## Tu lui en veux
SELECT Tn IF (0 Tu) (1 Ne) (2 Pro) (3 Pro) (4 VSg2);
  ## Tu ne lui veux pas
SELECT Tn IF (0 Tu) (1 Ne) (2 Pro) (3 VSg2);
  ## Tu ne lui veux pas

SELECT Pro IF (-1 Ne) (0 Nous) (1 VPl1);
  ## Nous ne nous aimons pas
SELECT Tn IF (0 Nous) (1 VPl1);
  ## Nous voulons
SELECT Tn IF (0 Nous) (1 Ne) (2 VPl1);
  ## Nous ne voulons pas
SELECT Pro IF (-1 Ne) (0 Nous) (1 Pro) (2 Vconj_pro + Pers);
  ## Ne nous en chargeons pas
SELECT Tn IF (0 Nous) (1 Pro) (2 VPl1);
  ## Nous lui voulons
SELECT Tn IF (0 Nous) (1 Pro) (2 Pro) (3 VPl1);
  ## Nous lui en voulons
SELECT Tn IF (0 Nous) (1 Ne) (2 Pro) (3 Pro) (4 VPl1);
  ## Nous ne lui voulons pas
SELECT Tn IF (0 Nous) (1 Ne) (2 Pro) (3 VPl1);
  ## Nous ne lui voulons pas

SELECT Pro IF (-1 Ne) (0 Vous) (1 VPl2);
  ## Vous ne vous aimez pas
SELECT Tn IF (0 Vous) (1 VPl2);
  ## Vous voulez
SELECT Tn IF (0 Vous) (1 Ne) (2 VPl2);
  ## Vous ne voulez pas
SELECT Pro IF (-1 Ne) (0 Vous) (1 Pro) (2 Vconj_pro + Pers);
  ## Ne vous en chargez pas
SELECT Tn IF (0 Vous) (1 Pro) (2 VPl2);
  ## Vous lui voulez
SELECT Tn IF (0 Vous) (1 Pro) (2 Pro) (3 VPl2);
  ## Vous lui en voulez
SELECT Tn IF (0 Vous) (1 Ne) (2 Pro) (3 Pro) (4 VPl2);
  ## Vous ne lui voulez pas
SELECT Tn IF (0 Vous) (1 Ne) (2 Pro) (3 VPl2);
  ## Vous ne lui voulez pas

SELECT Pro IF (-1 Je) (0 Pro) (1 VSg1);
  ## Je vous parle
SELECT Pro IF (-2 Je) (-1 Ne) (0 Pro) (1 VSg1);
  ## Je ne vous parle pas
SELECT Pro IF (-1 Je) (0 Pro) (1 Pro) (2 VSg1);
  ## Je vous en parle
SELECT Pro IF (-2 Je) (-1 Ne) (0 Pro) (1 Pro) (2 VSg1);
  ## Je ne vous en parle pas
SELECT Pro IF (-1 Tu) (0 Pro) (1 VSg2);
  ## Tu nous parles
SELECT Pro IF (-2 Tu) (-1 Ne) (0 Pro) (1 VSg2);
  ## Tu ne nous parles pas
SELECT Pro IF (-1 Tu) (0 Pro) (1 Pro) (2 VSg2);
  ## Tu nous en parles
SELECT Pro IF (-2 Tu) (-1 Ne) (0 Pro) (1 Pro) (2 VSg2);
  ## Tu ne nous en parles pas
SELECT Pro IF (-1 Il + Sg OR On) (0 Pro) (1 VSg3);
  ## Elle vous parle
SELECT Pro IF (-2 Il + Sg OR On) (-1 Ne) (0 Pro) (1 VSg3);
  ## Elle ne vous parle pas
SELECT Pro IF (-1 Il + Sg OR On) (0 Pro) (1 Pro) (2 VSg3);
  ## Elle vous en parle
SELECT Pro IF (-2 Il + Sg OR On) (-1 Ne) (0 Pro) (1 Pro) (2 VSg3);
  ## Elle ne vous en parle pas
SELECT Pro IF (-1 Nous) (0 Pro) (1 VPl1);
  ## Nous vous parlons
SELECT Pro IF (-2 Nous) (-1 Ne) (0 Pro) (1 VPl1);
  ## Nous ne vous parlons pas
SELECT Pro IF (-1 Nous) (0 Pro) (1 Pro) (2 VPl1);
  ## Nous vous en parlons
SELECT Pro IF (-2 Nous) (-1 Ne) (0 Pro) (1 Pro) (2 VPl1);
  ## Nous ne vous en parlons pas
SELECT Pro IF (-1 Vous) (0 Pro) (1 VPl2);
  ## Vous nous parlez
SELECT Pro IF (-2 Vous) (-1 Ne) (0 Pro) (1 VPl2);
  ## Vous ne nous parlez pas
SELECT Pro IF (-1 Vous) (0 Pro) (1 Pro) (2 VPl2);
  ## Vous nous en parlez
SELECT Pro IF (-2 Vous) (-1 Ne) (0 Pro) (1 Pro) (2 VPl2);
  ## Vous ne nous en parlez pas
SELECT Pro IF (-1 Il + Pl) (0 Pro) (1 VPl3);
  ## Elles vous parlent
SELECT Pro IF (-2 Il + Pl) (-1 Ne) (0 Pro) (1 VPl3);
  ## Elles ne vous parlent pas
SELECT Pro IF (-1 Il + Pl) (0 Pro) (1 Pro) (2 VPl3);
  ## Elles vous en parlent
SELECT Pro IF (-2 Il + Pl) (-1 Ne) (0 Pro) (1 Pro) (2 VPl3);
  ## Elles ne vous en parlent pas


SELECT P1 IF (-1 Je) (0 VSg1);								# Je veux
SELECT P1 IF (0 VSg1) (0 (META:/-/r)) (1 Je) ;				# Veux-je
SELECT P1 IF (0 VSg1) (1 ("<-je>"i)) ;						# Veux-je
SELECT P1 IF (-2 Je) (-1 Ne) (0 VSg1);						# Je ne veux pas
SELECT P1 IF (-2 Je) (-1 Pro) (0 VSg1);						# Je lui veux
SELECT P1 IF (-3 Je) (-2 Ne) (-1 Pro) (0 VSg1);				# Je ne lui veux pas
SELECT P1 IF (-3 Je) (-2 Pro) (-1 Pro) (0 VSg1);			# Je lui en veux
SELECT P1 IF (-4 Je) (-3 Ne) (-2 Pro) (-1 Pro) (0 VSg1);	# Je ne lui en veux pas
REMOVE P1 + Sg IF (NOT -1* Je) (0 Verb + P1 + Sg) ;

SELECT P2 IF (-1 Tu) (0 VSg2);								# Tu veux
SELECT P2 IF (0 VSg2) (0 (META:/-/r)) (1 Tu) ;				# Veux-tu
SELECT P2 IF (0 VSg2) (1 ("<-tu>"i)) ;						# Veux-tu
SELECT P2 IF (1 Tu) (0 VSg2);								# Veux-tu
SELECT P2 IF (-2 Tu) (-1 Ne) (0 VSg2);						# Tu ne veux pas
SELECT P2 IF (-2 Tu) (-1 Pro) (0 VSg2);						# Tu lui veux
SELECT P2 IF (-3 Tu) (-2 Ne) (-1 Pro) (0 VSg2);				# Tu ne lui veux pas
SELECT P2 IF (-3 Tu) (-2 Pro) (-1 Pro) (0 VSg2);			# Tu lui en veux
SELECT P2 IF (-4 Tu) (-3 Ne) (-2 Pro) (-1 Pro) (0 VSg2);	# Tu ne lui en veux pas
REMOVE P2 + Sg IF (NOT -1* Tu) (0 Verb + P2 + Sg) (NOT 0 Verb + P2 + Sg + Imper) ;

SELECT P3 IF (NOT -2 (META:/-/r)) (-1 Il + Sg OR On OR ToutLeMonde) (0 VSg3);	# Elle parle
SELECT P3 IF (0 VSg3) (0 (META:/-/r)) (1 Il + Sg OR On) ;						# Dit-il
SELECT P3 IF (0 VSg3) (1 ("<-il>"i) OR ("<-t-il>"i)) ;							# Dit-il
SELECT P3 IF (0 VSg3) (1 ("<-elle>"i) OR ("<-t-elle>"i)) ;						# Dit-elle
SELECT P3 IF (0 VSg3) (1 ("<-on>"i) OR ("<-t-on>"i)) ;							# Dit-on
SELECT P3 IF (0 VPl3) (1 ("<-ils>"i) OR ("<-t-ils>"i)) ;
SELECT P3 IF (0 VPl3) (1 ("<-elles>"i) OR ("<-t-elles>"i)) ;
#SELECT P3 IF (1 Il + Sg OR On) (0 VSg3) (0C Verb);							# Parle-t-elle
SELECT P3 IF (-2 Il + Sg OR On OR ToutLeMonde) (-1 Ne) (0 VSg3);				# Elle ne parle pas
SELECT P3 IF (-2 Il + Sg OR On OR ToutLeMonde) (-1 Pro) (0 VSg3);				# Elle lui parle
SELECT P3 IF (-3 Il + Sg OR On OR ToutLeMonde) (-2 Ne) (-1 Pro) (0 VSg3);		# Elle ne lui parle pas
SELECT P3 IF (-3 Il + Sg OR On OR ToutLeMonde) (-2 Pro) (-1 Pro) (0 VSg3);		# Elle lui en parle
SELECT P3 IF (-4 Il + Sg OR On OR ToutLeMonde) (-3 Ne) (-2 Pro) (-1 Pro) (0 VSg3);	# Elle ne lui en parle pas
SELECT P3 IF (-1 BOS) (0 ("<Elle>")) (NOT 1 Ant OR Cog) ;				# Elle est mon chef
REMOVE NP IF (-1 BOS) (0 ("Elles")) (1* Verb + P3 + Pl) ;

SELECT Prep IF (0 ("<entre>"i)) (1 Num) (2 CnjCoo) (3 Num) ;
SELECT Prep IF (0 ("<entre>"i)) (1 Jours) (2 CnjCoo) (3 Jours) ;
SELECT Prep IF (0 ("<entre>"i)) (1 Mois) (2 CnjCoo) (3 Mois) ;
SELECT Prep IF (0 ("<entre>"i)) (1 Mois) (2 Num) (3 CnjCoo) (4 Mois) (5 Num) ;
SELECT Prep IF (0 ("<entre>"i)) (1 Det) (2 Num) (3 CnjCoo) (4 Det) (5 Num) ;
SELECT Prep IF (0 ("<entre>"i)) (1 Det) (2 Num) (3 Mois) (4 CnjCoo) (5 Det) (6 Num) (7 Mois) ;
SELECT Prep IF (0 ("<entre>"i)) (1 Det) (2 Num) (3 Mois) (4 Num) (5 CnjCoo) (6 Det) (7 Num) (8 Mois) (9 Num) ;

SELECT Prep IF (0 ("<contre>"i)) (NOT -1 Pro) (NOT 1 Adv) ;

REMOVE N IF (-1C N) (0 Prep) (1 Det OR A OR N) ;	# conservation sous vide
REMOVE N IF (0 Prep) (1C N) ;	# sous athmosphère protectrice
REMOVE N IF (0 Prep) (1 N + &&ConcordeSN) (2 A + &&ConcordeSN) ;
REMOVE N IF (0 Prep) (1 Det + &&ConcordeSN) (2 N + &&ConcordeSN) ;

SELECT P3 IF (NOT -2 Prep) (-1 Ant OR Cog OR unknownMajIni) (0 VSg3);					# Jean parle
SELECT P3 IF (NOT -3 Prep) (-2 Ant OR Cog OR unknownMajIni) (-1 Ne) (0 VSg3);				# Jean ne parle pas
SELECT P3 IF (NOT -3 Prep) (-2 Ant OR Cog OR unknownMajIni) (-1 Pro) (0 VSg3);				# Jean lui parle
SELECT P3 IF (NOT -4 Prep) (-3 Ant OR Cog OR unknownMajIni) (-2 Ne) (-1 Pro) (0 VSg3);			# Jean ne lui parle pas
SELECT P3 IF (NOT -4 Prep) (-3 Ant OR Cog OR unknownMajIni) (-2 Pro) (-1 Pro) (0 VSg3);		# Jean lui en parle
SELECT P3 IF (NOT -5 Prep) (-4 Ant OR Cog OR unknownMajIni) (-3 Ne) (-2 Pro) (-1 Pro) (0 VSg3);	# Jean ne lui en parle pas
SELECT P3 IF (NOT -3 Prep) (-2 Ant) (-1 unknownMajIni) (0 VSg3);					# Jean Étrangeov parle
SELECT P3 IF (NOT -4 Prep) (-3 Ant) (-2 unknownMajIni) (-1 Ne) (0 VSg3);				# Jean Étrangeov ne parle pas
SELECT P3 IF (NOT -4 Prep) (-3 Ant) (-2 unknownMajIni) (-1 Pro) (0 VSg3);				# Jean Étrangeov lui parle
SELECT P3 IF (NOT -5 Prep) (-4 Ant) (-3 unknownMajIni) (-2 Ne) (-1 Pro) (0 VSg3);			# Jean Étrangeov ne lui parle pas
SELECT P3 IF (NOT -5 Prep) (-4 Ant) (-3 unknownMajIni) (-2 Pro) (-1 Pro) (0 VSg3);			# Jean Étrangeov lui en parle
SELECT P3 IF (NOT -6 Prep) (-5 Ant) (-4 unknownMajIni) (-3 Ne) (-2 Pro) (-1 Pro) (0 VSg3);		# Jean Étrangeov ne lui en parle pas
SELECT Pro IF (NOT -2 Prep) (-1 Ant OR Cog OR unknownMajIni) (0 Pro) (1 VSg3);				# Jean lui parle
SELECT Pro IF (NOT -3 Prep) (-2 Ant OR Cog OR unknownMajIni) (-1 Ne) (0 Pro) (1 VSg3);			# Jean ne lui parle pas
SELECT Pro IF (NOT -3 Prep) (-2 Ant OR Cog OR unknownMajIni) (-1 Pro) (0 Pro) (1 VSg3);			# Jean lui en parle
SELECT Pro IF (NOT -4 Prep) (-3 Ant OR Cog OR unknownMajIni) (-2 Ne) (-1 Pro) (0 Pro) (1 VSg3);		# Jean ne lui en parle pas
SELECT Pro IF (NOT -3 Prep) (-2 Ant) (-1 unknownMajIni) (0 Pro) (1 VSg3);				# Jean Étrangeov lui parle
SELECT Pro IF (NOT -4 Prep) (-3 Ant) (-2 unknownMajIni) (-1 Ne) (0 Pro) (1 VSg3);			# Jean Étrangeov ne lui parle pas
SELECT Pro IF (NOT -4 Prep) (-3 Ant) (-2 unknownMajIni) (-1 Pro) (0 Pro) (1 VSg3);			# Jean Étrangeov lui en parle
SELECT Pro IF (NOT -5 Prep) (-4 Ant) (-3 unknownMajIni) (-2 Ne) (-1 Pro) (0 Pro) (1 VSg3);		# Jean Étrangeov ne lui en parle pas

SELECT PP IF (-2 Haver + VSg1) (-2 (META:/-/r)) (-1 Je) ;	# Ai-je été
SELECT PP IF (-2 Haver + VSg2) (-2 (META:/-/r)) (-1 Tu) ;
SELECT PP IF (-2 Haver + VSg3) (-2 (META:/-/r)) (-1 Il OR On) ;
SELECT PP IF (-2 Haver + VPl1) (-2 (META:/-/r)) (-1 Nous) ;
SELECT PP IF (-2 Haver + VPl2) (-2 (META:/-/r)) (-1 Vous) ;
SELECT PP IF (-2 Haver + VPl3) (-2 (META:/-/r)) (-1 Il) ;
SELECT PP IF (-3 Haver + VSg1) (-3 (META:/-/r)) (-2 Je) (-1 Adv) ;	# Ai-je toujours été
SELECT PP IF (-3 Haver + VSg2) (-3 (META:/-/r)) (-2 Tu) (-1 Adv) ;
SELECT PP IF (-3 Haver + VSg3) (-3 (META:/-/r)) (-2 Il OR On) (-1 Adv) ;
SELECT PP IF (-3 Haver + VPl1) (-3 (META:/-/r)) (-2 Nous) (-1 Adv) ;
SELECT PP IF (-3 Haver + VPl2) (-3 (META:/-/r)) (-2 Vous) (-1 Adv) ;
SELECT PP IF (-3 Haver + VPl3) (-3 (META:/-/r)) (-2 Il) (-1 Adv) ;
SELECT PP IF (-4 Haver + VSg1) (-4 (META:/-/r)) (-3 Je) (-2 Adv) (-1 Adv) ;	# N'ai-je pas toujours été
SELECT PP IF (-4 Haver + VSg2) (-4 (META:/-/r)) (-3 Tu) (-2 Adv) (-1 Adv) ;
SELECT PP IF (-4 Haver + VSg3) (-4 (META:/-/r)) (-3 Il OR On) (-2 Adv) (-1 Adv) ;
SELECT PP IF (-4 Haver + VPl1) (-4 (META:/-/r)) (-3 Nous) (-2 Adv) (-1 Adv) ;
SELECT PP IF (-4 Haver + VPl2) (-4 (META:/-/r)) (-3 Vous) (-2 Adv) (-1 Adv) ;
SELECT PP IF (-4 Haver + VPl3) (-4 (META:/-/r)) (-3 Il) (-2 Adv) (-1 Adv) ;
SELECT Haver IF (0 Haver + VSg1) (0 (META:/-/r)) (1 Je) (2 PP) ;	# Ai-je été
SELECT Haver IF (0 Haver + VSg2) (0 (META:/-/r)) (1 Tu) (2 PP) ;
SELECT Haver IF (0 Haver + VSg3) (0 (META:/-/r)) (1 Il OR On) (2 PP) ;
SELECT Haver IF (0 Haver + VPl1) (0 (META:/-/r)) (1 Nous) (2 PP) ;
SELECT Haver IF (0 Haver + VPl2) (0 (META:/-/r)) (1 Vous) (2 PP) ;
SELECT Haver IF (0 Haver + VPl3) (0 (META:/-/r)) (1 Il) (2 PP) ;
SELECT Haver IF (0 Haver + VSg1) (0 (META:/-/r)) (1 Je) (2 Adv) (3 PP) ;	# Ai-je toujours été
SELECT Haver IF (0 Haver + VSg2) (0 (META:/-/r)) (1 Tu) (2 Adv) (3 PP) ;
SELECT Haver IF (0 Haver + VSg3) (0 (META:/-/r)) (1 Il OR On) (2 Adv) (3 PP) ;
SELECT Haver IF (0 Haver + VPl1) (0 (META:/-/r)) (1 Nous) (2 Adv) (3 PP) ;
SELECT Haver IF (0 Haver + VPl2) (0 (META:/-/r)) (1 Vous) (2 Adv) (3 PP) ;
SELECT Haver IF (0 Haver + VPl3) (0 (META:/-/r)) (1 Il) (3 Adv) (3 PP) ;
SELECT Haver IF (0 Haver + VSg1) (0 (META:/-/r)) (1 Je) (2 Adv) (3 Adv) (4 PP) ;	# N'ai-je pas toujours été
SELECT Haver IF (0 Haver + VSg2) (0 (META:/-/r)) (1 Tu) (2 Adv) (3 Adv) (4 PP) ;
SELECT Haver IF (0 Haver + VSg3) (0 (META:/-/r)) (1 Il OR On) (2 Adv) (3 Adv) (4 PP) ;
SELECT Haver IF (0 Haver + VPl1) (0 (META:/-/r)) (1 Nous) (2 Adv) (3 Adv) (4 PP) ;
SELECT Haver IF (0 Haver + VPl2) (0 (META:/-/r)) (1 Vous) (2 Adv) (3 Adv) (4 PP) ;
SELECT Haver IF (0 Haver + VPl3) (0 (META:/-/r)) (1 Il) (2 Adv) (3 Adv) (4 PP) ;

SELECT PP IF (-2 Haver + VSg1) (-2 (META:/-/r)) (-1 ("<-je>"i)) ;	# Ai-je été
SELECT PP IF (-2 Haver + VSg2) (-2 (META:/-/r)) (-1 ("<-tu>"i)) ;
SELECT PP IF (-2 Haver + VSg3) (-2 (META:/-/r)) (-1 ("<-il>"i) OR ("<-t-il>"i) OR ("<-elle>"i) OR ("<-t-elle>"i) OR ("<-on>"i) OR ("<-t-on>"i)) ;
SELECT PP IF (-2 Haver + VPl1) (-2 (META:/-/r)) (-1 ("<-nous>"i)) ;
SELECT PP IF (-2 Haver + VPl2) (-2 (META:/-/r)) (-1 ("<-vous">i)) ;
SELECT PP IF (-2 Haver + VPl3) (-2 (META:/-/r)) (-1 ("<-ils>"i) OR ("<-t-ils>"i) OR ("<-elles>"i) OR ("<-t-elles>"i)) ;
SELECT PP IF (-3 Haver + VSg1) (-3 (META:/-/r)) (-2 ("<-je>"i)) (-1 Adv) ;	# Ai-je toujours été
SELECT PP IF (-3 Haver + VSg2) (-3 (META:/-/r)) (-2 ("<-tu>"i)) (-1 Adv) ;
SELECT PP IF (-3 Haver + VSg3) (-3 (META:/-/r)) (-2 ("<-il>"i) OR ("<-t-il>"i) OR ("<-elle>"i) OR ("<-t-elle>"i) OR ("<-on>"i) OR ("<-t-on>"i)) (-1 Adv) ;
SELECT PP IF (-3 Haver + VPl1) (-3 (META:/-/r)) (-2 ("<-nous>"i)) (-1 Adv) ;
SELECT PP IF (-3 Haver + VPl2) (-3 (META:/-/r)) (-2 ("<-vous">i)) (-1 Adv) ;
SELECT PP IF (-3 Haver + VPl3) (-3 (META:/-/r)) (-2 ("<-ils>"i) OR ("<-t-ils>"i) OR ("<-elles>"i) OR ("<-t-elles>"i)) (-1 Adv) ;
SELECT PP IF (-4 Haver + VSg1) (-4 (META:/-/r)) (-3 ("<-je>"i)) (-2 Adv) (-1 Adv) ;	# N'ai-je pas toujours été
SELECT PP IF (-4 Haver + VSg2) (-4 (META:/-/r)) (-3 ("<-tu>"i)) (-2 Adv) (-1 Adv) ;
SELECT PP IF (-4 Haver + VSg3) (-4 (META:/-/r)) (-3 ("<-il>"i) OR ("<-t-il>"i) OR ("<-elle>"i) OR ("<-t-elle>"i) OR ("<-on>"i) OR ("<-t-on>"i)) (-2 Adv) (-1 Adv) ;
SELECT PP IF (-4 Haver + VPl1) (-4 (META:/-/r)) (-3 ("<-nous>"i)) (-2 Adv) (-1 Adv) ;
SELECT PP IF (-4 Haver + VPl2) (-4 (META:/-/r)) (-3 ("<-vous">i)) (-2 Adv) (-1 Adv) ;
SELECT PP IF (-4 Haver + VPl3) (-4 (META:/-/r)) (-3 ("<-ils>"i) OR ("<-t-ils>"i) OR ("<-elles>"i) OR ("<-t-elles>"i)) (-2 Adv) (-1 Adv) ;
SELECT Haver IF (0 Haver + VSg1) (0 (META:/-/r)) (1 ("<-je>"i)) (2 PP) ;	# Ai-je été
SELECT Haver IF (0 Haver + VSg2) (0 (META:/-/r)) (1 ("<-tu>"i)) (2 PP) ;
SELECT Haver IF (0 Haver + VSg3) (0 (META:/-/r)) (1 ("<-il>"i) OR ("<-t-il>"i) OR ("<-elle>"i) OR ("<-t-elle>"i) OR ("<-on>"i) OR ("<-t-on>"i)) (2 PP) ;
SELECT Haver IF (0 Haver + VPl1) (0 (META:/-/r)) (1 ("<-nous>"i)) (2 PP) ;
SELECT Haver IF (0 Haver + VPl2) (0 (META:/-/r)) (1 ("<-vous">i)) (2 PP) ;
SELECT Haver IF (0 Haver + VPl3) (0 (META:/-/r)) (1 ("<-ils>"i) OR ("<-t-ils>"i) OR ("<-elles>"i) OR ("<-t-elles>"i)) (2 PP) ;
SELECT Haver IF (0 Haver + VSg1) (0 (META:/-/r)) (1 ("<-je>"i)) (2 Adv) (3 PP) ;	# Ai-je toujours été
SELECT Haver IF (0 Haver + VSg2) (0 (META:/-/r)) (1 ("<-tu>"i)) (2 Adv) (3 PP) ;
SELECT Haver IF (0 Haver + VSg3) (0 (META:/-/r)) (1 ("<-il>"i) OR ("<-t-il>"i) OR ("<-elle>"i) OR ("<-t-elle>"i) OR ("<-on>"i) OR ("<-t-on>"i)) (2 Adv) (3 PP) ;
SELECT Haver IF (0 Haver + VPl1) (0 (META:/-/r)) (1 ("<-nous>"i)) (2 Adv) (3 PP) ;
SELECT Haver IF (0 Haver + VPl2) (0 (META:/-/r)) (1 ("<-vous">i)) (2 Adv) (3 PP) ;
SELECT Haver IF (0 Haver + VPl3) (0 (META:/-/r)) (1 ("<-ils>"i) OR ("<-t-ils>"i) OR ("<-elles>"i) OR ("<-t-elles>"i)) (3 Adv) (3 PP) ;
SELECT Haver IF (0 Haver + VSg1) (0 (META:/-/r)) (1 ("<-je>"i)) (2 Adv) (3 Adv) (4 PP) ;	# N'ai-je pas toujours été
SELECT Haver IF (0 Haver + VSg2) (0 (META:/-/r)) (1 ("<-tu>"i)) (2 Adv) (3 Adv) (4 PP) ;
SELECT Haver IF (0 Haver + VSg3) (0 (META:/-/r)) (1 ("<-il>"i) OR ("<-t-il>"i) OR ("<-elle>"i) OR ("<-t-elle>"i) OR ("<-on>"i) OR ("<-t-on>"i)) (2 Adv) (3 Adv) (4 PP) ;
SELECT Haver IF (0 Haver + VPl1) (0 (META:/-/r)) (1 ("<-nous>"i)) (2 Adv) (3 Adv) (4 PP) ;
SELECT Haver IF (0 Haver + VPl2) (0 (META:/-/r)) (1 ("<-vous">i)) (2 Adv) (3 Adv) (4 PP) ;
SELECT Haver IF (0 Haver + VPl3) (0 (META:/-/r)) (1 ("<-ils>"i) OR ("<-t-ils>"i) OR ("<-elles>"i) OR ("<-t-elles>"i)) (2 Adv) (3 Adv) (4 PP) ;

SELECT PP IF (-2 Haver + &&ConcordeSV) (-1C Pers + Tn + &&ConcordeSV) ;				# avez-vous été
SELECT PP IF (-3 Haver + &&ConcordeSV) (-2C Pers + Tn + &&ConcordeSV) (-1 Adv OR CnjAdv) ;	# n'avez-vous pas été
SELECT PP IF (-4 Haver + &&ConcordeSV) (-3C Pers + Tn + &&ConcordeSV) (-2 Adv OR CnjAdv) (-1 Adv OR CnjAdv) ;	# n'avez-vous pas toujours été

REMOVE Haver (NOT 1 PP OR CM) (NOT 2 PP) (NOT 3 PP) ;

SELECT Tn IF (NOT -1 Prn) (0 Nous) (1 VPl1);		# parce que nous parlons
SELECT Tn IF (-1 VPl1) (-1 (META:/-/r)) (0 Nous) ;	# sommes-nous
SELECT Tn IF (-1 VPl1) (0 ("<-nous>"i)) ;			# sommes-nous
#SUBSTITUTE SUB:1 Enc Tn TARGET ("([a-z]*)"r) IF (0 VPl1) (0/* Nous) ;	# mangeons-nous ; mais : réjouissons-nous
#SUBSTITUTE SUB:1 Enc Tn TARGET ("([a-z]*)"r) IF (0 VPl1) (0/* Nous) ;
SELECT VPl1 IF (-1C Nous + Tn) (0 VPl1);		# nous savons que

SELECT Tn IF (NOT -1 Prn) (0 Vous) (1 VPl2);		# parce que vous parlez
SELECT Tn IF (-1 VPl2) (-1 (META:/-/r)) (0 Vous) ;	# êtes-vous
SELECT Tn IF (-1 VPl2) (0 ("<-vous>"i)) ;			# êtes-vous
#SUBSTITUTE SUB:1 Enc Tn TARGET ("([a-z]*)"r) IF (0 VPl2) (0/* Vous) ;	# mangez-vous ; mais : réjouissez-vous

SELECT Tn IF (-1 VSg2) (-1 (META:/-/r)) (0 Tu) ;	# as-tu
SELECT Tn IF (-1 VSg2) (0 ("<-tu>"i)) ;				# as-tu

SELECT PP IF (-1 Haver) (0 PP) ;	# Vous avez dit
SELECT PP IF (-2 Haver) (-1C Adv OR ("pas")) (0 PP) ;	# Vous avez toujours dit
SELECT Sg IF (-1 Ser + Sg) (0 PP + Sg) (NOT -2 Haver) ;	# est pris
SELECT Pl IF (-1 Ser + Pl) (0 PP + Pl) (NOT -2 Haver) ;	# sont pris
SELECT Sg IF (-2 Ser + Sg) (-1 Adv) (0 PP + Sg) (NOT -3 Haver) ;	# n'est pas pris
SELECT Pl IF (-2 Ser + Pl) (-1 Adv) (0 PP + Pl) (NOT -3 Haver) ;	# ne sont pas pris
SELECT Sg IF (-3 Ser + Sg) (-2 Adv) (-1 Adv) (0 PP + Sg) (NOT -4 Haver) ;	# n'est pas toujours pris
SELECT Pl IF (-3 Ser + Pl) (-2 Adv) (-1 Adv) (0 PP + Pl) (NOT -4 Haver) ;	# ne sont pas toujours pris
SELECT Sg IF (-2 Haver + Sg) (-1 Ser + PP) (0 PP + Sg) ;	# a été pris
SELECT Pl IF (-2 Haver + Pl) (-1 Ser + PP) (0 PP + Pl) ;	# ont été pris
SELECT Sg IF (-3 Haver + Sg) (-2 Adv) (-1 Ser + Sg) (0 PP + Sg) ;	# n'a pas été pris
SELECT Pl IF (-3 Haver + Pl) (-2 Adv) (-1 Ser + Pl) (0 PP + Pl) ;	# n'ont pas été pris
SELECT Sg IF (-4 Haver + Sg) (-3 Adv) (-2 Ser + Sg) (-1 Adv) (0 PP + Sg) ;	# n'a pas été toujours pris
SELECT Pl IF (-4 Haver + Pl) (-3 Adv) (-2 Ser + Pl) (-1 Adv) (0 PP + Pl) ;	# n'ont pas été toujours pris
SELECT Sg IF (NOT -2 Pro) (-1 Haver) (0 PP + Sg_Pl) ;	# Vous avez pris
SELECT Sg IF (NOT -3 Pro) (-2 Haver) (-1C Adv) (0 PP + Sg_Pl) ;	# Vous avez toujours pris
SELECT Sg IF (-2 Pro + Sg) (-1 Haver) (0 PP + Sg_Pl) ;	# Vous lui avez pris
SELECT Pl IF (-2 Pro + Pl) (-2 ("le")) (-1 Haver) (0 PP + Sg_Pl) ;	# Vous les avez pris
SELECT Sg IF (-2 Pro + Pl) (-2 ("leur")) (-1 Haver) (0 PP + Sg_Pl) ;	# Vous leur avez pris
SELECT Sg IF (-3 Pro + Sg) (-2 Haver) (-1C Adv) (0 PP + Sg_Pl) ;	# Vous lui avez toujours pris
SELECT Pl IF (-3 Pro + Pl) (-3 ("le")) (-2 Haver) (-1C Adv) (0 PP + Sg_Pl) ;	# Vous les avez toujours pris
SELECT Sg IF (-3 Pro + Pl) (-3 ("leur")) (-2 Haver) (-1C Adv) (0 PP + Sg_Pl) ;	# Vous leur avez toujours pris
SELECT PP IF (-3 Ne) (-2 Haver) (0 PP) ;	# Vous n'avez pas dit
SELECT PP IF (-4 Ne) (-3 Haver) (-2 Pas) (-1C Adv) (0 PP) ;	# Vous n'avez pas toujours dit
SELECT Sg IF (-3 Ne) (-2 Haver) (0 PP + Sg_Pl) ;	# Vous n'avez pas pris
SELECT Sg IF (-4 Ne) (-3 Haver) (-2 Pas) (-1C Adv) (0 PP + Sg_Pl) ;	# Vous n'avez pas toujours pris
SELECT PP IF (-4 Ne) (-3 Pro) (-2 Haver) (1 Adv) (0 PP) ;	# Vous ne lui avez pas dit
SELECT PP IF (-5 Ne) (-4 Pro) (-3 Haver) (-2 Pas) (-1C Adv) (0 PP) ;	# Vous ne lui avez pas toujours dit
SELECT Sg IF (-4 Ne) (-3 Pro + Sg) (-2 Haver) (0 PP + Sg_Pl) ;	# Vous ne lui avez pas pris
SELECT Pl IF (-4 Ne) (-3 Pro + Pl) (-3 ("le")) (-2 Haver) (0 PP + Sg_Pl) ;	# Vous ne les avez pas pris
SELECT Sg IF (-4 Ne) (-3 Pro + Pl) (-3 ("leur")) (-2 Haver) (0 PP + Sg_Pl) ;	# Vous ne leur avez pas pris
SELECT Sg IF (-5 Ne) (-4 Pro + Sg) (-3 Haver) (-2 Pas) (-1C Adv) (0 PP + Sg_Pl) ;	# Vous ne lui avez pas toujours pris
SELECT Pl IF (-5 Ne) (-4 Pro + Pl) (-4 ("le")) (-3 Haver) (-2 Pas) (-1C Adv) (0 PP + Sg_Pl) ;	# Vous ne les avez pas toujours pris
SELECT Sg IF (-5 Ne) (-4 Pro + Pl) (-4 ("leur")) (-3 Haver) (-2 Pas) (-1C Adv) (0 PP + Sg_Pl) ;	# Vous ne leur avez pas toujours pris
SELECT PP IF (-5 Ne) (-4 Pro) (-3 Pro) (-2 Haver) (0 PP) ;	# Vous ne le lui avez pas dit
SELECT PP IF (-6 Ne) (-5 Pro) (-4 Pro) (-3 Haver) (-2 Pas) (-1C Adv) (0 PP) ;	# Vous ne le lui avez pas toujours dit
SELECT Sg IF (-5 Ne) (-4 Pro + Sg) (-3 Pro) (-2 Haver) (0 PP + Sg_Pl) ;	# Vous ne le lui avez pas pris
SELECT Pl IF (-5 Ne) (-4 Pro + Pl) (-3 Pro) (-2 Haver) (0 PP + Sg_Pl) ;	# Vous ne les lui avez pas pris
SELECT Sg IF (-6 Ne) (-5 Pro + Sg) (-4 Pro) (-3 Haver) (-2 Pas) (-1C Adv) (0 PP + Sg_Pl) ;	# Vous ne le lui avez pas toujours pris
SELECT Pl IF (-6 Ne) (-5 Pro + Pl) (-4 Pro) (-3 Haver) (-2 Pas) (-1C Adv) (0 PP + Sg_Pl) ;	# Vous ne les lui avez pas toujours pris
#SELECT PP IF (-3 Pro) (-2 Haver) (-1 Adv) (0 PP) ; 	# Vous lui avez toujours dit
#SELECT PP IF (-5 Ne) (-4 Pro) (-3 Haver) (-2 Adv) (-1 Adv) (0 PP) ;
#SELECT Haver IF (-2 Ne) (-1 Pro) (-0 Haver) (1 Adv) (2 Adv) (3 PP) ; 	# Vous ne lui avez pas toujours dit
SELECT PP IF (-2 Ne) (-1 Ser) (0 PP) (1 Que) ;	# n'est accordé qu'aux entreprises
SELECT PP IF (-3 Ne) (-2 Adv) (-1 Ser) (0 PP) (1 Que) ;	# n'est plus accordé qu'aux entreprises

SELECT PP (-3 Je) (-2 Me) (-1 Ser + P1 + Sg) (0 PP + Sg) ;
SELECT PP (-3 Tu) (-2 Te) (-1 Ser + P2 + Sg) (0 PP + Sg) ;
SELECT PP (-2 Se) (-1 Ser + P3 + Sg) (0 PP + Sg) ;
SELECT PP (-3 Nous) (-2 Nous) (-1 Ser + P1 + Pl) (0 PP + Pl) ;
SELECT PP (-3 Vous) (-2 Vous) (-1 Ser + P2 + Pl) (0 PP) ;
SELECT PP (-2 Se) (-1 Ser + P3 + Pl) (0 PP + Pl) ;

SELECT PP (-4 Je) (-3 Me) (-2 Ser + P1 + Sg) (-1 Adv) (0 PP + Sg) ;
SELECT PP (-4 Tu) (-3 Te) (-2 Ser + P2 + Sg) (-1 Adv) (0 PP + Sg) ;
SELECT PP (-3 Se) (-2 Ser + P3 + Sg) (-1 Adv) (0 PP + Sg) ;
SELECT PP (-4 Nous) (-3 Nous) (-2 Ser + P1 + Pl) (-1 Adv) (0 PP + Pl) ;
SELECT PP (-4 Vous) (-3 Vous) (-2 Ser + P2 + Pl) (-1 Adv) (0 PP) ;
SELECT PP (-3 Se) (-2 Ser + P3 + Pl) (-1 Adv) (0 PP + Pl) ;

SELECT PP (-5 Je) (-4 Ne) (-3 Me) (-2 Ser + P1 + Sg) (-1 Adv) (0 PP + Sg) ;
SELECT PP (-5 Tu) (-4 Ne) (-3 Te) (-2 Ser + P2 + Sg) (-1 Adv) (0 PP + Sg) ;
SELECT PP (-5 Nous) (-4 Ne) (-3 Nous) (-2 Ser + P1 + Pl) (-1 Adv) (0 PP + Pl) ;
SELECT PP (-5 Vous) (-4 Ne) (-3 Vous) (-2 Ser + P2 + Pl) (-1 Adv) (0 PP) ;

SELECT PP (-6 Je) (-5 Ne) (-4 Me) (-3 Ser + P1 + Sg) (-2 Adv) (-1 Adv) (0 PP + Sg) ;
SELECT PP (-6 Tu) (-5 Ne) (-4 Te) (-3 Ser + P2 + Sg) (-2 Adv) (-1 Adv) (0 PP + Sg) ;
SELECT PP (-5 Se) (-4 Ser + P3 + Sg) (-3 Adv) (-1 Adv) (0 PP + Sg) ;
SELECT PP (-6 Nous) (-5 Ne) (-4 Nous) (-3 Ser + P1 + Pl) (-2 Adv) (-1 Adv) (0 PP + Pl) ;
SELECT PP (-6 Vous) (-5 Ne) (-4 Vous) (-3 Ser + P2 + Pl) (-2 Adv) (-1 Adv) (0 PP) ;
SELECT PP (-5 Se) (-4 Ser + P3 + Pl) (-3 Adv) (-1 Adv) (0 PP + Pl) ;

SELECT PP IF (-4 Haver + &&ConcordeSV) (-3 CM) (-2 Tn + &&ConcordeSV) (-1 CM) (0 PP) ;	# a, lui, dit
SELECT Haver IF (0 Haver + &&ConcordeSV) (1 CM) (2 Tn + &&ConcordeSV) (3 CM) (4 PP) ;	# a, lui, dit
SELECT PP IF (-5 ("se")) (-4 Ser + &&ConcordeSV) (-3 CM) (-2 Tn + &&ConcordeSV + &&ConcordeSN) (-1 CM) (0 PP + &&ConcordeSN) ;	# s'est, lui, dit
SELECT Ser IF (-1 ("se")) (0 Ser + &&ConcordeSV) (1 CM) (2 Tn + &&ConcordeSV + &&ConcordeSN) (3 CM) (4 PP + &&ConcordeSN) ;	# s'est, lui, dit

SELECT Masc IF (-1 Haver) (0 PP + M_F) ;	# Vous avez pu
SELECT Masc IF (-2 Haver) (-1C Adv) (0 PP + M_F) ;	# Vous avez toujours pu
SELECT Masc IF (-3 Haver) (-2C Adv) (-1C Adv) (0 PP + M_F) ;	# Vous n'avez pas toujours pu

SELECT PP IF (-2 ("se")) (-1 Ser + &&ConcordeSP) (0 PP + &&ConcordeSP) ;	# s'est mouillé ; se sont mouillés
SELECT PP IF (-3 ("se")) (-2 Ser + &&ConcordeSP) (-1 Adv) (0 PP + &&ConcordeSP) ;	# ne s'est pas mouillé ; ne se sont pas mouillés
SELECT PP IF (-4 ("se")) (-3 Ser + &&ConcordeSP) (-2 Adv) (-1 Adv) (0 PP + &&ConcordeSP) ;	# ne s'est pas bien mouillé ; ne se sont pas bien mouillés
REMOVE PP IF (-1 ("se")) (0 Verb + P3) ;	# se fait

SELECT PP IF (-2 Haver + &&ConcordeSP) (-1 Ser + PP) (0 PP + &&ConcordeSP) ;	# a été nommé
SELECT PP IF (-3 Haver + &&ConcordeSP) (-2 Adv) (-1 Ser + PP) (0 PP + &&ConcordeSP) ;	# n'a pas été nommé
SELECT PP IF (-3 Haver + &&ConcordeSP) (-2 Ser + PP) (-1 Adv) (0 PP + &&ConcordeSP) ;	# a été complètement assujetti
SELECT PP IF (-4 Haver + &&ConcordeSP) (-3 Adv) (-2 Ser + PP) (-1 Adv) (0 PP + &&ConcordeSP) ;	# n'a pas été bien nommé
SELECT PP IF (-4 Haver + &&ConcordeSP) (-3 Adv) (-2 Adv) (-1 Ser + PP) (0 PP + &&ConcordeSP) ;	# n'a probablement jamais été marié

SELECT PP IF (-1 Ser) (0 ("fini")) ;
SELECT PP IF (-2 Ser) (-1 Adv) (0 ("fini")) ;
SELECT PP IF (-3 Ser) (-2 Adv) (-1 Adv) (0 ("fini")) ;
  ## c'est fini

SELECT V IF (-1 ("»")) (0 V + P3) (1 Ant OR Cog) ;			# «… » estime Durand.
SELECT V IF (-1 ("»")) (0 V + P3) (1 N) (2 Ant OR Cog) ;		# «… » estime M. Durand.
SELECT V IF (-1 ("»")) (0 V + P3 + Sg) (1 Det + Sg) (2 N + Sg) ;	# «… » estime le médecin
SELECT V IF (-1 (META:/»/r)) (0 V + P3) (1 Ant OR Cog) ;		# «… » estime Durand.
SELECT V IF (-1 (META:/»/r)) (0 V + P3) (1 N) (2 Ant OR Cog) ;		# «… » estime M. Durand.
SELECT V IF (-1 (META:/»/r)) (0 V + P3 + Sg) (1 Det + Sg) (2 N + Sg) ;	# «… » estime le médecin

SELECT V IF (NOT -1 Det + MascSg) (0 ("<reste>"i)) (1 A + MascSg) ;
SELECT V IF (NOT -1 Det + MascSg) (0 ("<reste>"i)) (1 Adv_PreAdv) (2 A + MascSg) ;

SELECT ("convenir") IF (0 ("convier")) ;

SELECT Sg IF (-1C Noun_Adj + Sg_strict) (0C Adj_PP) ;
  ## le rayonnement émis
SELECT Pl IF (-1C Noun_Adj + Pl_strict) (0C Adj_PP) ;
  ## les rayonnements émis
SELECT Sg IF (-2C/* Det + Sg_strict) (-1C Noun_Adj + Sg) (0C Adj_PP) ;
  ## un pays conquis
SELECT Pl IF (-2C/* Det + Pl_strict) (-1C Noun_Adj + Sg) (0C Adj_PP) ;
  ## des pays conquis

SELECT A IF (-2 VerbAttr + P3) (-1 Det + Def) (0 ("bonne")) ;				# la stratégie semble la bonne
SELECT A IF (-3 VerbAttr + P3) (-2 Adv) (-1 Det + Def) (0 ("bonne")) ;			# la stratégie ne semble pas la bonne
SELECT A IF (-4 VerbAttr + P3) (-3 Adv) (-2 Adv) (-1 Det + Def) (0 ("bonne")) ;		# la stratégie ne semble pas toujours la bonne
SELECT Sg IF (-2C Noun_Adj + Sg_strict) (-1 VerbAttr + P3 + Sg) (0C Adj_PP) ;	# le rayonnement est émis
SELECT Pl IF (-2C Noun_Adj + Pl_strict) (-1 VerbAttr + P3 + Pl) (0C Adj_PP) ;	# les rayonnements sont émis
SELECT Sg IF (-3C/* Det + Sg_strict) (-2C Noun_Adj + Sg) (-1 VerbAttr + P3 + Sg) (0C Adj_PP) ;	# un pays est conquis
SELECT Pl IF (-3C/* Det + Pl_strict) (-2C Noun_Adj + Sg) (-1 VerbAttr + P3 + Pl) (0C Adj_PP) ;	# des pays sont conquis

#REMOVE Verb + Pers IF (-1C Ser + Pers) (0 Verb + Pers) ;
REMOVE Verb + Pers IF (-1C Verb + Pers) (0 Verb + Pers) ;
  ## est vide

SELECT Prep IF (0 ("après")) (1 Inf) ;
  ## . Après avoir parcouru

SELECT PP IF (-1 Ser) (0 PP) (0C Verb) ;
  ## sont investis

REMOVE N IF (-1 Nous) (0 Somme OR Ser) ;
  ## nous sommes assaillis

SELECT Ser IF (-1* Je) (0 Ser + P1 + Sg) (1 PP + Sg);
  ## je suis bouleversé
SELECT Ser IF (-1* Je) (0 Ser + P1 + Sg) (1 Adv) (2 PP + Sg);
  ## je suis pas bouleversé
SELECT Ser IF (-1* Je) (0 Ser + P1 + Sg) (1 Adv) (2 Adv) (3 PP + Sg);
  ## je suis pas très bouleversé


SELECT N IF (-1 Det) (0 Ete) ;
  ## cet été
SELECT N IF (-1 Prep) (0 Ete) ;
  ## vacances d'été
SELECT Ser IF (-1 Adv) (0 Ete) (1 PP);
  ## a lui aussi été refait
SELECT Ser IF (0 Etayer) ;

SELECT Tn IF (-1 Barrera_Inicial_Estrict_SN OR CM) (0C Tn OR Pro) (1C Verb) ;	# que nous avons apris
SELECT Tn IF (-1 Barrera_Inicial_Estrict_SN OR CM) (0C Tn OR Pro) (1 Adv) (2C Verb) ;	# que nous n'avons pas apris

REMOVE Pro IF (NOT 1 Pro OR Vconj_pro OR Imp) ;	# Imp : solution provisioire pour "le voyez-vous"
SELECT Prep IF (0 En) (1C N OR A) ;
SELECT Prep IF (0 En) (1C Num) ;
SELECT Prep IF (0 En) (1 ("boucle")) ;	# rediffusé en boucle jusqu'à minuit
SELECT Prep IF (0 En) (1 ("aide")) ;	# vient en aide
SELECT Prep IF (0 En) (1 ("catastrophe")) ;
SELECT Prep IF (0 En) (1 ("ruine")) ;
SELECT Prep IF (-1 ("mise")) (0 En) (1 N) ;	# mise en vente
REMOVE Pro IF (0 En) (1 Verb) (NOT 1 Pers OR Inf OR Ger) (NOT 1 Pro);	# passer en revue
REMOVE Pro IF (0 En) (NOT 1 Verb OR Pro);	# sont en Inde
REMOVE Pro IF (0 En) (1 ("cela") OR ("ceci"));
REMOVE Pro IF (0 En) (1 ("équipe")) (2 De) ;
REMOVE Pro IF (0 En) (1 Ger);	# en passant
REMOVE Pro IF (0 En) (1 Pro) (2 Ger);	# en se dirigeant
SELECT Prep IF (0 En) (-1 ("prendre")) ;	# prendre en compte, prendre en consideration
SELECT Prep IF (0 En) (-1 Verb + Pers) (1 N) (NOT 1 Ger) ;	# lui donne en référence
SELECT Prep IF (0 En) (-2 Ser OR Haver) (-1 PP ) (1 N) (NOT 1 Ger) ;
SELECT Prep IF (0 En) (-3 Ser OR Haver) (-2 Adv) (-1 PP ) (1 N) (NOT 1 Ger) ;	# lui est donné en référence
SELECT Prep IF (-1 ("tomber") OR ("monter") OR ("mettre") OR ("retomber") OR ("remonter") OR ("remettre") OR ("reléguer") OR ("promouvoir")) (0 En) (NOT 1 Ger) ;
SELECT Prep IF (-2 ("tomber") OR ("monter") OR ("mettre") OR ("retomber") OR ("remonter") OR ("remettre") OR ("reléguer") OR ("promouvoir")) (-1 Adv) (0 En) (NOT 1 Ger) ;
SELECT Prep IF (-3 ("tomber") OR ("monter") OR ("mettre") OR ("retomber") OR ("remonter") OR ("remettre") OR ("reléguer") OR ("promouvoir")) (-2 Adv) (-1 Adv) (0 En) (NOT 1 Ger) ;
SELECT Prep IF (-2 Ser + &&ConcordeSP) (-1 ("supérieur") + &&ConcordeSP OR ("inférieur") + &&ConcordeSP) (0 En) (1 N) ; # sont supérieurs en nombre
SELECT Prep IF (-3 Ser + &&ConcordeSP) (-2 Adv OR PreAdv) (-1 ("supérieur") + &&ConcordeSP OR ("inférieur") + &&ConcordeSP) (0 En) (1 N) ; # sont très supérieurs en nombre ; ne sont pas supérieurs en nombre
SELECT Prep IF (-4 Ser + &&ConcordeSP) (-3 Adv) (-2 Adv OR PreAdv) (-1 ("supérieur") + &&ConcordeSP OR ("inférieur") + &&ConcordeSP) (0 En) (1 N) ; # ne sont pas très supérieurs en nombre ; ne sont pas supérieurs en nombre
SELECT Prep IF (-2 Ser + Inf OR Ser + Ger) (-1 ("supérieur") OR ("inférieur")) (0 En) (1 N) ; # étant supérieurs en nombre
SELECT Prep IF (-3 Ser + Inf OR Ser + Ger) (-2 Adv OR PreAdv) (-1 ("supérieur") OR ("inférieur")) (0 En) (1 N) ; # étant très supérieurs en nombre
SELECT Prep IF (-4 Ser + Inf OR Ser + Ger) (-3 Adv) (-2 Adv OR PreAdv) (-1 ("supérieur") OR ("inférieur")) (0 En) (1 N) ; # n'étant pas très supérieurs en nombre
SELECT Prep IF (-3 Ser + &&ConcordeSP) (-2 AdvComp) (-1 A + &&ConcordeSP) (0 En) (1 N) ; # sont plus grands en nombre
SELECT Prep IF (-4 Ser + &&ConcordeSP) (-3 Adv) (-2 AdvComp) (-1 A + &&ConcordeSP) (0 En) (1 N) ; # ne sont pas plus grands en nombre
SELECT Prep IF (-5 Ser + &&ConcordeSP) (-4 Adv) (-3 Adv) (-2 AdvComp) (-1 A + &&ConcordeSP) (0 En) (1 N) ; # ne sont pas beaucoup plus grands en nombre
SELECT Prep IF (-3 Ser + Inf OR Ser + Ger) (-2 AdvComp) (-1 A) (0 En) (1 N) ; # étant plus grands en nombre
SELECT Prep IF (-4 Ser + Inf OR Ser + Ger) (-3 Adv) (-2 AdvComp) (-1 A) (0 En) (1 N) ; # n'étant pas plus grands en nombre
SELECT Prep IF (-5 Ser + Inf OR Ser + Ger) (-4 Adv) (-3 Adv) (-2 AdvComp) (-1 A) (0 En) (1 N) ; # n'étant pas beaucoup plus grands en nombre

SELECT N IF (0 N OR A) (-1C Peu) (1 EOS) ;	# peu de joueurs.
SELECT A IF (0 N OR A) (-1C Peu) (1C N) ;

REMOVE Adj_PP IF (-1 Num) (0C N OR Adj_PP) (1 Prep) ;
SELECT N IF (-1 Num) (0 ("seconde")) ;

REMOVE Adj_PP IF (-1 ("quel") + &&ConcordeSN) (0 N + &&ConcordeSN) (NOT 1 N) ;	# Quelle portée pour...

SELECT Interj IF (0 Helas) ;
SELECT Interj IF (0 ("adieu")) (NOT -1 Det OR A);
REMOVE Interj IF (0 ("bon")) (NOT 1* ("<!>")) ;
SELECT A IF (0 ("bon")) (1C N) ;			# un bon jour
REMOVE Interj IF (-1 (META:/-/r)) ;
REMOVE Interj IF (0 (META:/-/r)) ;
SELECT Interj IF (-1 BOS) (0 N) (1 CM) (1* ("!")) ;    # Bordel, xxxx!
SELECT Interj IF (-1 BOS) (0 ("désolé") OR ("désolée")) (1 CM) ;
SELECT Interj IF (-1 BOS OR CM) (1 ("!")) ;

SELECT A IF (0 ("majeur")) (1 ("partie")) ;

REMOVE CnjAdv IF (0 Si) (1 ("en") OR ("y")) (2 Verb) ; 	# pour s'y rendre
REMOVE CnjAdv IF (0 ("<s'>"i) OR ("<s’>")) (1C Verb LINK NOT 0 ("il y a")) ;
SELECT CnjAdv IF (0 Si) (1 Prn) ;
SELECT CnjAdv IF (0 Si) (1 Det) ;
SELECT PreAdv IF (0 Si) (1 A) ;
REMOVE CnjAdv IF (0 Si) (-1 ("[——―]"r)) (1 Verb + P3) ;
SELECT CnjAdv IF (0 Si) (-1 BOS) ;
SELECT CnjAdv IF (0 Si) (1 ("jamais")) ;

SELECT N IF (0 Fort) (1 MajIni OR unknownMajIni) ;
REMOVE N IF (-1 N + MascSg) (0 Fort + MascSg) ;
REMOVE N IF (-1 N + MascPl) (0 Fort + MascPl) ;
REMOVE Adv IF (NOT -1 Verb) (0 Fort) ;

SELECT N IF (-1 ("devenir") + &&ConcordeSP) (0 N + &&ConcordeSP) (NOT 1 Noun_Adj) ;	# devient chanteur
SELECT N IF (-1 ("devenir") + &&ConcordeSP) (0 N + &&ConcordeSP) (1 ("pas")) (NOT 2 Noun_Adj) ;	# ne devient pas chanteur
SELECT A IF (-1 ("devenir")) (NOT 1 A) ;
SELECT A IF (-2 ("devenir")) (-1 Adv_PreAdv) (NOT 1 A) ;
  ## devenir plus fort
SELECT A IF (-3 ("devenir")) (-2 Adv) (-1 Adv_PreAdv) (NOT 1 A) ;
  ## ne devenir pas plus fort

REMOVE Det IF (0 Prn) (1C Prep) (NOT 0 DetDef) ;	# Aucune des 200 communes
REMOVE Det IF (0 Prn) (1C Verb + Pers) ;		# Aucune veut
REMOVE Det IF (0 Prn) (1C Adv) (2C Verb + Pers) ;	# Aucune ne veut
REMOVE Adv IF (-1C Det OR Prn) (0 N) (1C Prep) ;	# ce point de vue

SELECT Adv IF (-1 Des) (0 Verb OR Adv) ;	# dès maintenant
SELECT Adv IF (NOT -1 ("en")) (0 ("maintenant")) ;

SELECT Adv IF (0 Juste) (1 Prep OR CnjAdv OR PP) (NOT -1 Det) ;
  ## juste devant
  ## juste avant qu'il ne vienne
  ## tout juste créé
SELECT A IF (-1 Det + &&ConcordeSN) (0 Juste + &&ConcordeSN) (1 N + &&ConcordeSN) ;	# le juste milieu ; leur juste part

SELECT Prep IF (0 Entre OR Contre) (1 Nous OR Vous OR Eux);
  ## entre nous, vous, eux, elles
SELECT Prep IF (0 Entre OR Contre) (1 Il + Pl + Fem);
  ## entre elles
#SELECT Prep IF (-2C Prep) (-1C N) (0 Entre) (1 Det) (2 N OR A) ;
  ## ne fait pas de différence entre les tyrannies
#SELECT Prep IF (-3C Prep) (-2C N OR A) (-1C N OR A OR PP) (0 Entre) (1 Det) (2 N OR A) ;
  ## ne fait pas de grosses différences entre les tyrannies
REMOVE Prep IF (0 Entre) (1 En) ;	# entre en guerre
SELECT Prep IF (0 Entre) (1 Det) (2 N OR A) ;
REMOVE V (0 Entre) (*-1 Verb BARRIER Cnj_Rel) ;  # no funciona sempre
REMOVE V (0 Entre) (*1 Verb BARRIER Cnj_Rel) ;
REMOVE V (-1 Entre) (0 N + Pl) ;	# entre partis
  ## entre lequel, laquelle...
SELECT Prep IF (0 Entre OR Contre) (1 ("lequel"));

SELECT Prep (0 Pendant) (-1 BOS) ;
  ## Pendant la Première Guerre Mondiale
SELECT Prep (0 Pendant) (1 ("de")) (2 A OR N) ;
  ## pendant de nombreuses années
SELECT Prep (0 Pendant) (1 ("près de")) (2 A OR N OR Num) ;
  ## la guerre continue pendant près de cinq ans
REMOVE A (0 Pendant) (NOT -1 Noun_Adj + MascSg) ;  # Son mari l'avait frappée pendant deux heures
REMOVE A (0 Pendant) (1 Det + &&ConcordeSN) (2 Noun_Adj + &&ConcordeSN) ;
REMOVE V (0 Pendant) (*-1 Verb BARRIER Cnj_Rel) ;  # no funciona sempre
REMOVE V (0 Pendant) (*1 Verb BARRIER Cnj_Rel) ;

SELECT Prep (0 Contre) (-1 BOS) ;
REMOVE V (0 Contre) (*-1 Verb BARRIER Cnj_Rel) ;  # no funciona sempre
REMOVE V (0 Contre) (*1 Verb BARRIER Cnj_Rel) ;
REMOVE V (NOT -1 Noun_Adj + Sg) (0 Contre) ;
REMOVE V (-1* Num BARRIER Cnj_Rel) (0 Contre) (1 Num) ;
REMOVE V (-1 ("crime") OR ("ligue") OR ("association") OR ("organisation") OR ("collectif") OR ("lutte") OR ("combat") OR ("guerre")) (0 Contre) ;
REMOVE V (-2 ("crime") OR ("ligue") OR ("association") OR ("organisation") OR ("collectif") OR ("lutte") OR ("combat") OR ("guerre")) (-1 A) (0 Contre) ;
REMOVE V (0 Contre) (1 Det) (2 ("crime") OR ("mafia") OR ("spéculation") OR ("gouvernement") OR ("loi") OR ("constitution") OR ("femme") OR ("enfant") OR ("migrant") OR ("réfugié") OR ("population")) ;

REMOVE Prep (0 Adv) (1 ("je") OR ("tu") OR ("<il>"i) OR ("<ils>"i)) ;	# après je viendrai

REMOVE A (NOT -2 En OR Det) (-1C ("parler")) (NOT 2 N) ;	# celui qui parle russe vindra ; en parler local

## Ces règles ne sont pas en train de marcher
SELECT Verb (0 Puis) (-1 Je);
SELECT Verb (0 Puis) (1 Je) (NOT 1 Verb + P1) ;
SELECT Verb (0 Puis) (1 Je LINK NOT 1 Verb + P1) (1 Je LINK NOT 2 Verb + P1);
SELECT Verb (0 Puis) (-2 Je) (-1 Ne) ;
REMOVE Verb (0 Puis) (NOT -2 Je) (NOT -1 Je) (NOT 1 Je) ;
REMOVE Verb (0 Puis) (1 Je) (2 Verb + P1) ;
REMOVE Verb (0 Puis) (1 Je) (2 Adv) (3 Verb + P1) ;

REMOVE Adv IF (-1/* Det) (0 Point) ;	# au point
REMOVE Adv IF (-1 Prep) (0 Point) ;	# au point
REMOVE Adv IF (-1 ("tel")) (0 Point) ;	# à tel point
REMOVE Adv IF (-1 unknownMajIni) (0 ("<Point>")) ;	# Peace Point (ou d'autres noms de lieux américains)
REMOVE PP IF (0 Point) (1 A) ;	# point fixe
REMOVE PP IF (-1/* Det) (0 Point) ;
SELECT N IF (-1 Num) (0 Point + Pl) ;
SELECT N IF (-1 ("0") OR ("0[,\.][0-9]*"r) OR ("zéro")) (0 Point + Sg) ;

REMOVE A (0 Continuer OR Continu) (*-1 Verb BARRIER Cnj_Rel) ;  # no funciona sempre
REMOVE A (0 Continuer OR Continu) (*1 Verb BARRIER Cnj_Rel) ;
  ## la guerre continue pendant près de cinq ans

SELECT N IF (-1 BOS) (0 ("Côté")) (1 A + MascSg) ;	# Côté chinois

SELECT N IF (0 ("empire") + MajIni) ;
SELECT N IF (-1 ("haut") + MascSg OR ("bas") + MascSg) (0 ("empire") + MascSg) ;
SELECT N IF (-1 ("haut") + MascPl OR ("bas") + MascPl) (0 ("empire") + MascSg) ;

REMOVE N IF (NOT -1 Det + Def) (0 ("gros")) ;
SELECT N IF (-1 Det + Def) (0 ("gros")) (1 ("de")) ;
REMOVE N IF (0 ("gros")) ;

SELECT N (-1 ("en")) (0 ("or")) ;

SELECT PreAdv IF (0 Si) (1 Adv OR PreAdv);
  ## si bien / si mal
SELECT PreAdv IF (0 Si) (1C A) (2 Que) ;
  ## si intelligente que
SELECT PreAdv IF (0 Si) (1C A) (2C Prep OR Pour) ;
  ## si différents dans le monde
SELECT CnjAdv IF (-1 BOS) (0 Si) (1 Det OR Tn) ;
  ## Si la demande nationale est suffisante

SELECT N IF (-1 Prep) (0 ("or")) ;
SELECT N IF (-1 Det) (0 ("or")) ;

SELECT Adv IF (-1 Si) (0 Adv OR PreAdv) ;
  ## si bien / si mal
REMOVE PreAdv IF (-1 Haver) (0 Adv OR PreAdv) (1 PP) ;
  ## vous avez bien lu
  ## mais: il est bien connu
REMOVE PreAdv IF (-2 Haver) (-1 Adv) (0 Adv) (1 PP) ;		# ils n'ont pas tellement trompé
REMOVE CnjAdv IF (-1 Haver) (0 Adv) (1 PP) ;
REMOVE CnjAdv IF (-2 Haver) (-1 Adv) (0 Adv) (1 PP) ;
REMOVE CnjAdv IF (-1 Ser + Sg) (0 Adv) (1 PP + Sg) ;		# avait alors refusé
REMOVE CnjAdv IF (-1 Ser + Pl) (0 Adv) (1 PP + Pl) ;
REMOVE CnjAdv IF (-2 Ser + Sg) (-1 Adv) (0 Adv) (1 PP + Sg) ;	# n'avait pas alors refusé
REMOVE CnjAdv IF (-2 Ser + Pl) (-1 Adv) (0 Adv) (1 PP + Pl) ;
REMOVE PreAdv IF (-2 ("se")) (-1 Ser + P3) (0 Adv OR PreAdv) (1 PP) ;				# se sont tellement trompés
REMOVE PreAdv IF (-2 ("me")) (-1 Ser + P1 + Sg) (0 Adv OR PreAdv) (1 PP) ;
REMOVE PreAdv IF (-2 ("te")) (-1 Ser + P1 + Sg) (0 Adv OR PreAdv) (1 PP) ;
REMOVE PreAdv IF (-2C ("nous") + Pro) (-1 Ser + P1 + Pl) (0 Adv OR PreAdv) (1 PP) ;
REMOVE PreAdv IF (-2C ("vous") + Pro) (-1 Ser + P2 + Pl) (0 Adv OR PreAdv) (1 PP) ;
REMOVE PreAdv IF (-3 ("se")) (-2 Ser + P3) (-1 Adv) (0 Adv OR PreAdv) (1 PP) ;			# ne se sont pas tellement trompés
REMOVE PreAdv IF (-3 ("me")) (-2 Ser + P1 + Sg) (-1 Adv) (0 Adv OR PreAdv) (1 PP) ;
REMOVE PreAdv IF (-3 ("te")) (-2 Ser + P1 + Sg) (-1 Adv) (0 Adv OR PreAdv) (1 PP) ;
REMOVE PreAdv IF (-3C ("nous") + Pro) (-2 Ser + P1 + Pl) (-1 Adv) (0 Adv OR PreAdv) (1 PP) ;
REMOVE PreAdv IF (-3C ("vous") + Pro) (-2 Ser + P2 + Pl) (-1 Adv) (0 Adv OR PreAdv) (1 PP) ;
REMOVE PreAdv IF (0 Adv OR PreAdv) (1 EOS OR CM) ;	# on fait bien
REMOVE PreAdv IF (0 Adv OR PreAdv) (1C Prep OR Pour) ;	# c'est bien de
REMOVE PreAdv IF (0 Adv OR PreAdv) (1C V LINK NOT 0 PP) ;	# c'est bien regarder des choses
SELECT PreAdv IF (-1 Ser + &&ConcordeSP) (0 ("bien")) (1 ("plus") OR ("moins")) (2 A + &&ConcordeSP) ;	# est bien plus grave
REMOVE PreAdv IF (-1 Ser) (0 Adv OR PreAdv) (1C Adv) ;	# il est bien aujourd'hui
REMOVE PreAdv IF (-2 Ser) (-1 ("pas")) (0 Adv OR PreAdv) (1C Adv) ;	# il n'est pas bien aujourd'jui
REMOVE PreAdv IF (-1 V) (0 Adv OR PreAdv) (1 Det) (2 N) ;	# ils ne savaient pas bien leur rôle
REMOVE PreAdv IF (-2 V) (-1 ("pas")) (0 Adv OR PreAdv) (1 Det) (2 N) ;	# ils savaient bien leur rôle
REMOVE PreAdv IF (NOT 1 A OR PP OR Adv OR PreAdv) ;	# le bien et le mal ; fort peu peuplé
REMOVE PreAdv IF (1 ("ne") OR ("pas")) ;

SELECT PreAdv IF (0C Adv_PreAdv) (1 A OR PP OR Adv);
REMOVE N IF (-1 PreAdv) (0 A OR PP OR N);
REMOVE Adv IF (-1 PreAdv) (0 A OR PP OR Adv);
REMOVE PreAdv IF (-1 PreAdv) (0 A OR PP OR PreAdv) (NOT 1 A OR PP) ;


SELECT PostAdv IF (-1 (META:/-/r)) ;
REMOVE PostAdv IF (NOT -1 (META:/-/r)) ;

SELECT Prn IF (0 S) (NOT 1 Il) ;
SELECT CnjAdv IF (0 S) (1 Il) ;
  ## s'affirme
REMOVE CnjAdv IF (-1C Prep OR Pour) (0 N) (1C Prep OR Pour) ;
  ## une medaille d'or de piano

REMOVE Adv IF (0 ("mal")) (1 À) (2 Det + Def + &&ConcordeSN) (3 N + &&ConcordeSN) ;

SELECT Adv IF (-1 BOS) (0 Adv OR A) (1C Prep OR Pour) ;
  ## Même sur le terrain
SELECT Adv IF (-1 BOS OR CM) (0C A OR Adv) (1C Det) ;
  ## Même le temps était
SELECT Adv IF (-1 BOS OR CM) (0C A OR Adv) (1 ("en")) ;
  ## Même en se partageant
SELECT Adv IF (-1C Verb) (0 Même) (1 Prep) ;

SELECT A IF (0 A) (0 (META:/-/r)) (1 Top OR unknownMajIni) ;
 ## Haut-Paraguay

  ## il va même jusqu'à donner

SELECT Acr OR Al IF (0 Majusc) ;
SELECT A IF (-1 ("place")) (0 ("rouge")) ;	# la place Rouge
SELECT N IF (0 MajIni) (0C N OR A) (NOT -1 BOS OR MajIni OR Prep OR CnjCoo) (NOT 1 MajIni) ;
  ## ces ingrats d'Européens.
  ## l'Académie Rouge et Noire

SELECT Masc_strict IF (0 Mon_Ton_Son) (1 ConsInitiale) ;	# mon père
SELECT Fem_strict IF (0 Mon_Ton_Son) (NOT 1 ConsInitiale) (1C Fem_strict) ;	# mon amie
SELECT Masc_strict IF (0 Mon_Ton_Son) (NOT 1 ConsInitiale) (1C Masc_strict) ;	# mon ami
SELECT Fem_strict IF (0 Mon_Ton_Son) (NOT 1 ConsInitiale) (1 Noun_Adj_PP + Fem) (2C Fem_strict) ;
SELECT Masc_strict IF (0 Mon_Ton_Son) (NOT 1 ConsInitiale) (1 Noun_Adj_PP + Masc) (2C Masc_strict) ;
SELECT Fem_strict IF (0 Mon_Ton_Son) (NOT 1 ConsInitiale) (1 Noun_Adj_PP + Fem) (2 Noun_Adj_PP + Fem) (3C Fem_strict) ;
SELECT Masc_strict IF (0 Mon_Ton_Son) (NOT 1 ConsInitiale) (1 Noun_Adj_PP + Masc) (2 Noun_Adj_PP + Masc) (3C Masc_strict) ;

SELECT Masc IF (-1/* Masc_strict + Det) (0C N OR A + Masc LINK 0 Fem) ;
SELECT Masc IF (-1 Masc_strict + A) (0C N OR A + Masc LINK 0 Fem) ;
SELECT Masc IF (1 Masc_strict + A) (0C N OR A + Masc LINK 0 Fem) ;
SELECT Fem IF (-1/* Fem_strict + Det) (0C N OR A + Fem LINK 0 Masc) ;
SELECT Fem IF (-1 Fem_strict + A) (0C N OR A + Fem LINK 0 Masc) ;
SELECT Fem IF (1 Fem_strict + A) (0C N OR A + Fem LINK 0 Masc) ;
  ## le primer tour
SELECT Masc IF (-2/* Masc_strict + Det) (-1 N OR A + Masc) (0C N OR A + Masc LINK 0 Fem) (NOT -1 ("<nombre de>"i) OR ("<nombre d'>"i) OR ("<nombre d’>"i)) ;
SELECT Fem IF (-2/* Fem_strict + Det) (-1 N OR A + Masc) (0C N OR A + Fem LINK 0 Masc) (NOT -1 ("<nombre de>"i) OR ("<nombre d'>"i) OR ("<nombre d’>"i)) ;
  ## le deuxième tour

REMOVE Adv IF (-1C/* Det) (0C N OR Adv) (NOT 0 ("plus") OR ("moins") OR ("meilleur") OR ("pire"));
REMOVE Adv IF (-1C Det + &&ConcordeSN) (0C N + &&ConcordeSN OR Adv) (NOT 0 ("plus") OR ("moins") OR ("meilleur") OR ("pire"));
  ## par l'ensemble des

SELECT N IF (-1C V) (0C N OR PP) (1 Prep) ; ## porter plainte contre

SELECT N IF (-1 Det + &&ConcordeSN) (0 N + &&ConcordeSN LINK 0 A OR PP OR Verb) (1C Prep OR Rel OR Prn OR CnjSub) ;
SELECT N IF (-1 Det + &&ConcordeSN) (0 N + &&ConcordeSN LINK 0 A OR PP OR Verb) (1 Adv) (2 Verb) ;

SELECT N IF (-1C Prep) (0C Noun_Adj_PP) (1C Prep OR Rel OR Prn OR CnjSub OR Adv OR EOS) ;
  ## ces vacances d'été pour/qui/que
  ## l'expert en balistique n'a pas
  ## à l’abri des polémiques.

SELECT N IF (-1 ("de")) (0 N) (NOT 0 MajIni) (1 MajIni) ;	# réseau de bus Arlequin

SELECT N IF (-1 AdjInd + &&ConcordeSN) (0 N + &&ConcordeSN) (1C Barrera_Final_Estrict_SN OR Ant_Cog OR CM) ;

SELECT A IF (NOT -2 ("le")) (-1 ("un") + MascSg) (0 ("ferme") + MascSg) (1C Barrera_Final_Estrict_SN OR Ant_Cog OR CM) ;	# dont un [an] ferme
SELECT A IF (NOT -2 ("le")) (-1 Num) (0 ("ferme") + MascPl) (1C Barrera_Final_Estrict_SN OR Ant_Cog OR CM) (-1* ("prison") OR ("condamner")) ;	# dont deux [ans] fermes

REMOVE A OR PP IF (-1 Prep) (-1/* Det + &&ConcordeSN) (0 Noun_Adj_PP + &&ConcordeSN LINK 0 N OR NP) (1C Barrera_Final_Estrict_SN OR Ant_Cog OR CM) ;
REMOVE A OR PP IF (NOT -2 ("comme")) (-1 Det + &&ConcordeSN OR Num) (0 Noun_Adj_PP + &&ConcordeSN LINK 0 N OR NP) (1C Barrera_Final_Estrict_SN OR Ant_Cog OR CM) ;
REMOVE A OR PP IF (NOT -2 ("comme")) (-1 ("de") OR ("à")) (0 Noun_Adj_PP LINK 0 N OR NP) (1C Barrera_Final_Estrict_SN OR Ant_Cog OR CM) ;
REMOVE A OR PP IF (NOT -3 ("comme")) (-2 Det + &&ConcordeSN) (-1 Num OR A LINK NOT 0 N) (0 Noun_Adj_PP + &&ConcordeSN LINK 0 N OR NP) (1C Barrera_Final_Estrict_SN OR Ant_Cog OR CM) ;
REMOVE A OR PP IF (NOT -3 ("comme")) (-2 ("de") OR ("à")) (-1 Num OR A LINK NOT 0 N) (0 Noun_Adj_PP LINK 0 N OR NP) (1C Barrera_Final_Estrict_SN OR Ant_Cog OR CM) ;
REMOVE A OR PP IF (NOT -2 ("comme")) (-1 Det + &&ConcordeSN) (0 Noun_Adj_PP + &&ConcordeSN LINK 0 N OR NP) (1C Verb) ;
REMOVE A OR PP IF (NOT -2 ("comme")) (-1 ("de") OR ("à")) (0 Noun_Adj_PP LINK 0 N OR NP) (1C Verb) ;
REMOVE A OR PP IF (NOT -3 ("comme")) (-2 Det + &&ConcordeSN) (-1 Num OR A LINK NOT 0 N) (0 Noun_Adj_PP + &&ConcordeSN LINK 0 N OR NP) (1C Verb) ;
REMOVE A OR PP IF (NOT -3 ("comme")) (-2 ("de") OR ("à")) (-1 Num OR A LINK NOT 0 N) (0 Noun_Adj_PP LINK 0 N OR NP) (1C Verb) ;
REMOVE A OR PP IF (NOT -2 ("comme")) (-1 Det + &&ConcordeSN) (0 Noun_Adj_PP + &&ConcordeSN LINK 0 N OR NP) (1 Ser) ;
REMOVE A OR PP IF (NOT -2 ("comme")) (-1 ("de") OR ("à")) (0 Noun_Adj_PP LINK 0 N OR NP) (1 Ser) ;
REMOVE A OR PP IF (NOT -3 ("comme")) (-2 Det + &&ConcordeSN) (-1 Num OR A LINK NOT 0 N) (0 Noun_Adj_PP + &&ConcordeSN LINK 0 N OR NP) (1 Ser) ;
REMOVE A OR PP IF (NOT -3 ("comme")) (-2 ("de") OR ("à")) (-1 Num OR A LINK NOT 0 N) (0 Noun_Adj_PP LINK 0 N OR NP) (1 Ser) ;
REMOVE A OR PP IF (NOT -2 ("comme")) (-1 Det + &&ConcordeSN) (0 Noun_Adj_PP + &&ConcordeSN LINK 0 N OR NP) (1 CM OR CnjCoo) (2C Barrera_Final_Estrict_SN) ;
REMOVE A OR PP IF (NOT -2 ("comme")) (-1 ("de") OR ("à")) (0 Noun_Adj_PP LINK 0 N OR NP) (1 CM OR CnjCoo) (2C Barrera_Final_Estrict_SN) ;
REMOVE A OR PP IF (NOT -3 ("comme")) (-2 Det + &&ConcordeSN) (-1 Num OR A LINK NOT 0 N) (0 Noun_Adj_PP + &&ConcordeSN LINK 0 N OR NP) (1 CM OR CnjCoo) (2C Barrera_Final_Estrict_SN) ;
REMOVE A OR PP IF (NOT -3 ("comme")) (-2 ("de") OR ("à")) (-1 Num OR A LINK NOT 0 N) (0 Noun_Adj_PP LINK 0 N OR NP) (1 CM OR CnjCoo) (2C Barrera_Final_Estrict_SN) ;
REMOVE A OR PP IF (NOT -2 ("comme")) (-1 Num) (0 Noun_Adj_PP LINK 0 N OR NP) (1 CM OR CnjCoo) (2C Barrera_Final_Estrict_SN) ;

REMOVE A OR PP IF (-2 ("comme")) (-1 Det + &&ConcordeSN) (0 Noun_Adj_PP + &&ConcordeSN LINK 0 N OR NP) (1C Barrera_Final_Estrict_SN OR Ant_Cog) (NOT -1 DetDef) ;
REMOVE A OR PP IF (-2 ("comme")) (-1 ("de") OR ("à")) (0 Noun_Adj_PP LINK 0 N OR NP) (1C Barrera_Final_Estrict_SN OR Ant_Cog) (NOT -1 DetDef) ;
REMOVE A OR PP IF (-2 ("comme")) (-1 Det + &&ConcordeSN) (0 Noun_Adj_PP + &&ConcordeSN LINK 0 N OR NP) (1C Verb) (NOT -1 DetDef) ;
REMOVE A OR PP IF (-2 ("comme")) (-1 ("de") OR ("à")) (0 Noun_Adj_PP LINK 0 N OR NP) (1C Verb) (NOT -1 DetDef) ;
REMOVE A OR PP IF (-2 ("comme")) (-1 Det + &&ConcordeSN) (0 Noun_Adj_PP + &&ConcordeSN LINK 0 N OR NP) (1 Ser) (NOT -1 DetDef) ;
REMOVE A OR PP IF (-2 ("comme")) (-1 ("de") OR ("à")) (0 Noun_Adj_PP LINK 0 N OR NP) (1 Ser) (NOT -1 DetDef) ;
REMOVE A OR PP IF (-2 ("comme")) (-1 Det + &&ConcordeSN) (0 Noun_Adj_PP + &&ConcordeSN LINK 0 N OR NP) (1 CM OR CnjCoo) (2C Barrera_Final_Estrict_SN) (NOT -1 DetDef) ;
REMOVE A OR PP IF (-2 ("comme")) (-1 ("de") OR ("à")) (0 Noun_Adj_PP LINK 0 N OR NP) (1 CM OR CnjCoo) (2C Barrera_Final_Estrict_SN) (NOT -1 DetDef) ;

REMOVE A OR PP IF (NOT -2 ("comme")) (-1 Det + &&ConcordeSN) (0 Noun_Adj_PP + &&ConcordeSN LINK 0 N OR NP) (1 Adv OR Pref) (2 Adj_PP + &&ConcordeSN) ;
REMOVE A OR PP IF (NOT -2 ("comme")) (-1 ("de") OR ("à")) (0 Noun_Adj_PP LINK 0 N OR NP) (1 Adv OR Pref) (2 Adj_PP + FemPl) ;

REMOVE A OR PP IF (NOT -2 ("comme")) (-1/* Det + &&ConcordeSN) (0 Noun_Adj_PP + &&ConcordeSN LINK 0 N OR NP) (1 V) (NOT 1 Noun_Adj_PP + &&ConcordeSN) ;	
REMOVE A OR PP IF (NOT -2 ("comme")) (-1 ("<du>") OR ("<au>")) (0 Noun_Adj_PP + Sg LINK 0 N OR NP) (1 V) (NOT 1 Noun_Adj_PP + Sg) ;
REMOVE A OR PP IF (NOT -2 ("comme")) (-1 ("<des>") OR ("<aux>")) (0 Noun_Adj_PP + Pl LINK 0 N OR NP) (1 V) (NOT 1 Noun_Adj_PP + Pl) ;

REMOVE Ger IF (-1 Det + &&ConcordeSN OR Num) (0 Noun_Adj_PP + &&ConcordeSN) (1C EOS OR CM OR CnjAdv OR Rel) ;
REMOVE Ger IF (-1 ("de") OR ("à")) (0 Noun_Adj_PP) (1C EOS OR CM OR CnjAdv OR Rel) ;
REMOVE Ger IF (-1 Det + &&ConcordeSN OR Num) (0 Noun_Adj_PP + &&ConcordeSN) (1 Noun_Adj_PP + &&ConcordeSN) (2C EOS OR CM OR CnjAdv OR Rel) ;
REMOVE Ger IF (-1 ("de") OR ("à")) (0 Noun_Adj_PP + &&ConcordeSN) (1 Noun_Adj_PP + &&ConcordeSN) (2C EOS OR CM OR CnjAdv OR Rel) ;
REMOVE Ger IF (-2 Det + &&ConcordeSN OR Num) (-1 Noun_Adj_PP + &&ConcordeSN) (0 Noun_Adj_PP + &&ConcordeSN) (1C EOS OR CM OR CnjAdv OR Rel) ;
REMOVE Ger IF (-2 ("de") OR ("à")) (-1 Noun_Adj_PP + &&ConcordeSN) (0 Noun_Adj_PP + &&ConcordeSN) (1C EOS OR CM OR CnjAdv OR Rel) ;

SELECT V IF (-1C N) (NOT 0 A OR PP) (1 Que) ;
	# l’ensemble des indicateurs montre que

SELECT N IF (-2C N) (-1 CnjCoo) (0C Noun_Adj_PP) (NOT 1 N) (NOT 0 ("demi") OR ("quart")) ;	# une comédienne, réalisatrice, traductrice et romancière.
SELECT N IF (NOT -1 N) (0C Noun_Adj_PP) (1 CnjCoo) (2C N) ;	# comédies, revues et opérettes ; langues anciennes et sciences naturelles
SELECT N IF (-2 N) (-1 CM) (0C Noun_Adj_PP) (1 CnjCoo OR CM) (2C N) ;	# prêtre, curé, prédicateur
SELECT N IF (-2C N) (-1 CM) (0C Noun_Adj_PP) (1 CM) (2 N) ;	# prêtre, curé, prédicateur
SELECT N IF (NOT -1 N) (0 N) (1 CM) (2C N) (3 CnjCoo OR CM) (4C N) ;	# droite, gauche ou milieu
REMOVE A (NOT -2 A) (-1C CnjCoo) (0 A) (0 Verb + Pers) (1 Det OR Num) (2 N) ;	# propriété de NTL et diffuse quatre chaînes
REMOVE A (NOT -2 A) (-1C CnjCoo) (0 A) (0 Verb + Pers) (1 Det OR Num) (2C A) ;	# elle intègre Radio France et présente la matinale de France Bleu
SELECT N IF (-2 ("droite") + N + FemSg OR ("gauche") + N + FemSg) (-1 CnjCoo OR CM) (0 ("centre") + MascSg) ;
SELECT N IF (2 ("droite") + N + FemSg OR ("gauche") + N + FemSg) (1 CnjCoo OR CM) (0 ("centre") + MascSg) ;

#REMOVE A (NOT -2 A) (-1C CnjCoo) (0 A) (0 Verb + Pers) (NOT 1 N OR PP) (NOT 0 ("demi") OR ("quart")) ;

SELECT N IF (-1C Prep) (0C Noun_Adj_PP) (1C CnjCoo OR CM) ;	# de physique et chimie
SELECT N IF (-1C Prep) (0C Noun_Adj_PP) (1C Noun_Adj_PP) (NOT 1C N) (NOT 0 AdjOrd OR AdjPre) ;	# de chimie appliquées

REMOVE V IF (NOT -1 Pro) (0C N + &&ConcordeSN OR V) (1C Adj_PP + &&ConcordeSN) ;	# et agressions sexuelles sur mineur

REMOVE V IF (-1 ("de")) (-1/* DetDef) (0C N + Pl OR V) ;

SELECT N OR NP IF (-1/* Barrera_Inicial_Estrict_SN) (0 Noun_Adj_PP + Sg) (1C V + Sg) ;
SELECT N OR NP IF (-1/* Barrera_Inicial_Estrict_SN) (0 Noun_Adj_PP + Pl) (1C V + Pl) ;
# des responsables parleront

SELECT Ger IF (-1 ("en")) (0C Ger OR Noun_Adj_PP) (1 Det) ;			# en voyant son cartable
SELECT Ger IF (-1C Pro) (0C Ger OR Noun_Adj_PP) ;				# se rendant enfin à Naples
REMOVE A IF (-1 BOS) (0 Ger) (1 Det) ;						# Fuyant les premières familles,
REMOVE Ger IF (-1 Det + &&ConcordeSN) (0 N + &&ConcordeSN) (NOT -1 Pro) ;	# ce montant
REMOVE Ger IF (-2 Det + &&ConcordeSN) (-1 A + &&ConcordeSN) (0 N + &&ConcordeSN) (NOT 1 Det) ;	# son propre représentant
REMOVE Ger IF (-3 Det + &&ConcordeSN) (-2 Adv_PreAdv) (-1 A + &&ConcordeSN) (0 N + &&ConcordeSN) (NOT 1 Det) ;

SELECT A IF (-2/* Det + &&ConcordeSN) (-1 N + &&ConcordeSN) (0 ("suivant") + &&ConcordeSN) ;
SELECT A IF (-3/* Det + &&ConcordeSN) (-2 Num) (-1 Mois + &&ConcordeSN) (0 ("suivant")) ;
SELECT A IF (-1 Noun_Adj) (0 ("suivant")) (1 (":")) ;

SELECT Ger IF (0 ("signifier") + Ger) (0 (META:/«/r) OR (META:/"/r));
SELECT Ger IF (0 ("signifier") + Ger) (1 ("<«>"));
SELECT Ger IF (0 ("signifier") + Ger) (-1 ("cela") OR ("ceci"));
REMOVE Ger IF (-1 BOS) (0 Prep OR Ger) ;
  ## Suivant le besoin
REMOVE Ger IF (-1 Verb + Pers) (0 Prep OR Ger) ;
  ## on l'utilise suivant des critères
  ## on l'utilise maintenant

REMOVE Ger IF (-1 ("nommer") OR ("appeler")) (0 Ger OR N OR A) ;
  ## nommé dirigeant

REMOVE Ger IF (-1 AdvComp) (0 Ger OR A OR PP) ;	# plus exigeant

#REMOVE Ger IF (0 Ger) (0 N + &&ConcordeSN) (1 CnjCoo) (2 N + &&ConcordeSN) ; 	# figurant et chanteur
#REMOVE Ger IF (0 Ger) (0 N + &&ConcordeSN) (-1 CnjCoo) (-2 N + &&ConcordeSN) ;

REMOVE A + Sg IF (NOT -3 Prep) (NOT -2 Prep) (-1 Noun_Adj + Pl_strict) (NOT 0 A + Pl) (0 Ger) ;	# les structures servant au confinement
REMOVE N IF (NOT -3 Prep) (NOT -2 Prep) (-1C N + Pl_strict) (0 Ger) ;				# les structures servant au confinement

REMOVE A IF (-1 BOS) (0 Prep) (0 A) (1 Det) ;
REMOVE N IF (-1 BOS) (0 Prep) (0 N) (1 Det) ;
  ## Suivant le besoin
REMOVE A IF (-1 BOS) (0 ("suivant")) (0 A) (1 ("de")) ;
REMOVE N IF (-1 BOS) (0 ("suivant")) (0 N) (1 ("de")) ;
  ## Suivant des besoins
REMOVE A IF (-1 Verb + Pers) (0 ("suivant")) (0 A) (1 ("de")) ;
REMOVE N IF (-1 Verb + Pers) (0 ("suivant")) (0 N) (1 ("de")) ;
  ## Suivant des besoins

REMOVE Adv IF (0 ("à l'époque")) (1 A + FemSg) ;
REMOVE Adv IF (0 ("à l'époque")) (1/* ("de")) ;
REMOVE Adv IF (0 ("à l'époque")) (1 ("où")) ;
SELECT Adv IF (0 ("à l'époque")) (1 EOS OR CM OR Prn OR Verb OR Prep) ;

# PRN

REMOVE Masc IF (0 Le) (1 Haver) (2 PP + Fem) ;			# je l'ai vue
REMOVE Masc IF (0 Le) (1 Haver) (2 Adv) (3 PP + Fem) ;		# je ne l'ai pas vue
REMOVE Masc IF (0 Le) (1 Haver) (2 Adv) (3 Adv) (4 PP + Fem) ;	# je ne l'ai pas toujours vue
REMOVE Fem IF (0 Le + Pron) (1C Verb) (NOT 1 PP) ;
REMOVE Det IF (0 Le + Pron) (1C Verb) (NOT 1 PP) ;
REMOVE Det IF (0 Le + Pron) (1C Verb) (2 Prep) ;			# cela le contraint à replier
REMOVE Det IF (0 Le + Pron) (1C Verb) (2 Adv) (3 Prep) ;		# cela le contraint toujours à replier
REMOVE Det IF (0 Le + Pron) (1C Verb) (2 Adv) (3 Adv) (4 Prep) ;	# cela ne le contraint pas toujours à replier

REMOVE Prn IF (-1 Det + FemSg) (0 ("personne")) ;	# aucune personne

LIST V_Le_Nt = "dire" "expliquer" "raconter" "annoncer" "penser" "pouvoir" "vouloir" "désirer" "être" "sembler" "paraître" ;
SELECT Nt IF (0C Le + Pron) (1 V_Le_Nt + V) ;
SELECT SUB:1 Nt IF (0 V_Le_Nt + V) (0/* Le + Pron) ;
SELECT Nt IF (0C Le + Pron) (1 Haver) (2 V_Le_Nt + PP) ;
SELECT Nt IF (0C Le + Pron) (1 Haver) (2 Adv) (3 V_Le_Nt + PP) ;
SELECT Nt IF (0C Le + Pron) (1 Haver) (2 Adv) (3 Adv) (4 V_Le_Nt + PP) ;

# DET

REMOVE Pro IF (0 Le) (NOT 1 Vconj_pro OR ("lui") OR ("leur")) ;
  ## Le chien aime jouer avec les deux enfants.
  ## je le lui donne, je le leur donne

REMOVE Det IF (-1 ("<au>"i) OR ("<aux>"i) OR ("<du>"i) OR ("<de	"i)) ;
REMOVE Det IF (-1 Det + MascSg) (0 ("nombre de")) ;					# le nombre de maisons
REMOVE Det IF (-2 Det + MascSg) (-1 A + MascSg) (0 ("nombre de")) ;			# un bon nombre de maisons
REMOVE Det IF (-3 Det + MascSg) (-2 Adv_PreAdv) (-1 A + MascSg) (0 ("nombre de")) ;	# un très grand nombre de maisons
REMOVE Det IF (0 ("nombre de")) (1 N_Adj + Sg_strict) ;					# nombre de masse
REMOVE Det IF (-1 BOS) (0 ("nombre de")) (1 N) (2 EOS) ;				# Nombre de conseillers :
REMOVE Det IF (-1 BOS) (0 ("nombre de")) (1 A) (2 N) (2 EOS) ;
REMOVE Det IF (-1 BOS) (0 ("nombre de")) (1 Adv_PreAdv) (2 A) (3 N) (2 EOS) ;

SELECT Det IF (NOT -1/* Det + &&ConcordeSN) (0 DetInd + &&ConcordeSN) (1 N + &&ConcordeSN) ;	# un enfant

REMOVE Det IF (-1 Det + MascSg OR ("<du>"i) OR ("<au>"i)) (0 A + MascSg) (1 N + MascSg) ;
REMOVE Det IF (-1 Det + FemSg) (0 A + FemSg) (1 N + FemSg) ;
REMOVE Det IF (-1 Det + MascPl OR ("<des>"i) OR ("<aux>"i)) (0 A + MascPl) (1 N + MascPl) ;
REMOVE Det IF (-1 Det + FemPl OR ("<des>"i) OR ("<aux>"i)) (0 A + FemPl) (1 N + FemPl) ;
  ## des diverses régions

SELECT Det IF (0 DetInd + &&ConcordeSN) (1 A + &&ConcordeSN) ;	# un jaune
SELECT Det IF (0 DetInd + &&ConcordeSN) (1 A + &&ConcordeSN) (2 N + &&ConcordeSN) ;	# Crewdson signe un long article
SELECT Det IF (0 DetInd + &&ConcordeSN) (1 Adv_PreAdv) (2 A + &&ConcordeSN) (3 N + &&ConcordeSN) ;	# Crewdson signe un trèslong article

SELECT Num IF (-1 ("numéro")) (0 Un);
REMOVE Num IF (NOT -1 ("numéro")) (0 Un);
REMOVE Det IF (0 Un) (1C Prn) ;		# une nous saute aux yeux

SELECT Num IF (0 ("neuf")) (1C N_Adj + Pl) ;	# neuf mois
SELECT Num IF (-1 ("<de>"i)) (0 ("neuf")) (1 N_Adj + Pl) ;
SELECT Num IF (-1 ("<des>"i)) (0 ("neuf")) (1 N_Adj + Pl) ;
SELECT Num IF (NOT -1 N_Adj OR PreAdv OR Adv) (0 ("neuf")) ;
SELECT Num IF (NOT -2 N_Adj) (-1 PreAdv OR Adv) (0 ("neuf")) ;

REMOVE Det IF (-1 Noun_Adj + &&ConcordeSN) (0 DetInd + &&ConcordeSN) (NOT 1 Noun_Adj + &&ConcordeSN) ;	# fortunes diverses

REMOVE Fin IF (-1C Det) ;

# ADJ OR PRN
REMOVE A IF (NOT -1 N) (0 Tn) (1C EOS OR Prep OR Verb LINK NOT 0 PP) ;
REMOVE SUB:1 A IF (NOT 0 N) (0 Tn) (1C EOS OR Prep OR Verb LINK NOT 0 PP) ;	# la collaboratrice de ce dernier

# ADJ OR ADV
REMOVE Adv IF (-1C Det + &&ConcordeSN) (0 A + &&ConcordeSN) (NOT 1 A) ;	# est le même
#REMOVE Adv IF (-1 Det + &&ConcordeSN) (0 A + &&ConcordeSN) (1 N + &&ConcordeSN) (NOT 1 A) ;	# un vrai travail

REMOVE Adv IF (-1C N + &&ConcordeSN) (0 A + &&ConcordeSN) (1C Barrera_Final_Estrict_SN OR CnjCoo OR CM) ;	# un lien fort et direct

REMOVE Adv IF (-1 Ser + &&ConcordeSP) (0 A + &&ConcordeSP) (1C Barrera_Final_Estrict_SN) ;		# il est prêt à tout
REMOVE Adv IF (-2 Ser + &&ConcordeSP) (-1 Adv_PreAdv) (0 A + &&ConcordeSP) (1C Barrera_Final_Estrict_SN) ;

REMOVE A IF (-1C Prep OR BOS OR ("Sans")) (0 Adv) (1C V OR Pro) ;	# Sans même m'avertir

REMOVE Adv OR N IF (-4 Det + &&ConcordeSN) (-3 N + &&ConcordeSN) (-2 Det + &&ConcordeSN) (-1 ("plus") OR ("moins")) (0 A + &&ConcordeSN) ;	# l'orteil le plus long


# ADJ OR PP, Ger
REMOVE A IF (0 PP) (1 ("par"));
REMOVE A IF (-1 Ser) (0 PP) (1 Prep) (NOT 0 ("sacré")) ;
REMOVE A IF (-2 Ser) (-1 Adv) (0 PP) (1 Prep) (NOT 0 ("sacré")) ;
REMOVE A IF (-3 Ser) (-2 Adv) (-1 Adv) (0 PP) (1 Prep) (NOT 0 ("sacré")) ;
REMOVE A IF (0 ("élever")) (1 ("en")) (2 Num) ;		# une statue élevée en 1900

REMOVE A IF (0 PP) (1 Adv) (NOT 2 A OR Verb) ;		# fut encore poussée plus loin

SELECT PP IF (-1 Ser + &&ConcordeSP) (0 ("sacré") + &&ConcordeSP) ;	# est sacré champion
SELECT PP IF (-2 Ser + &&ConcordeSP) (-1 Adv) (0 ("sacré") + &&ConcordeSP) ;
SELECT PP IF (-3 Ser + &&ConcordeSP) (-2 Adv) (-1 Adv) (0 ("sacré") + &&ConcordeSP) ;
SELECT PP IF (-1 Ser + &&ConcordeSP) (0 ("sacré") + &&ConcordeSP) ;	# est sacré champion
SELECT PP IF (-1 Ser + &&ConcordeSP) (0 ("sacré") + &&ConcordeSP) ;	# est sacré champion
REMOVE PP OR Ger IF (NOT -1 CM OR N + &&ConcordeSN) (0 A + &&ConcordeSN) (1C N + &&ConcordeSN) ;	# imposant lanceur
REMOVE PP OR Ger IF (-1 PreAdv) (0 A) ;					# très imposant
REMOVE PP OR Ger IF (-1 AdvComp) (0 A) ;			# plus imposant
REMOVE PP OR Ger IF (0 A + &&ConcordeSN) (1 CnjCoo) (2C A + &&ConcordeSN) ;
REMOVE PP OR Ger IF (-2C A + &&ConcordeSN) (-1 CnjCoo) (0 A + &&ConcordeSN) ;

REMOVE A (0 ("situé") OR ("placé") OR ("localisé")) (1 ("en") OR ("dans") OR ("à")) ;

REMOVE A IF (NOT -4 De) (NOT -3 De) (NOT -2 De) (-1C N + Masc_strict) (NOT 0 A + Masc) (0 Ger) ;
REMOVE A IF (NOT -4 De) (NOT -3 De) (NOT -2 De) (-1C N + Fem_strict) (NOT 0 A + Fem) (0 Ger) ;	# une plaque tournant vers la droite
REMOVE A IF (NOT -4 De) (NOT -3 De) (NOT -2 De) (-1C N + Sg_strict) (NOT 0 A + Sg) (0 Ger) ;
REMOVE A IF (NOT -4 De) (NOT -3 De) (NOT -2 De) (-1C N + Pl_strict) (NOT 0 A + Pl) (0 Ger) ;
REMOVE N IF (-1C N) (NOT -1 (META:/-/r)) (0 Ger) ;	# une plaque tournant vers la droite
REMOVE Ger IF (-1 ("comme"")) (0 N) ;	# travaille comme assistant
REMOVE A IF (0 ("<consistant>"i)) (1 ("à") OR ("en")) ;

# ADJ OR VBLEX
REMOVE A IF (-1C N + Sg) (0 Verb + P3 + Sg) (1 Det) ;				# la loi fixe la composition
REMOVE A IF (-2 N + MascSg) (-1 A + MascSg) (0 Verb + P3 + Sg) (1 Det) ;
REMOVE A IF (-2 N + FemSg) (-1 A + FemSg) (0 Verb + P3 + Sg) (1 Det) ;		# la loi française fixe la composition
REMOVE A IF (-3C N + Sg) (-2 De) (-1 N) (0 Verb + P3 + Sg) (1 Det) ;
REMOVE A IF (-4C N + Sg) (-3 De) (-2 Det) (-1 N) (0 Verb + P3 + Sg) (1 Det) ;
REMOVE A IF (-4C N + MascSg) (-3 A + MascSg) (-2 De) (-1 N) (0 Verb + P3 + Sg) (1 Det) ;
REMOVE A IF (-4C N + FemSg) (-3 A + FemSg) (-2 De) (-1 N) (0 Verb + P3 + Sg) (1 Det) ;
REMOVE A IF (-5C N + MascSg) (-4 A + MascSg) (-3 De) (-2 Det) (-1 N) (0 Verb + P3 + Sg) (1 Det) ;
REMOVE A IF (-5C N + FemSg) (-4 A + FemSg) (-3 De) (-2 Det) (-1 N) (0 Verb + P3 + Sg) (1 Det) ;

REMOVE A IF (-2 N + &&ConcordeSP) (-1 Pro) (0 V + P3 + &&ConcordeSP) (1C EOS OR Det OR Prep) ;
REMOVE A IF (-2 NP + &&ConcordeSP) (-1 Pro) (0 V + P3 + &&ConcordeSP) (1C EOS OR Det OR Prep) ;
REMOVE A IF (-3 N + &&ConcordeSP) (-2 Pro) (-1 Pro) (0 V + P3 + &&ConcordeSP) ;
REMOVE A IF (-3 NP + &&ConcordeSP) (-2 Pro) (-1 Pro) (0 V + P3 + &&ConcordeSP) ;
REMOVE A IF (-3 N + &&ConcordeSP) (-2 Adv) (-1 Pro) (0 V + P3 + &&ConcordeSP) (1C EOS OR Det OR Prep OR Adv) ;
REMOVE A IF (-3 NP + &&ConcordeSP) (-2 Adv) (-1 Pro) (0 V + P3 + &&ConcordeSP) (1C EOS OR Det OR Prep OR Adv) ;
REMOVE A IF (-3 N + &&ConcordeSP) (-3 Adv) (-2 Pro) (-1 Pro) (0 V + P3 + &&ConcordeSP) ;
REMOVE A IF (-3 NP + &&ConcordeSP) (-3 Adv) (-2 Pro) (-1 Pro) (0 V + P3 + &&ConcordeSP) ;

# NOM OR VBLEX
SELECT Verb IF (-1 Ne) (0 Verb) ;
#SELECT Verb IF (-1 Ne) (0 Verb) (1 Pas) ;			# ne sort pas
#SELECT Verb IF (-1 Ne) (0 Verb) (1 Adv OR CnjAdv) (2 Pas) ;	# ne sort toutefois pas
#SELECT Verb IF (-1 Ne) (0 Verb) (1 Que) ;			# ne dure que quatre jours
#SELECT Verb IF (-1 Ne) (0 Verb) (1 Adv OR CnjAdv) (2 Que) ;

REMOVE Noun_Adj IF (-1C CnjCoo OR Rel) (0 Verb) (1C Adv) ;		# et joue également ; et pratique également
REMOVE Noun_Adj IF (-1C CnjCoo OR Rel) (0 Verb) (1 ("avec")) ;		# et joue avec

REMOVE N IF (-1C Det OR Pro) (0C N OR Verb) (NOT 1 A) (-1 Det + &&ConcordeSN) (NOT 0 N + &&ConcordeSN) ;	# les critique / le lie
REMOVE N IF (-1C Top + &&ConcordeSP) (0 V + &&ConcordeSP) (1C Det) ;		# l'Europe ferme son espace
REMOVE Adv IF (-1C Top + &&ConcordeSP) (0 V + &&ConcordeSP) (1C Det) ;		# l'Europe ferme son espace

SELECT Verb IF (0 ("tente")) (1 De) (2 Inf) ;

SELECT N IF (-1 En) (0 ("forme") OR ("signe")) (1 De) ;

# ADJ OR NOM
SELECT N IF (-1 En) (0C N OR A) (NOT 1 N) ;	# en français
SELECT A IF (-1C N + MascSg) (0C N OR A + MascSg) (1 unknown) ;
SELECT A IF (-1C N + MascPl) (0C N OR A + MascPl) (1 unknown) ;
SELECT A IF (-1C N + FemSg) (0C N OR A + FemSg) (1 unknown) ;
SELECT A IF (-1C N + FemPl) (0C N OR A + FemPl) (1 unknown) ; # en langue aborigène xxx

SELECT N + Masc IF (-1 ("femme")) (0 ("politique") OR ("médecin")) ;
SELECT N + Masc IF (-1 ("femme")) (0 ("pilote")) (NOT 1 Det OR Adv) ;

SELECT PP IF (-1C ("être") + &&ConcordeSP) (0 ("<élu>"i) + ConcordeSP) ;	# est élu premier ministre
SELECT N IF (-1C ("être") + &&ConcordeSP) (0 ("directeur") + ConcordeSP) ;
REMOVE N IF (-1C ("être") + &&ConcordeSP) (0 A + ConcordeSP) (NOT 1 A + ConcordeSP) ;	# sont acides ; est directeur sportif
SELECT N IF (-1C ("être") + &&ConcordeSP) (0 A + ConcordeSP LINK NOT 0 Adv_PreAdv) (1 A + ConcordeSP) ;	# est directeur sportif
SELECT Ser IF (0C ("être") + &&ConcordeSP) (1 A + ConcordeSP) (NOT 2 A + ConcordeSP) ;	# sont acides
SELECT Ser IF (0C ("être") + &&ConcordeSP) (1C N + ConcordeSP) ;	# est directeur sportif
REMOVE N IF (-2C ("être") + &&ConcordeSP) (-1 Adv_PreAdv) (0 A + ConcordeSP) (NOT 1 A + ConcordeSP) ;	# sont bien acides
SELECT Ser IF (0C ("être") + &&ConcordeSP) (1 Adv_PreAdv) (2 A + ConcordeSP) (NOT 3 A + ConcordeSP) ;	# sont bien acides
SELECT PreAdv IF (-1C ("être") + &&ConcordeSP) (0 Adv_PreAdv) (1 A + ConcordeSP) (NOT 2 A + ConcordeSP) ;	# sont bien acides
REMOVE N IF (-3C ("être") + &&ConcordeSP) (-2 Adv) (-1 Adv_PreAdv) (0 A + ConcordeSP) (NOT 1 A + ConcordeSP) ;	# ne sont pas bien acides
SELECT Ser IF (0C ("être") + &&ConcordeSP) (1 Adv) (2 Adv_PreAdv) (3 A + ConcordeSP) (NOT 4 A + ConcordeSP) ;	# ne sont pas bien acides
SELECT PreAdv IF (-2C ("être") + &&ConcordeSP) (-1 Adv) (0 Adv_PreAdv) (1 A + ConcordeSP) (NOT 2 A + ConcordeSP) ;	# ne sont pas bien acides

REMOVE A IF (NOT -1 N) (0 ("source")) ;
REMOVE A IF (NOT -1 N) (0 ("cible")) ;

REMOVE N OR NP IF (-1/* Barrera_Inicial_Estrict_SN) (0 Noun_Adj_PP + MascSg LINK 0 N OR NP) (1C N + MascSg) ;
REMOVE N OR NP IF (-1/* Barrera_Inicial_Estrict_SN) (0 Noun_Adj_PP + MascPl LINK 0 N OR NP) (1C N + MascPl) ;
REMOVE N OR NP IF (-1/* Barrera_Inicial_Estrict_SN) (0 Noun_Adj_PP + FemSg LINK 0 N OR NP) (1C N + FemSg) ;
REMOVE N OR NP IF (-1/* Barrera_Inicial_Estrict_SN) (0 Noun_Adj_PP + FemPl LINK 0 N OR NP) (1C N + FemPl) ;
SELECT A OR PP IF (-1/* Prep) (0 Noun_Adj_PP + FemSg LINK NOT 0 Det) (1C N + FemSg) ;
SELECT A OR PP IF (-1/* Prep) (0 Noun_Adj_PP + MascSg LINK NOT 0 Det) (1C N + MascSg) ;
SELECT A OR PP IF (-1/* Prep) (0 Noun_Adj_PP + MascPl LINK NOT 0 Det) (1C N + MascPl) ;
SELECT A OR PP IF (-1/* Prep) (0 Noun_Adj_PP + FemSg LINK NOT 0 Det) (1C N + FemSg) ;
SELECT A OR PP IF (-1/* Prep) (0 Noun_Adj_PP + FemPl LINK NOT 0 Det) (1C N + FemPl) ;
SELECT A OR PP IF (-2 Prep) (-1 Det) (0 Noun_Adj_PP + MascSg) (1C N + MascSg) ;
SELECT A OR PP IF (-2 Prep) (-1 Det) (0 Noun_Adj_PP + MascPl) (1C N + MascPl) ;
SELECT A OR PP IF (-2 Prep) (-1 Det) (0 Noun_Adj_PP + FemSg) (1C N + FemSg) ;
SELECT A OR PP IF (-2 Prep) (-1 Det) (0 Noun_Adj_PP + FemPl) (1C N + FemPl) ;
## du bas côté (bas > adj)
## en seconde période (seconde > adj)

REMOVE A OR PP IF (-2 Det + MascSg) (-1C A + MascSg) (0 Noun_Adj_PP + MascSg LINK 0 N OR NP) (1 Barrera_Final_SN OR Ant_Cog) ;
REMOVE A OR PP IF (-2 Det + FemSg) (-1C A + FemSg) (0 Noun_Adj_PP + FemSg LINK 0 N OR NP) (1 Barrera_Final_SN OR Ant_Cog) ;
REMOVE A OR PP IF (-2 Det + MascPl) (-1C A + MascPl) (0 Noun_Adj_PP + MascPl LINK 0 N OR NP) (1 Barrera_Final_SN OR Ant_Cog) ;
REMOVE A OR PP IF (-2 Det + FemPl) (-1C A + FemPl) (0 Noun_Adj_PP + FemPl LINK 0 N OR NP) (1 Barrera_Final_SN OR Ant_Cog) ;
## PERO: una densa doble capa de pelo

REMOVE A OR PP IF (-2 Det + MascSg) (-1C A + MascSg) (0 Noun_Adj_PP + MascSg LINK 0 N OR NP) (1 CM) (2C Barrera_Final_Estrict_SN) ;
REMOVE A OR PP IF (-2 Det + FemSg) (-1C A + FemSg) (0 Noun_Adj_PP + FemSg LINK 0 N OR NP) (1 CM) (2C Barrera_Final_Estrict_SN) ;
REMOVE A OR PP IF (-2 Det + MascPl) (-1C A + MascPl) (0 Noun_Adj_PP + MascPl LINK 0 N OR NP) (1 CM) (2C Barrera_Final_Estrict_SN) ;
REMOVE A OR PP IF (-2 Det + FemPl) (-1C A + FemPl) (0 Noun_Adj_PP + FemPl LINK 0 N OR NP) (1 CM) (2C Barrera_Final_Estrict_SN) ;
REMOVE A OR PP IF (-2C Verb) (-1C A + MascSg) (0 Noun_Adj_PP + MascSg LINK 0 N OR NP) (1 Barrera_Final_SN) ;
REMOVE A OR PP IF (-2C Verb) (-1C A + FemSg) (0 Noun_Adj_PP + FemSg LINK 0 N OR NP) (1 Barrera_Final_SN) ;
REMOVE A OR PP IF (-2C Verb) (-1C A + MascPl) (0 Noun_Adj_PP + MascPl LINK 0 N OR NP) (1 Barrera_Final_SN) ;
REMOVE A OR PP IF (-2C Verb) (-1C A + FemPl) (0 Noun_Adj_PP + FemPl LINK 0 N OR NP) (1 Barrera_Final_SN) ;
REMOVE A OR PP IF (-2C Verb) (-1C A + MascSg) (0 Noun_Adj_PP + MascSg LINK 0 N OR NP) (1 CM) (2C Barrera_Final_Estrict_SN) ;
REMOVE A OR PP IF (-2C Verb) (-1C A + FemSg) (0 Noun_Adj_PP + FemSg LINK 0 N OR NP) (1 CM) (2C Barrera_Final_Estrict_SN) ;
REMOVE A OR PP IF (-2C Verb) (-1C A + MascPl) (0 Noun_Adj_PP + MascPl LINK 0 N OR NP) (1 CM) (2C Barrera_Final_Estrict_SN) ;
REMOVE A OR PP IF (-2C Verb) (-1C A + FemPl) (0 Noun_Adj_PP + FemPl LINK 0 N OR NP) (1 CM) (2C Barrera_Final_Estrict_SN) ;

SELECT N IF (-2 Barrera_Inicial_SN LINK NOT 0 Verb) (-1C A + MascSg) (0 Noun_Adj_PP + MascSg LINK 0 N OR NP) (1C Barrera_Final_Estrict_SN) ;
SELECT N IF (-2 Barrera_Inicial_SN LINK NOT 0 Verb) (-1C A + FemSg) (0 Noun_Adj_PP + FemSg LINK 0 N OR NP) (1C Barrera_Final_Estrict_SN) ;
SELECT N IF (-2 Barrera_Inicial_SN LINK NOT 0 Verb) (-1C A + MascPl) (0 Noun_Adj_PP + MascPl LINK 0 N OR NP) (1C Barrera_Final_Estrict_SN) ;
SELECT N IF (-2 Barrera_Inicial_SN LINK NOT 0 Verb) (-1C A + FemPl) (0 Noun_Adj_PP + FemPl LINK 0 N OR NP) (1C Barrera_Final_Estrict_SN) ;
SELECT N IF (-3 Barrera_Inicial_SN LINK NOT 0 Verb) (-2C Det + MascSg) (-1C A + MascSg) (0 Noun_Adj_PP + MascSg LINK 0 N OR NP) (1C Barrera_Final_Estrict_SN) ;
SELECT N IF (-3 Barrera_Inicial_SN LINK NOT 0 Verb) (-2C Det + FemSg) (-1C A + FemSg) (0 Noun_Adj_PP + FemSg LINK 0 N OR NP) (1C Barrera_Final_Estrict_SN) ;
SELECT N IF (-3 Barrera_Inicial_SN LINK NOT 0 Verb) (-2C Det + MascPl) (-1C A + MascPl) (0 Noun_Adj_PP + MascPl LINK 0 N OR NP) (1C Barrera_Final_Estrict_SN) ;
SELECT N IF (-3 Barrera_Inicial_SN LINK NOT 0 Verb) (-2C Det + FemPl) (-1C A + FemPl) (0 Noun_Adj_PP + FemPl LINK 0 N OR NP) (1C Barrera_Final_Estrict_SN) ;

SELECT A IF (-2/* Det + &&ConcordeSN) (-1 AdjOrd + &&ConcordeSN) (0 AdjPre + &&ConcordeSN) (1 N + &&ConcordeSN) ; # les premières grandes élections
SELECT N IF (-3/* Det + &&ConcordeSN) (-2 AdjOrd + &&ConcordeSN) (-1 AdjPre + &&ConcordeSN) (0 N + &&ConcordeSN) ; # les premières grandes élections
SELECT N IF (-2/* Det + &&ConcordeSN) (-1 AdjPre + &&ConcordeSN OR AdjOrd + &&ConcordeSN ) (0 N + &&ConcordeSN) ;
SELECT N IF (-1 AdjOrd + &&ConcordeSN ) (0 N + &&ConcordeSN) ;
SELECT A IF (-2C N_Adj + &&ConcordeSN) (-1 AdjPre + &&ConcordeSN) (0 N + &&ConcordeSN) ;	# musique sacrée protestante
SELECT N IF (-1 AdjPre + &&ConcordeSN ) (0 N + &&ConcordeSN) ;

SELECT N IF (-1 DetDef + &&ConcordeSN OR DetDem + &&ConcordeSN) (0 AdjOrd + &&ConcordeSN) (NOT 1 N + &&ConcordeSN) ;	# les premiers
SELECT N IF (-2 DetDef + &&ConcordeSN OR DetDem + &&ConcordeSN) (-1 Num) (0 AdjOrd + &&ConcordeSN) (NOT 1 N + &&ConcordeSN) ;	# les deux premiers

# DET NOM ADJ
REMOVE V OR Vbmod IF (-1 Det + MascSg) (0 Noun_Adj_PP + MascSg LINK 0 N OR NP) (1 Adj_PP + MascSg) ;
REMOVE V OR Vbmod IF (-1 Det + MascPl) (0 Noun_Adj_PP + MascPl LINK 0 N OR NP) (1 Adj_PP + MascPl) ;
REMOVE V OR Vbmod IF (-1 Det + FemSg) (0 Noun_Adj_PP + FemSg LINK 0 N OR NP) (1 Adj_PP + FemSg) ;
REMOVE V OR Vbmod IF (-1 Det + FemPl) (0 Noun_Adj_PP + FemPl LINK 0 N OR NP) (1 Adj_PP + FemPl) ;
REMOVE V OR Vbmod IF (-1/* Prep) (0 Noun_Adj_PP + MascSg LINK 0 N OR NP) (1 Adj_PP + MascSg) ;
REMOVE V OR Vbmod IF (-1/* Prep) (0 Noun_Adj_PP + MascPl LINK 0 N OR NP) (1 Adj_PP + MascPl) ;
REMOVE V OR Vbmod IF (-1/* Prep) (0 Noun_Adj_PP + MascPl LINK 0 N OR NP) (1 Adj_PP + MascPl) ;
REMOVE V OR Vbmod IF (-1/* Prep) (0 Noun_Adj_PP + FemSg LINK 0 N OR NP) (1 Adj_PP + FemSg) ;
# le courrant important
# le pouvoir actuel
# du courrant important

SELECT N IF (-1 Det + Def + &&ConcordeSN) (0 N + &&ConcordeSN) (1 Ant OR Cog OR unknownMajIni) ;	# le chanteur Rolland Hayes
SELECT N IF (-2 NP OR unknownMajIni) (-1 Lpar) (1 Rpar) ;	# Rolland Hayes (chanteur)

# NOM ADJ

SELECT A + &&ConcordeSN IF (-2 Det + &&ConcordeSN) (-1 ("plus") OR ("moins")) (0 A + &&ConcordeSN) (1 N + &&ConcordeSN) ;	# la plus large défaite

SELECT PP IF (-1 ("une fois")) ;
SELECT PP IF (-2 ("un") + FemSg) (-1 ("fois")) ;

SELECT N (0 ("chanteur")) (1 De) ;	# chanteur de rock
SELECT N (0 ("vague")) (1 De) (2 N) ;	# vague de chaleur

SELECT N + &&ConcordeSN (-1C N) (-1 N + &&ConcordeSN) (-1 (META:/-/r)) (0 N + &&ConcordeSN) ;	# comédien-chanteur

REMOVE A OR PP IF (-1/* Barrera_Inicial_Estrict_SN) (0 Noun_Adj_PP + &&ConcordeSN LINK 0 N OR NP) (1 Adj_PP + &&ConcordeSN) ;

## jóvenes inteligentes (jóvenes > n)
## jóvenes encapuchadas (jóvenes > n)
## escrito largo (escrito > n)

REMOVE N IF (-3 N + &&ConcordeSN OR CM) (-2C Adj_PP + &&ConcordeSN) (-1 CnjCoo) (0 Noun_Adj + &&ConcordeSN) (NOT 0 Trencat) ;	# flux énorme et malin venu de
REMOVE N IF (-3 N + &&ConcordeSN OR CM) (-2C Adj_PP + &&ConcordeSN) (-1 CM) (0 Noun_Adj + &&ConcordeSN) (NOT 0 Trencat) (1 CnjCoo) ;	# flux énorme, malin et

REMOVE Adj_PP IF (NOT -1 N OR A OR PP OR Ser OR Adv OR PreAdv) (0 Noun_Adj + &&ConcordeSN LINK 0 N OR NP) (NOT 0 Trencat OR AdjPre) (1 Adj_PP + &&ConcordeSN) ;
REMOVE A IF (-1/* Det + &&ConcordeSN OR Prep) (0 N + &&ConcordeSN) (NOT 0 Trencat OR AdjPre) (1 Adj_PP + &&ConcordeSN) ;	# la cité épiscopale
REMOVE A IF (-1/* Det + &&ConcordeSN OR Prep) (0 N + &&ConcordeSN) (1 PreAdv) (2 Adj_PP + &&ConcordeSN) ;	# des critiques très positives
REMOVE N IF (-2/* Det + &&ConcordeSN OR Prep) (-1C N + &&ConcordeSN) (0 Adj_PP + &&ConcordeSN) ;	# l'armée perse
REMOVE N IF (-1C N + &&ConcordeSN) (0C Noun_Adj + &&ConcordeSN) ;	# métaphore mystique
REMOVE A OR PP IF (-2/* Det + MascSg OR Prep) (-1C A + MascSg) (0 Noun_Adj + MascSg LINK 0 N OR NP) (NOT 0 AdjPre OR AdjOrd OR Trencat) (1 Adj_PP + MascSg) ;
REMOVE A OR PP IF (-2/* Det + MascPl OR Prep) (-1C A + MascPl) (0 Noun_Adj + MascPl LINK 0 N OR NP) (NOT 0 AdjPre OR AdjOrd OR Trencat) (1 Adj_PP + MascPl) ;
REMOVE A OR PP IF (-2/* Det + FemSg OR Prep) (-1C A + FemSg) (0 Noun_Adj + FemSg LINK 0 N OR NP) (NOT 0 AdjPre OR AdjOrd) (1 Adj_PP + FemSg) ;
REMOVE A OR PP IF (-2/* Det + FemPl OR Prep) (-1C A + FemPl) (0 Noun_Adj + FemPl LINK 0 N OR NP) (NOT 0 AdjPre OR AdjOrd) (1 Adj_PP + FemPl) ;
REMOVE N IF (-3/* Det + MascSg OR Prep) (-2 A + MascSg) (-1C N + MascSg) (0 Adj_PP + MascSg) ;
REMOVE N IF (-3/* Det + MascPl OR Prep) (-2 A + MascPl) (-1C N + MascPl) (0 Adj_PP + MascPl) ;
REMOVE N IF (-3 Det + FemSg OR Prep) (-2 A + FemSg) (-1C N + FemSg) (0 Adj_PP + FemSg) ;
REMOVE N IF (-3 Det + FemPl OR Prep) (-2 A + FemPl) (-1C N + FemPl) (0 Adj_PP + FemPl) ;
# l'immense armée perse

REMOVE PP IF (NOT -1 N OR Haver OR Ser OR Adv) (0 PP + MascSg LINK 0 N OR NP) (1 Adj_PP + MascSg) ;
REMOVE PP IF (NOT -1 N OR Haver OR Ser OR Adv) (0 PP + MascPl LINK 0 N OR NP) (1 Adj_PP + MascPl) ;
REMOVE PP IF (NOT -1 N OR Haver OR Ser OR Adv) (0 PP + FemSg LINK 0 N OR NP) (1 Adj_PP + FemSg) ;
REMOVE PP IF (NOT -1 N OR Haver OR Ser OR Adv) (0 PP + FemPl LINK 0 N OR NP) (1 Adj_PP + FemPl) ;
## vieron jóvenes inteligentes (jóvenes > n)
## vieron jóvenes encapuchadas (jóvenes > n)
## vieron abisenios inteligentes (jóvenes > n)
## PROBLEMA: con alto contenido (alto > n/adv); ídem per a adj ambigus típicament preposats: alto, bajo, mal (+flaco favor, etc.)
## Està fet més malament

REMOVE N IF (-1 N + &&ConcordeSN) (0 Adj_PP + &&ConcordeSN) (NOT 0 PreAdv OR Est) (NOT -1 AdjPre OR AdjOrd) (1 Adj_PP + &&ConcordeSN) (NOT 0 Adv) ;
## "la Primera Conferencia Americana celebrada" (pqè Americana > adj)
## però: simbolisme molt complex
## els avions segons diversos criteris

REMOVE N IF (-2 Noun_NP + &&ConcordeSN + &&ConcordeSP) (-1C VerbAttr + &&ConcordeSP) (0 Noun_Adj_PP + &&ConcordeSN) ;	# Marie est bonne
REMOVE N IF (-3 Noun_NP + &&ConcordeSN + &&ConcordeSP) (-2C Haver + &&ConcordeSP) (-1C PP + MascSg) (0 Noun_Adj_PP + &&ConcordeSN) ;	# Marie a été bonne
REMOVE N IF (-3 Noun_NP + &&ConcordeSN + &&ConcordeSP) (-2C VerbAttr + &&ConcordeSP) (-1 Adv) (0 Noun_Adj_PP + &&ConcordeSN) ;	# Marie est toujours bonne
REMOVE N IF (-4 Noun_NP + &&ConcordeSN + &&ConcordeSP) (-3C Haver + &&ConcordeSP) (-2 Adv) (-1C PP + MascSg) (0 Noun_Adj_PP + &&ConcordeSN) ;	# Marie a toujours été bonne
REMOVE N IF (-4 Noun_NP + &&ConcordeSN + &&ConcordeSP) (-3 Adv) (-2C VerbAttr + &&ConcordeSP) (-1 Adv) (0 Noun_Adj_PP + &&ConcordeSN) ;	# Marie n'est pas bonne
REMOVE N IF (-5 Noun_NP + &&ConcordeSN + &&ConcordeSP) (-4 Adv) (-3C Haver + &&ConcordeSP) (-2 Adv) (-1C PP + MascSg) (0 Noun_Adj_PP + &&ConcordeSN) ;	# Marie n'a pas été bonne
REMOVE N IF (-5 Noun_NP + &&ConcordeSN + &&ConcordeSP) (-4 Adv) (-3C VerbAttr + &&ConcordeSP) (-2 Adv) (-1 Adv) (0 Noun_Adj_PP + &&ConcordeSN) ;	# Marie n'est pas toujours bonne
REMOVE N IF (-6 Noun_NP + &&ConcordeSN + &&ConcordeSP) (-5 Adv) (-4C Haver + &&ConcordeSP) (-3 Adv) (-2 Adv) (-1C PP + MascSg) (0 Noun_Adj_PP + &&ConcordeSN) ;	# Marie n'a pas toujours été bonne

# NOM ADJ ADJ

REMOVE N IF (-2 N + &&ConcordeSN) (-1 Adj_PP + &&ConcordeSN) (0 Adj_PP + &&ConcordeSN) (NOT 0 Det OR Ger OR Est) ;

# NOM ADJ ADJ ADJ

REMOVE N IF (-3 N + &&ConcordeSN) (-2 N + &&ConcordeSN) (-1 Adj_PP + &&ConcordeSN) (0 Adj_PP + &&ConcordeSN) (NOT 0 Det OR Ger OR Est) ;
## "la Primera Conferencia Internacional Americana celebrada" (pqè Americana > adj)

# NOM ADJ ADJ ADJ ADJ

REMOVE N IF (-4 N + &&ConcordeSN) (-3 N + &&ConcordeSN) (-2 N + &&ConcordeSN) (-1 Adj_PP + &&ConcordeSN) (0 Adj_PP + &&ConcordeSN) (NOT 0 Det OR Ger OR Est) ;
## "la Primera Conferencia Internacional Americana celebrada" (pqè Americana > adj)

#REMOVE N IF (-3 N + MascSg) (-2 Adj_PP + MascSg) (-1 Adj_PP + MascSg) (0 Adj_PP + MascSg) (*1 Adj_PP + MascSg) ;
## líder obrero norteamericano afiliado (afiliado > adj)

#REMOVE A OR PP IF (NOT -1 N) (0 Noun_Adj_PP + MascSg) (1 Adj_PP + MascSg) (*2 Adj_PP + MascSg BARRIER NO_Adj_PP) ; # at list one Adj_PP

# NOM ADV ADJ

SELECT A IF (-2C N + MascSg) (-1C Adv) (0 A + MascSg LINK NOT 0 Det) (NOT 0 Verb + Pers) ;
SELECT A IF (-2C N + FemSg) (-1C Adv) (0 A + FemSg LINK NOT 0 Det) (NOT 0 Verb + Pers) ;
SELECT A IF (-2C N + MascPl) (-1C Adv) (0 A + MascPl LINK NOT 0 Det) (NOT 0 Verb + Pers) ;
SELECT A IF (-2C N + FemPl) (-1C Adv) (0 A + FemPl LINK NOT 0 Det) (NOT 0 Verb + Pers) ;
SELECT A IF (-3/* Barrera_Inicial_SN) (-2 N + MascSg) (-1C Adv) (0 A + MascSg LINK NOT 0 Det) ;
SELECT A IF (-3/* Barrera_Inicial_SN) (-2 N + FemSg) (-1C Adv) (0 A + FemSg LINK NOT 0 Det) ;
SELECT A IF (-3/* Barrera_Inicial_SN) (-2 N + MascPl) (-1C Adv) (0 A + MascPl LINK NOT 0 Det) ;
SELECT A IF (-3/* Barrera_Inicial_SN) (-2 N + FemPl) (-1C Adv) (0 A + FemPl LINK NOT 0 Det) ;
# ". Civiles étnicamente croatas"

# NOM DE NOM ADJ

SELECT A OR PP IF (-3 N + &&ConcordeSN) (-2 De) (-1C N) (0 Adj_PP + &&ConcordeSN) (NOT 0 Verb + P3) (1 Barrera_Final_SN) ;	# barème de points suivant :

# N OR ADV

REMOVE Adv IF (-1C Prep) (0 Adv) (0 N + &&ConcordeSN) (1 Adj_PP + &&ConcordeSN) ;	# à pas comptés
REMOVE Adv IF (-1/* Det + &&ConcordeSN) (0 N + &&ConcordeSN) ;		# jouer du piano

# N OR PP

SELECT N IF (-1 ("court") + &&ConcordeSN) (0 ("portée") + &&ConcordeSN) ;
SELECT N IF (-1 ("long") + &&ConcordeSN) (0 ("portée") + &&ConcordeSN) ;

# N OR VBLEX

SELECT N IF (0 ("<Ligue>")) (1 Num) ;
SELECT N IF (0 ("<Ligue>")) ;

REMOVE Inf IF (-1 BOS) (0 N) (1 De) ;		# Conseiller du roi

REMOVE V IF (-2C Verb LINK NOT 0 PP) (-1 Det + &&ConcordeSN) (0 N + &&ConcordeSN) ;	# de tenir le rythme
REMOVE V IF (-3 Haver) (-2 PP) (-1 Det + &&ConcordeSN) (0 N + &&ConcordeSN) ;		# j'ai tenu le rythme

SELECT V IF (0 ("<court>"i)) (1 ("à") OR ("vers") OR ("chez")) ;	# le débat démocratique court à sa perte
SELECT N IF (0 ("<Cercle>")) ;	

SELECT N IF (-1 ("en")) (0 ("tenaille")) ;
SELECT N IF (-1 ("en")) (0 ("<corse>"i)) ;

# A OR PP

#SELECT PP IF (-1 Ser) (0 A OR PP) (1 ("par")) ;
#SELECT PP IF (-2 Ser) (-1 Adv) (0 A OR PP) (1 ("par")) ;
#SELECT PP IF (-2 Ser) (-1 Adv) (0 A OR PP) (1 Adv) (2 ("par")) ;
SELECT PP IF (0 A OR PP) (1 ("par")) ;
SELECT PP IF (0 A OR PP) (1 Adv) (2 ("par")) ;
SELECT PP IF (-1 Ser) (-2 ("ne")) (0 A OR PP) (1 Que) (2 ("par")) ;
# Les cours seront assurés par Michel Laine

SELECT PP IF (-1 Ser) (0 ("mort") OR ("né")) ;
SELECT PP IF (-2 Ser) (-1 Adv) (0 ("mort") OR ("né")) ;

# V OR N

REMOVE N IF (-1 CnjCoo) (0 V) (1 Det + MascSg) (2 N + MascSg) ;
REMOVE N IF (-1 CnjCoo) (0 V) (1 Det + FemSg) (2 N + FemSg) ;	# et ferme une dizaine de magasins
REMOVE N IF (-1 CnjCoo) (0 V) (1 Det + MascPl OR Num) (2 N + MascPl) ;
REMOVE N IF (-1 CnjCoo) (0 V) (1 Det + FemPl OR Num) (2 N + FemPl) ;

REMOVE N IF (-1 CnjCoo) (0 V) (1 ("<du>")) (2 N + Sg) ;
REMOVE N IF (-1 CnjCoo) (0 V) (1 ("<des>")) (2 N + Pl) ;

REMOVE N IF (-2C V) (-1 CnjCoo) (0 V) ;
REMOVE N IF (-3C V) (-2 Adv) (-1 CnjCoo) (0 V) ;	# ignore superbement ou juge tout autre usage

SELECT N IF (-2 V) (-1 ("en")) (0 V) ;			# mettre en vente, faire en sorte, prendre en compte
REMOVE N IF (NOT -1/* A OR Det) (0 V) (1C Det) ;	# juge un autre usage
REMOVE N IF (NOT -1/* A OR Det) (0 V) (1 PreDet) ;	# juge tout autre usage

SELECT N IF (0 ("route")) (1 Num) ;	# route 28
SELECT N IF (0 ("route")) (1 unknown) ;	# route N28
SELECT N IF (-1 ("en")) (0 ("route")) ;

# V OR A

REMOVE V IF (-1 N + Sg) (0 ("rebelle") + Sg) ;

# V OR Adv
REMOVE Adv IF (NOT -2 Adv) (-1 CnjCoo) (0 V) (1 Det + MascSg) (2 N + MascSg) ;
REMOVE Adv IF (NOT -2 Adv) (-1 CnjCoo) (0 V) (1 Det + FemSg) (2 N + FemSg) ;	# et ferme une dizaine de magasins
REMOVE Adv IF (NOT -2 Adv) (-1 CnjCoo) (0 V) (1 Det + MascPl) (2 N + MascPl) ;
REMOVE Adv IF (NOT -2 Adv) (-1 CnjCoo) (0 V) (1 Det + FemPl) (2 N + FemPl) ;

REMOVE Adv IF (-1 CnjCoo) (0 V) (1 ("<du>")) (2 N + Sg) ;
REMOVE Adv IF (-1 CnjCoo) (0 V) (1 ("<des>")) (2 N + Pl) ;

# V (P3) OR PP
REMOVE PP IF (-1 N + MascSg) (0 V + P3 + Sg) (0 PP) (NOT 0 PP + MascSg) ;
REMOVE PP IF (-1 N + MascPl) (0 V + P3 + Pl) (0 PP) (NOT 0 PP + MascPl) ;
REMOVE PP IF (-1 N + FemSg) (0 V + P3 + Sg) (0 PP) (NOT 0 PP + FemSg) ;
REMOVE PP IF (-1 N + FemPl) (0 V + P3 + Pl) (0 PP) (NOT 0 PP + FemPl) ;
REMOVE PP IF (-4 N + MascSg) (-3 Prep) (-2 Det) (-1 N) (0 V + P3 + Sg) (0 PP) (NOT 0 PP + MascSg) ;
REMOVE PP IF (-4 N + MascPl) (-3 Prep) (-2 Det) (-1 N) (0 V + P3 + Pl) (0 PP) (NOT 0 PP + MascPl) ;
REMOVE PP IF (-4 N + FemSg) (-3 Prep) (-2 Det) (-1 N) (0 V + P3 + Sg) (0 PP) (NOT 0 PP + FemSg) ;
REMOVE PP IF (-4 N + FemPl) (-3 Prep) (-2 Det) (-1 N) (0 V + P3 + Pl) (0 PP) (NOT 0 PP + FemPl) ;
REMOVE PP IF (-5 N + MascSg) (-4 Prep) (-3 Det) (-2 N) (-1 A) (0 V + P3 + Sg) (0 PP) (NOT 0 PP + MascSg) ;
REMOVE PP IF (-5 N + MascPl) (-4 Prep) (-3 Det) (-2 N) (-1 A) (0 V + P3 + Pl) (0 PP) (NOT 0 PP + MascPl) ;
REMOVE PP IF (-5 N + FemSg) (-4 Prep) (-3 Det) (-2 N) (-1 A) (0 V + P3 + Sg) (0 PP) (NOT 0 PP + FemSg) ;
REMOVE PP IF (-5 N + FemPl) (-4 Prep) (-3 Det) (-2 N) (-1 A) (0 V + P3 + Pl) (0 PP) (NOT 0 PP + FemPl) ;
REMOVE PP IF (-5 N + MascSg) (-4 Prep) (-3 Det) (-2 A) (-1 N) (0 V + P3 + Sg) (0 PP) (NOT 0 PP + MascSg) ;
REMOVE PP IF (-5 N + MascPl) (-4 Prep) (-3 Det) (-2 A) (-1 N) (0 V + P3 + Pl) (0 PP) (NOT 0 PP + MascPl) ;
REMOVE PP IF (-5 N + FemSg) (-4 Prep) (-3 Det) (-2 A) (-1 N) (0 V + P3 + Sg) (0 PP) (NOT 0 PP + FemSg) ;
REMOVE PP IF (-5 N + FemPl) (-4 Prep) (-3 Det) (-2 A) (-1 N) (0 V + P3 + Pl) (0 PP) (NOT 0 PP + FemPl) ;
# la motorisation de ces pratiques réduit drastiquement leur population

REMOVE Noun_Adj_PP IF (-2 Det + MascSg) (-1 N + MascSg) (NOT 0 Noun_Adj_PP + MascSg) (0 V + P3 + Sg) ;	# le mort frappe à la porte
REMOVE Noun_Adj_PP IF (-2 Det + FemSg) (-1 N + FemSg) (NOT 0 Noun_Adj_PP + FemSg) (0 V + P3 + Sg) ;
REMOVE Noun_Adj_PP IF (-2 Det + MascPl) (-1 N + MascPl) (NOT 0 Noun_Adj_PP + MascPl) (0 V + P3 + Pl) ;
REMOVE Noun_Adj_PP IF (-2 Det + FemPl) (-1 N + FemPl) (NOT 0 Noun_Adj_PP + FemPl) (0 V + P3 + Pl) ;
REMOVE Noun_Adj_PP IF (-3 Det + MascSg) (-2 N_Adj + MascSg) (-1 N_Adj + MascSg) (NOT 0 Noun_Adj_PP + MascSg) (0 V + P3 + Sg) ;
REMOVE Noun_Adj_PP IF (-3 Det + FemSg) (-2 N_Adj + FemSg) (-1 N_Adj + FemSg) (NOT 0 Noun_Adj_PP + FemSg) (0 V + P3 + Sg) ;	# L'armée américaine contrôle encore l'aéroport
REMOVE Noun_Adj_PP IF (-3 Det + MascPl) (-2 N_Adj + MascPl) (-1 N_Adj + MascPl) (NOT 0 Noun_Adj_PP + MascPl) (0 V + P3 + Pl) ;
REMOVE Noun_Adj_PP IF (-3 Det + FemPl) (-2 N_Adj + FemPl) (-1 N_Adj + FemPl) (NOT 0 Noun_Adj_PP + FemPl) (0 V + P3 + Pl) ;

SELECT Inf IF (0 Être) (-1 Vbmod) ;
  ## Ce doit être Jean !
SELECT N IF (-1 ("<la>"i)) (0 ("personne")) ;
SELECT N IF (-1 ("<une>"i)) (0 ("personne")) ;
SELECT N IF (-1 ("<cette>"i)) (0 ("personne")) ;
SELECT N IF (-1 ("par")) (0 ("personne")) ;
REMOVE N IF (-1 Pour) (0 ("personne")) ;

SELECT Prn IF (0 ("certains")) (1C Verb LINK 0 Verb + Pl + Pers) ;
SELECT Prn IF (0 ("certains")) (1 Adv) (2C Verb LINK 0 Verb + Pl + Pers) ;
# certains ont la mine défaite
REMOVE A OR Det IF (0 ("certains")) (NOT -1 N OR A) ;
SELECT Det IF (0 ("certains")) (1 N) (NOT 1 Verb + Pl + Pers) (NOT 1 Adv) ;
# que certains élus très proches

SELECT N IF (-1 Num) (0 ("dixième") OR ("centième") OR ("millième")) ;

REMOVE Verb IF (-1* NP BARRIER (*) - NP LINK -1 À) ;

#SELECT Det + &&ConcordeSN IF (-1 BOS OR CM) (0 Son + &&ConcordeSN) (1 N + &&ConcordeSN) ;

#
# Pour éviter la traduction (partielle) de toponymes (s'ils ne sont pas déjà sur les dicos)
#
# Ces règles marchent, mais il y a un bug qui elimine le blanc après le merge. C'est pourquoi, pour le moment, elles sont commentées

#MERGECOHORTS ("<$1-$2-$3-$4-$5>"v "\\*$1-$2-$3-$4-$5"v) ("<(.+)>"r) (0 ("<Saint>") OR ("<Sainte>")) (0 (META:/-/r)) (1 (META:/-/r)) (2 (META:/-/r)) (3 (META:/-/r)) WITH (1 ("<(.+)>"r)) (2 ("<(.+)>"r)) (3 ("<(.+)>"r)) (4 ("<(.+)>"r)) ;	# Saint-Jean-Pied-de-Port
#MERGECOHORTS ("<$1-$2-$3-$4>"v "\\*$1-$2-$3-$4"v) ("<(.+)>"r) (0 ("<Saint>") OR ("<Sainte>")) (0 (META:/-/r)) (1 (META:/-/r)) (2 (META:/-/r)) WITH (1 ("<(.+)>"r)) (2 ("<(.+)>"r)) (3 ("<(.+)>"r)) ;	# Saint-Jean-de-Luz
#MERGECOHORTS ("<$1-$2-$3>"v "\\*$1-$2-$3"v) ("<(.+)>"r) (0 ("<Saint>") OR ("<Sainte>")) (0 (META:/-/r)) (1 (META:/-/r)) WITH (1 ("<(.+)>"r)) (2 ("<(.+)>"r)) ;	# Saint-Jean-Baptiste
#MERGECOHORTS ("<$1-$2>"v "\\*$1-$2"v) ("<(.+)>"r) (0 ("<Saint>") OR ("<Sainte>")) (0 (META:/-/r)) WITH (1 ("<(.+)>"r)) ;	# Saint-Jean

#MERGECOHORTS ("<$1-$2-$3-$4>"v "\\*$1-$2-$3-$4"v) ("<(.+)>"r) (1 Prep) (0 (META:/-/r)) (1 (META:/-/r)) (2 (META:/-/r)) WITH (1 ("<(.+)>"r)) (2 ("<(.+)>"r)) (3 ("<(.+)>"r)) ;	# Francfort-sur-le-Main
#MERGECOHORTS ("<$1-$2-$3>"v "\\*$1-$2-$3"v) ("<(.+)>"r) (1 Prep) (0 (META:/-/r)) (1 (META:/-/r)) WITH (1 ("<(.+)>"r)) (2 ("<(.+)>"r)) ;	# Bruyères-sur-Oise


REMOVE Suiver IF (0 Suivre) ;

SELECT Ger IF (-2 DetInd OR Num) (-1 UniteTemps) (0 Durant) (NOT 1 Det) ;
REMOVE Ger IF (-2 DetInd OR Num) (-1 UniteTemps) (0 Durant) (1 Det) ;
SELECT Ger IF (-2 DetPos) (-1 ("vie")) (0 Durant) (NOT 1 Det) ;
REMOVE Ger IF (-2 DetPos) (-1 ("vie")) (0 Durant) (1 Det) ;



#patchs per Revirada
REMOVE V IF (0 N) (0 ("<politique>"i) OR ("<permanente>"i) OR ("<anglaise>"i) OR ("<grecque>"i) OR ("<chinoise>"i) OR ("<rose>"i) OR ("<punt>"i) OR ("<musique>"i)) ;
REMOVE V IF (0 ("<intime>"i)) (NOT -1 Pron) (NOT 1 Pron) ;
REMOVE A IF (0 ("<amène>"i)) (NOT -1 N + Sg OR PreAdv OR Adv) (NOT -2 ("et") OR ("ou")) ;
REMOVE A IF (0 ("<amène>"i)) (NOT -3 A + Sg) (NOT -2 ("et") OR ("ou")) ;
REMOVE N IF (0 ("<vers>"i)) (1 Num) ;
REMOVE V IF (0 ("<Musée>")) ;

REMOVE V IF (0 ("entre")) (1 NP) (2 Cm OR ("et")) (3 NP) ;
REMOVE V IF (0 ("entre")) (1 Num) (2 Cm OR ("et")) (3 Num) ;
REMOVE V IF (0 ("entre")) (1 Det) (2 N) (3 Cm OR ("et")) (4 Det) (5 N) ;
REMOVE V IF (0 ("entre")) (1 NP) (2 Cm OR ("et")) (3 Det) (4 N) ;
REMOVE V IF (0 ("entre")) (1 Prn) (2 Cm OR ("et")) (3 Prn) ;

REMOVE V IF (0 ("<politique>"i) OR ("<politiques>"i)) ;

REMOVE V IF (0 ("sec")) (-1 N + MascSg) ;

REMOVE NP IF (0 ("<Tous>")) ;

REMOVE A IF (0 ("<leur>")) (1 N + Sg OR A + Sg) ;
REMOVE A IF (0 ("<leurs>")) (1 N + Pl OR A + Pl) ;

REMOVE Prep IF (0 ("<en train de>")) (1 N) ;
